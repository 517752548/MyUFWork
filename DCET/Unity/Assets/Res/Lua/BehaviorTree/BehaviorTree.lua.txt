-- Generated by CSharp.lua Compiler
local System = System
local DCET = DCET
System.namespace("DCET", function (namespace)
  namespace.class("BehaviorTreeAwakeSystem", function (namespace)
    local Awake
    Awake = function (this, self, behaviorTree)
      self:Awake(behaviorTree)
    end
    return {
      base = function (out)
        return {
          out.DCET.AwakeSystem_2(out.DCET.BehaviorTree, out.BehaviorDesigner.Runtime.BehaviorTree)
        }
      end,
      Awake = Awake,
      __metadata__ = function (out)
        return {
          class = { 0x6, out.DCET.ObjectSystemAttribute() }
        }
      end
    }
  end)

  namespace.class("BehaviorTree", function (namespace)
    local Awake, EnableBehaior, DisableBehavior, Dispose, __ctor__
    __ctor__ = function (this)
      DCET.Entity.__ctor__(this)
    end
    Awake = function (this, behaviorTree)
      this.Behavior = behaviorTree
    end
    EnableBehaior = function (this)
      local default = this.Behavior
      if default ~= nil then
        default:EnableBehavior()
      end
    end
    DisableBehavior = function (this)
      local default = this.Behavior
      if default ~= nil then
        default:DisableBehavior()
      end
    end
    Dispose = function (this)
      if this:getIsDisposed() then
        return
      end

      DCET.Entity.Dispose(this)

      this.Behavior = nil
    end
    return {
      base = function (out)
        return {
          out.DCET.Entity
        }
      end,
      Awake = Awake,
      EnableBehaior = EnableBehaior,
      DisableBehavior = DisableBehavior,
      Dispose = Dispose,
      __ctor__ = __ctor__
    }
  end)
end)
