-- Generated by CSharp.lua Compiler
local System = System
local DCET = DCET
local FairyGUI = FairyGUI
local DCET
System.import(function (out)
  DCET = out.DCET
end)
System.namespace("DCET", function (namespace)
  namespace.class("FUIComponentAwakeSystem", function (namespace)
    local Awake
    Awake = function (this, self)
      self.Root = DCET.EntityFactory.Create2(DCET.Game.Scene, FairyGUI.GRoot.getinst(), DCET.FUI, FairyGUI.GObject)
    end
    return {
      base = function (out)
        return {
          out.DCET.AwakeSystem_1(out.DCET.FUIComponent)
        }
      end,
      Awake = Awake,
      __metadata__ = function (out)
        return {
          class = { 0x6, out.DCET.ObjectSystemAttribute() }
        }
      end
    }
  end)

  -- <summary>
  -- 管理所有顶层UI, 顶层UI都是GRoot的孩子
  -- </summary>
  namespace.class("FUIComponent", function (namespace)
    local Dispose, Add, Remove, Get, GetAll, Clear, __ctor__
    __ctor__ = function (this)
      DCET.Entity.__ctor__(this)
    end
    Dispose = function (this)
      if this:getIsDisposed() then
        return
      end

      DCET.Entity.Dispose(this)

      local default = this.Root
      if default ~= nil then
        default:Dispose()
      end
      this.Root = nil
    end
    Add = function (this, ui, asChildGObject)
      local default = this.Root
      if default ~= nil then
        default:Add(ui, asChildGObject)
      end
    end
    Remove = function (this, name)
      local default = this.Root
      if default ~= nil then
        default:Remove(name)
      end
    end
    Get = function (this, name)
      local default = this.Root
      if default ~= nil then
        default = default:Get(name)
      end
      return default
    end
    GetAll = function (this)
      local default = this.Root
      if default ~= nil then
        default = default:GetAll()
      end
      return default
    end
    Clear = function (this)
      local childrens = GetAll(this)

      if childrens ~= nil then
        for _, fui in System.each(childrens) do
          Remove(this, fui:getName())
        end
      end
    end
    return {
      base = function (out)
        return {
          out.DCET.Entity
        }
      end,
      Dispose = Dispose,
      Add = Add,
      Remove = Remove,
      Get = Get,
      GetAll = GetAll,
      Clear = Clear,
      __ctor__ = __ctor__
    }
  end)
end)
