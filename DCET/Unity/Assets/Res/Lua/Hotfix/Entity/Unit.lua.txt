-- Generated by CSharp.lua Compiler
local System = System
local DCETRuntime = DCETRuntime
local UnityEngine = UnityEngine
System.namespace("DCET", function (namespace)
  namespace.class("UnitAwakeSystem", function (namespace)
    local Awake
    Awake = function (this, self, gameObject)
      self:Awake(gameObject)
    end
    return {
      base = function (out)
        return {
          out.DCET.AwakeSystem_2(out.DCET.Unit, out.UnityEngine.GameObject)
        }
      end,
      Awake = Awake,
      __metadata__ = function (out)
        return {
          class = { 0x6, out.DCET.ObjectSystemAttribute() }
        }
      end
    }
  end)

  namespace.class("Unit", function (namespace)
    local Awake, getPosition, setPosition, getRotation, setRotation, Dispose, __ctor__
    __ctor__ = function (this)
      System.base(this).__ctor__(this)
    end
    Awake = function (this, gameObject)
      this.ViewGO = gameObject

      local componentView = System.as(this.ViewGO:AddComponent(System.typeof(DCETRuntime.ComponentView)), DCETRuntime.ComponentView)

      if UnityEngine.Object.op_Implicit(componentView) then
        componentView:setComponent(this)
      end
    end
    getPosition = function (this)
      return this.ViewGO:gettransform():getposition()
    end
    setPosition = function (this, value)
      this.ViewGO:gettransform():setposition(value)
    end
    getRotation = function (this)
      return this.ViewGO:gettransform():getrotation()
    end
    setRotation = function (this, value)
      this.ViewGO:gettransform():setrotation(value)
    end
    Dispose = function (this)
      if this:getIsDisposed() then
        return
      end

      System.base(this).Dispose(this)
    end
    return {
      base = function (out)
        return {
          out.DCET.Entity
        }
      end,
      Awake = Awake,
      getPosition = getPosition,
      setPosition = setPosition,
      getRotation = getRotation,
      setRotation = setRotation,
      Dispose = Dispose,
      __ctor__ = __ctor__,
      __metadata__ = function (out)
        return {
          class = { 0x6, out.DCET.HideInHierarchy() }
        }
      end
    }
  end)
end)
