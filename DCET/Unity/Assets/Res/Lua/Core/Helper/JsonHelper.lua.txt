-- Generated by CSharp.lua Compiler
local System = System
System.namespace("DCET", function (namespace)
  namespace.class("JsonHelper", function (namespace)
    local ToJson, FromJson, static
    static = function (this)
      local rapidJson = require 'rapidjson'
      local rapidJsonDecode = rapidJson.decode
      local function fromJsonTable(t, T)
        for k, v in pairs(t) do
      	if v == rapidJson.null then
      	  t[k] = nil
      	elseif type(v) == "table" then
      	  if #v > 0 then  -- is list
      		fromJsonTable(v, System.List(System.Object))
      	  else
      		fromJsonTable(v, System.Object)
      	  end
      	end
        end
        setmetatable(t, T)
      end
      RapidjsonHelper =
      {
      	ToJson = rapidJson.encode,
      	FromJson = function (json, T)
      		if T == nil then throw(ArgumentNullException("type")) end
      		if getmetatable(T) == System.Type then
      			T = T[1]
      		end
      		local t = rapidJsonDecode(json)
      		fromJsonTable(t, T)
      		return t
      	end
      }
    end
    ToJson = function (obj)
      local t = nil
      t = RapidjsonHelper.ToJson(obj)
      return t
    end
    FromJson = function (str, T)
      local t = System.default(T)
      t = RapidjsonHelper.FromJson(str, T)
      return t
    end
    return {
      ToJson = ToJson,
      FromJson = FromJson,
      static = static
    }
  end)
end)
