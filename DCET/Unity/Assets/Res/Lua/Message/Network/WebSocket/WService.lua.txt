-- Generated by CSharp.lua Compiler
local System = System
local DCET = DCET
local MicrosoftIO = Microsoft.IO
local SystemNet = System.Net
local SystemNetWebSockets = System.Net.WebSockets
local DCET
local DictInt64WChannel
System.import(function (out)
  DCET = out.DCET
  DictInt64WChannel = System.Dictionary(System.Int64, DCET.WChannel)
end)
System.namespace("DCET", function (namespace)
  namespace.class("WService", function (namespace)
    local GetChannel, ConnectChannel, ConnectChannel1, Remove, Update, StartAccept, internal, __ctor1__, 
    __ctor2__
    internal = function (this)
      this.channels = DictInt64WChannel()
      this.MemoryStreamManager = MicrosoftIO.RecyclableMemoryStreamManager()
    end
    __ctor1__ = function (this)
      internal(this)
      DCET.AService.__ctor__(this)
    end
    __ctor2__ = function (this, prefixs, acceptCallback)
      internal(this)
      DCET.AService.__ctor__(this)
      this:addAcceptCallback(acceptCallback)

      this.httpListener = SystemNet.HttpListener()

      StartAccept(this, prefixs)
    end
    GetChannel = function (this, id)
      local channel
      local _
      _, channel = this.channels:TryGetValue(id)
      return channel
    end
    ConnectChannel = function (this, ipEndPoint)
      System.throw(System.NotImplementedException())
    end
    ConnectChannel1 = function (this, address)
      local webSocket = SystemNetWebSockets.ClientWebSocket()
      local channel = System.new(DCET.WChannel, 2, webSocket, this)
      this.channels:set(channel.Id, channel)
      channel:ConnectAsync(address)
      return channel
    end
    Remove = function (this, id)
      local channel
      local default
      default, channel = this.channels:TryGetValue(id)
      if not default then
        return
      end

      this.channels:RemoveKey(id)
      channel:Dispose()
    end
    Update = function (this)
    end
    StartAccept = function (this, prefixs)
      System.async(function (async, this, prefixs)
        System.try(function ()
          for _, prefix in System.each(prefixs) do
            this.httpListener:getPrefixes():Add(prefix)
          end

          this.httpListener:Start()

          while true do
            System.try(function ()
              local httpListenerContext = async:await(this.httpListener:GetContextAsync())

              local webSocketContext = async:await(httpListenerContext:AcceptWebSocketAsync(nil))

              local channel = DCET.WChannel(webSocketContext, this)

              this.channels:set(channel.Id, channel)

              this:OnAccept(channel)
            end, function (default)
              local e = default
              DCET.Log.Exception(e)
            end)
          end
        end, function (default)
          if System.is(default, SystemNet.HttpListenerException) then
            local e = default
            if e:getErrorCode() == 5 then
              System.throw(System.Exception("CMD管理员中输入: netsh http add urlacl url=http://*:8080/ user=Everyone" .. "", e))
            end

            DCET.Log.Exception(e)
          else
            local e = default
            DCET.Log.Exception(e)
          end
        end)
      end, true, this, prefixs)
    end
    return {
      base = function (out)
        return {
          out.DCET.AService
        }
      end,
      GetChannel = GetChannel,
      ConnectChannel = ConnectChannel,
      ConnectChannel1 = ConnectChannel1,
      Remove = Remove,
      Update = Update,
      StartAccept = StartAccept,
      __ctor__ = {
        __ctor1__,
        __ctor2__
      }
    }
  end)
end)
