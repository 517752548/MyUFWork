//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class ImageFreeRotateWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(ImageFreeRotate), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("OnPointerDown", new LuaCSFunction(OnPointerDown));
		L.RegFunction("OnPointerUp", new LuaCSFunction(OnPointerUp));
		L.RegFunction("SetVerticalRotationState", new LuaCSFunction(SetVerticalRotationState));
		L.RegFunction("SetModelHeight", new LuaCSFunction(SetModelHeight));
		L.RegFunction("LookFace", new LuaCSFunction(LookFace));
		L.RegFunction("LookBack", new LuaCSFunction(LookBack));
		L.RegFunction("LookFront", new LuaCSFunction(LookFront));
		L.RegFunction("LookWaist", new LuaCSFunction(LookWaist));
		L.RegFunction("LookLeg", new LuaCSFunction(LookLeg));
		L.RegFunction("__eq", new LuaCSFunction(op_Equality));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.RegVar("targetGo", new LuaCSFunction(get_targetGo), new LuaCSFunction(set_targetGo));
		L.RegVar("camera", new LuaCSFunction(get_camera), new LuaCSFunction(set_camera));
		L.RegVar("speed", new LuaCSFunction(get_speed), new LuaCSFunction(set_speed));
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnPointerDown(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ImageFreeRotate obj = (ImageFreeRotate)ToLua.CheckObject<ImageFreeRotate>(L, 1);
			UnityEngine.EventSystems.PointerEventData arg0 = (UnityEngine.EventSystems.PointerEventData)ToLua.CheckObject<UnityEngine.EventSystems.PointerEventData>(L, 2);
			obj.OnPointerDown(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnPointerUp(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ImageFreeRotate obj = (ImageFreeRotate)ToLua.CheckObject<ImageFreeRotate>(L, 1);
			UnityEngine.EventSystems.PointerEventData arg0 = (UnityEngine.EventSystems.PointerEventData)ToLua.CheckObject<UnityEngine.EventSystems.PointerEventData>(L, 2);
			obj.OnPointerUp(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetVerticalRotationState(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ImageFreeRotate obj = (ImageFreeRotate)ToLua.CheckObject<ImageFreeRotate>(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.SetVerticalRotationState(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetModelHeight(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ImageFreeRotate obj = (ImageFreeRotate)ToLua.CheckObject<ImageFreeRotate>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.SetModelHeight(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LookFace(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ImageFreeRotate obj = (ImageFreeRotate)ToLua.CheckObject<ImageFreeRotate>(L, 1);
			obj.LookFace();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LookBack(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ImageFreeRotate obj = (ImageFreeRotate)ToLua.CheckObject<ImageFreeRotate>(L, 1);
			obj.LookBack();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LookFront(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ImageFreeRotate obj = (ImageFreeRotate)ToLua.CheckObject<ImageFreeRotate>(L, 1);
			obj.LookFront();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LookWaist(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ImageFreeRotate obj = (ImageFreeRotate)ToLua.CheckObject<ImageFreeRotate>(L, 1);
			obj.LookWaist();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LookLeg(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ImageFreeRotate obj = (ImageFreeRotate)ToLua.CheckObject<ImageFreeRotate>(L, 1);
			obj.LookLeg();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_targetGo(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ImageFreeRotate obj = (ImageFreeRotate)o;
			UnityEngine.GameObject ret = obj.targetGo;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index targetGo on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_camera(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ImageFreeRotate obj = (ImageFreeRotate)o;
			UnityEngine.Camera ret = obj.camera;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index camera on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_speed(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ImageFreeRotate obj = (ImageFreeRotate)o;
			float ret = obj.speed;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index speed on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_targetGo(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ImageFreeRotate obj = (ImageFreeRotate)o;
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject<UnityEngine.GameObject>(L, 2);
			obj.targetGo = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index targetGo on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_camera(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ImageFreeRotate obj = (ImageFreeRotate)o;
			UnityEngine.Camera arg0 = (UnityEngine.Camera)ToLua.CheckObject<UnityEngine.Camera>(L, 2);
			obj.camera = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index camera on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_speed(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ImageFreeRotate obj = (ImageFreeRotate)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.speed = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index speed on a nil value");
		}
	}
}

