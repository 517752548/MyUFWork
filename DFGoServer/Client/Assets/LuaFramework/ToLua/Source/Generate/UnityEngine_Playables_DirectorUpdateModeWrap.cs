//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_Playables_DirectorUpdateModeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(UnityEngine.Playables.DirectorUpdateMode));
		L.RegVar("DSPClock", new LuaCSFunction(get_DSPClock), null);
		L.RegVar("GameTime", new LuaCSFunction(get_GameTime), null);
		L.RegVar("UnscaledGameTime", new LuaCSFunction(get_UnscaledGameTime), null);
		L.RegVar("Manual", new LuaCSFunction(get_Manual), null);
		L.RegFunction("IntToEnum", new LuaCSFunction(IntToEnum));
		L.EndEnum();
		TypeTraits<UnityEngine.Playables.DirectorUpdateMode>.Check = CheckType;
		StackTraits<UnityEngine.Playables.DirectorUpdateMode>.Push = Push;
	}

	static void Push(IntPtr L, UnityEngine.Playables.DirectorUpdateMode arg)
	{
		ToLua.Push(L, arg);
	}

	static Type TypeOf_UnityEngine_Playables_DirectorUpdateMode = typeof(UnityEngine.Playables.DirectorUpdateMode);

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(TypeOf_UnityEngine_Playables_DirectorUpdateMode, L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DSPClock(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.Playables.DirectorUpdateMode.DSPClock);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_GameTime(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.Playables.DirectorUpdateMode.GameTime);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UnscaledGameTime(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.Playables.DirectorUpdateMode.UnscaledGameTime);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Manual(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.Playables.DirectorUpdateMode.Manual);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tointeger(L, 1);
		UnityEngine.Playables.DirectorUpdateMode o = (UnityEngine.Playables.DirectorUpdateMode)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

