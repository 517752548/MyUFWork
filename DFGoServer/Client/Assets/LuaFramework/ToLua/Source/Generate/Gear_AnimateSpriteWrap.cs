//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Gear_AnimateSpriteWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Gear.AnimateSprite), typeof(UnityEngine.UI.RawImage));
		L.RegFunction("Play", new LuaCSFunction(Play));
		L.RegFunction("Stop", new LuaCSFunction(Stop));
		L.RegFunction("PlayFrame", new LuaCSFunction(PlayFrame));
		L.RegFunction("PlayNextFrame", new LuaCSFunction(PlayNextFrame));
		L.RegFunction("ClearUV", new LuaCSFunction(ClearUV));
		L.RegFunction("__eq", new LuaCSFunction(op_Equality));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.RegVar("autoSize", new LuaCSFunction(get_autoSize), new LuaCSFunction(set_autoSize));
		L.RegVar("atlasInfo", new LuaCSFunction(get_atlasInfo), new LuaCSFunction(set_atlasInfo));
		L.RegVar("frameRate", new LuaCSFunction(get_frameRate), new LuaCSFunction(set_frameRate));
		L.RegVar("isPlaying", new LuaCSFunction(get_isPlaying), null);
		L.RegVar("loop", new LuaCSFunction(get_loop), new LuaCSFunction(set_loop));
		L.RegVar("interval", new LuaCSFunction(get_interval), new LuaCSFunction(set_interval));
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Play(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Gear.AnimateSprite obj = (Gear.AnimateSprite)ToLua.CheckObject<Gear.AnimateSprite>(L, 1);
			obj.Play();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Stop(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Gear.AnimateSprite obj = (Gear.AnimateSprite)ToLua.CheckObject<Gear.AnimateSprite>(L, 1);
			obj.Stop();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PlayFrame(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Gear.AnimateSprite obj = (Gear.AnimateSprite)ToLua.CheckObject<Gear.AnimateSprite>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			obj.PlayFrame(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PlayNextFrame(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Gear.AnimateSprite obj = (Gear.AnimateSprite)ToLua.CheckObject<Gear.AnimateSprite>(L, 1);
			obj.PlayNextFrame();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearUV(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Gear.AnimateSprite obj = (Gear.AnimateSprite)ToLua.CheckObject<Gear.AnimateSprite>(L, 1);
			obj.ClearUV();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_autoSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Gear.AnimateSprite obj = (Gear.AnimateSprite)o;
			bool ret = obj.autoSize;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index autoSize on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_atlasInfo(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Gear.AnimateSprite obj = (Gear.AnimateSprite)o;
			AtlasInfo ret = obj.atlasInfo;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index atlasInfo on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_frameRate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Gear.AnimateSprite obj = (Gear.AnimateSprite)o;
			int ret = obj.frameRate;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index frameRate on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_isPlaying(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Gear.AnimateSprite obj = (Gear.AnimateSprite)o;
			bool ret = obj.isPlaying;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index isPlaying on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_loop(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Gear.AnimateSprite obj = (Gear.AnimateSprite)o;
			bool ret = obj.loop;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index loop on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_interval(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Gear.AnimateSprite obj = (Gear.AnimateSprite)o;
			float ret = obj.interval;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index interval on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_autoSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Gear.AnimateSprite obj = (Gear.AnimateSprite)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.autoSize = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index autoSize on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_atlasInfo(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Gear.AnimateSprite obj = (Gear.AnimateSprite)o;
			AtlasInfo arg0 = (AtlasInfo)ToLua.CheckObject<AtlasInfo>(L, 2);
			obj.atlasInfo = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index atlasInfo on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_frameRate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Gear.AnimateSprite obj = (Gear.AnimateSprite)o;
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			obj.frameRate = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index frameRate on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_loop(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Gear.AnimateSprite obj = (Gear.AnimateSprite)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.loop = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index loop on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_interval(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Gear.AnimateSprite obj = (Gear.AnimateSprite)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.interval = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index interval on a nil value");
		}
	}
}

