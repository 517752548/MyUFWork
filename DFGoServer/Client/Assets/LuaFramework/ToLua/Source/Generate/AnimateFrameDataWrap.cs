//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class AnimateFrameDataWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(AnimateFrameData), typeof(UnityEngine.ScriptableObject));
		L.RegFunction("GetFrameInfoByName", new LuaCSFunction(GetFrameInfoByName));
		L.RegFunction("New", new LuaCSFunction(_CreateAnimateFrameData));
		L.RegFunction("__eq", new LuaCSFunction(op_Equality));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.RegVar("SCRIPTABLE_PATH", new LuaCSFunction(get_SCRIPTABLE_PATH), new LuaCSFunction(set_SCRIPTABLE_PATH));
		L.RegVar("frameInfoList", new LuaCSFunction(get_frameInfoList), new LuaCSFunction(set_frameInfoList));
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateAnimateFrameData(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				AnimateFrameData obj = new AnimateFrameData();
				ToLua.Push(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: AnimateFrameData.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetFrameInfoByName(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			AnimateFrameData obj = (AnimateFrameData)ToLua.CheckObject<AnimateFrameData>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			AnimateFrameInfo o = obj.GetFrameInfoByName(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SCRIPTABLE_PATH(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, AnimateFrameData.SCRIPTABLE_PATH);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_frameInfoList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimateFrameData obj = (AnimateFrameData)o;
			System.Collections.Generic.List<AnimateFrameInfo> ret = obj.frameInfoList;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index frameInfoList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_SCRIPTABLE_PATH(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			AnimateFrameData.SCRIPTABLE_PATH = arg0;
			AnimateFrameData.SCRIPTABLE_PATH = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_frameInfoList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimateFrameData obj = (AnimateFrameData)o;
			System.Collections.Generic.List<AnimateFrameInfo> arg0 = (System.Collections.Generic.List<AnimateFrameInfo>)ToLua.CheckObject(L, 2, TypeTraits<System.Collections.Generic.List<AnimateFrameInfo>>.type);
			obj.frameInfoList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index frameInfoList on a nil value");
		}
	}
}

