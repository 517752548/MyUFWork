//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Gear_GFileBundleInfoWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Gear.GFileBundleInfo), typeof(System.Object));
		L.RegFunction("Parse", new LuaCSFunction(Parse));
		L.RegFunction("Update", new LuaCSFunction(Update));
		L.RegFunction("Output", new LuaCSFunction(Output));
		L.RegFunction("New", new LuaCSFunction(_CreateGear_GFileBundleInfo));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.RegVar("name", new LuaCSFunction(get_name), new LuaCSFunction(set_name));
		L.RegVar("byteSize", new LuaCSFunction(get_byteSize), new LuaCSFunction(set_byteSize));
		L.RegVar("crcOrMD5Hash", new LuaCSFunction(get_crcOrMD5Hash), new LuaCSFunction(set_crcOrMD5Hash));
		L.RegVar("location", new LuaCSFunction(get_location), new LuaCSFunction(set_location));
		L.RegVar("package", new LuaCSFunction(get_package), new LuaCSFunction(set_package));
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateGear_GFileBundleInfo(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Gear.GFileBundleInfo obj = new Gear.GFileBundleInfo();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Gear.GFileBundleInfo.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Parse(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Gear.GFileBundleInfo obj = (Gear.GFileBundleInfo)ToLua.CheckObject<Gear.GFileBundleInfo>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.Parse(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Update(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Gear.GFileBundleInfo obj = (Gear.GFileBundleInfo)ToLua.CheckObject<Gear.GFileBundleInfo>(L, 1);
			Gear.GFileBundleInfo arg0 = (Gear.GFileBundleInfo)ToLua.CheckObject<Gear.GFileBundleInfo>(L, 2);
			obj.Update(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Output(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Gear.GFileBundleInfo obj = (Gear.GFileBundleInfo)ToLua.CheckObject<Gear.GFileBundleInfo>(L, 1);
			string o = obj.Output();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_name(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Gear.GFileBundleInfo obj = (Gear.GFileBundleInfo)o;
			string ret = obj.name;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index name on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_byteSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Gear.GFileBundleInfo obj = (Gear.GFileBundleInfo)o;
			long ret = obj.byteSize;
			LuaDLL.tolua_pushint64(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index byteSize on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_crcOrMD5Hash(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Gear.GFileBundleInfo obj = (Gear.GFileBundleInfo)o;
			string ret = obj.crcOrMD5Hash;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index crcOrMD5Hash on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_location(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Gear.GFileBundleInfo obj = (Gear.GFileBundleInfo)o;
			Gear.BundleStorageLocation ret = obj.location;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index location on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_package(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Gear.GFileBundleInfo obj = (Gear.GFileBundleInfo)o;
			Gear.BundlePackage ret = obj.package;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index package on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_name(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Gear.GFileBundleInfo obj = (Gear.GFileBundleInfo)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.name = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index name on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_byteSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Gear.GFileBundleInfo obj = (Gear.GFileBundleInfo)o;
			long arg0 = LuaDLL.tolua_checkint64(L, 2);
			obj.byteSize = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index byteSize on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_crcOrMD5Hash(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Gear.GFileBundleInfo obj = (Gear.GFileBundleInfo)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.crcOrMD5Hash = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index crcOrMD5Hash on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_location(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Gear.GFileBundleInfo obj = (Gear.GFileBundleInfo)o;
			Gear.BundleStorageLocation arg0 = (Gear.BundleStorageLocation)ToLua.CheckObject(L, 2, TypeTraits<Gear.BundleStorageLocation>.type);
			obj.location = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index location on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_package(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Gear.GFileBundleInfo obj = (Gear.GFileBundleInfo)o;
			Gear.BundlePackage arg0 = (Gear.BundlePackage)ToLua.CheckObject(L, 2, TypeTraits<Gear.BundlePackage>.type);
			obj.package = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index package on a nil value");
		}
	}
}

