//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Gear_FaceAnimateSpriteWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Gear.FaceAnimateSprite), typeof(Gear.AnimateSprite));
		L.RegFunction("__eq", new LuaCSFunction(op_Equality));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.RegVar("faceName", new LuaCSFunction(get_faceName), new LuaCSFunction(set_faceName));
		L.RegVar("frameData", new LuaCSFunction(get_frameData), new LuaCSFunction(set_frameData));
		L.RegVar("offsetX", new LuaCSFunction(get_offsetX), new LuaCSFunction(set_offsetX));
		L.RegVar("offsetY", new LuaCSFunction(get_offsetY), new LuaCSFunction(set_offsetY));
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_faceName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Gear.FaceAnimateSprite obj = (Gear.FaceAnimateSprite)o;
			string ret = obj.faceName;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index faceName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_frameData(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Gear.FaceAnimateSprite obj = (Gear.FaceAnimateSprite)o;
			AnimateFrameData ret = obj.frameData;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index frameData on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_offsetX(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Gear.FaceAnimateSprite obj = (Gear.FaceAnimateSprite)o;
			int ret = obj.offsetX;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index offsetX on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_offsetY(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Gear.FaceAnimateSprite obj = (Gear.FaceAnimateSprite)o;
			int ret = obj.offsetY;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index offsetY on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_faceName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Gear.FaceAnimateSprite obj = (Gear.FaceAnimateSprite)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.faceName = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index faceName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_frameData(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Gear.FaceAnimateSprite obj = (Gear.FaceAnimateSprite)o;
			AnimateFrameData arg0 = (AnimateFrameData)ToLua.CheckObject<AnimateFrameData>(L, 2);
			obj.frameData = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index frameData on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_offsetX(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Gear.FaceAnimateSprite obj = (Gear.FaceAnimateSprite)o;
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			obj.offsetX = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index offsetX on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_offsetY(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Gear.FaceAnimateSprite obj = (Gear.FaceAnimateSprite)o;
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			obj.offsetY = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index offsetY on a nil value");
		}
	}
}

