//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnregularButtonWithColliderWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UnregularButtonWithCollider), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("OnPointerClick", new LuaCSFunction(OnPointerClick));
		L.RegFunction("IsInQuadrangle", new LuaCSFunction(IsInQuadrangle));
		L.RegFunction("__eq", new LuaCSFunction(op_Equality));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.RegVar("OnClick", new LuaCSFunction(get_OnClick), new LuaCSFunction(set_OnClick));
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnPointerClick(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnregularButtonWithCollider obj = (UnregularButtonWithCollider)ToLua.CheckObject<UnregularButtonWithCollider>(L, 1);
			UnityEngine.EventSystems.PointerEventData arg0 = (UnityEngine.EventSystems.PointerEventData)ToLua.CheckObject<UnityEngine.EventSystems.PointerEventData>(L, 2);
			obj.OnPointerClick(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsInQuadrangle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnregularButtonWithCollider obj = (UnregularButtonWithCollider)ToLua.CheckObject<UnregularButtonWithCollider>(L, 1);
			UnityEngine.EventSystems.PointerEventData arg0 = (UnityEngine.EventSystems.PointerEventData)ToLua.CheckObject<UnityEngine.EventSystems.PointerEventData>(L, 2);
			bool o = obj.IsInQuadrangle(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnClick(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnregularButtonWithCollider obj = (UnregularButtonWithCollider)o;
			UnregularButtonWithCollider.ButtonClickerEvent ret = obj.OnClick;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnClick on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnClick(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnregularButtonWithCollider obj = (UnregularButtonWithCollider)o;
			UnregularButtonWithCollider.ButtonClickerEvent arg0 = (UnregularButtonWithCollider.ButtonClickerEvent)ToLua.CheckObject<UnregularButtonWithCollider.ButtonClickerEvent>(L, 2);
			obj.OnClick = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnClick on a nil value");
		}
	}
}

