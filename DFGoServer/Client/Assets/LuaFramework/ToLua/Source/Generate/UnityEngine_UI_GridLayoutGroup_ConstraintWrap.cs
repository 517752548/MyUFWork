//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_UI_GridLayoutGroup_ConstraintWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(UnityEngine.UI.GridLayoutGroup.Constraint));
		L.RegVar("Flexible", new LuaCSFunction(get_Flexible), null);
		L.RegVar("FixedColumnCount", new LuaCSFunction(get_FixedColumnCount), null);
		L.RegVar("FixedRowCount", new LuaCSFunction(get_FixedRowCount), null);
		L.RegFunction("IntToEnum", new LuaCSFunction(IntToEnum));
		L.EndEnum();
		TypeTraits<UnityEngine.UI.GridLayoutGroup.Constraint>.Check = CheckType;
		StackTraits<UnityEngine.UI.GridLayoutGroup.Constraint>.Push = Push;
	}

	static void Push(IntPtr L, UnityEngine.UI.GridLayoutGroup.Constraint arg)
	{
		ToLua.Push(L, arg);
	}

	static Type TypeOf_UnityEngine_UI_GridLayoutGroup_Constraint = typeof(UnityEngine.UI.GridLayoutGroup.Constraint);

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(TypeOf_UnityEngine_UI_GridLayoutGroup_Constraint, L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Flexible(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.UI.GridLayoutGroup.Constraint.Flexible);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FixedColumnCount(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.UI.GridLayoutGroup.Constraint.FixedColumnCount);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FixedRowCount(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.UI.GridLayoutGroup.Constraint.FixedRowCount);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tointeger(L, 1);
		UnityEngine.UI.GridLayoutGroup.Constraint o = (UnityEngine.UI.GridLayoutGroup.Constraint)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

