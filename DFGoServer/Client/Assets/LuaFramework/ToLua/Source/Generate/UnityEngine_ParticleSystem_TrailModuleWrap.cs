//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_ParticleSystem_TrailModuleWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UnityEngine.ParticleSystem.TrailModule), null);
		L.RegFunction("New", new LuaCSFunction(_CreateUnityEngine_ParticleSystem_TrailModule));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.RegVar("enabled", new LuaCSFunction(get_enabled), new LuaCSFunction(set_enabled));
		L.RegVar("mode", new LuaCSFunction(get_mode), new LuaCSFunction(set_mode));
		L.RegVar("ratio", new LuaCSFunction(get_ratio), new LuaCSFunction(set_ratio));
		L.RegVar("lifetime", new LuaCSFunction(get_lifetime), new LuaCSFunction(set_lifetime));
		L.RegVar("lifetimeMultiplier", new LuaCSFunction(get_lifetimeMultiplier), new LuaCSFunction(set_lifetimeMultiplier));
		L.RegVar("minVertexDistance", new LuaCSFunction(get_minVertexDistance), new LuaCSFunction(set_minVertexDistance));
		L.RegVar("textureMode", new LuaCSFunction(get_textureMode), new LuaCSFunction(set_textureMode));
		L.RegVar("worldSpace", new LuaCSFunction(get_worldSpace), new LuaCSFunction(set_worldSpace));
		L.RegVar("dieWithParticles", new LuaCSFunction(get_dieWithParticles), new LuaCSFunction(set_dieWithParticles));
		L.RegVar("sizeAffectsWidth", new LuaCSFunction(get_sizeAffectsWidth), new LuaCSFunction(set_sizeAffectsWidth));
		L.RegVar("sizeAffectsLifetime", new LuaCSFunction(get_sizeAffectsLifetime), new LuaCSFunction(set_sizeAffectsLifetime));
		L.RegVar("inheritParticleColor", new LuaCSFunction(get_inheritParticleColor), new LuaCSFunction(set_inheritParticleColor));
		L.RegVar("colorOverLifetime", new LuaCSFunction(get_colorOverLifetime), new LuaCSFunction(set_colorOverLifetime));
		L.RegVar("widthOverTrail", new LuaCSFunction(get_widthOverTrail), new LuaCSFunction(set_widthOverTrail));
		L.RegVar("widthOverTrailMultiplier", new LuaCSFunction(get_widthOverTrailMultiplier), new LuaCSFunction(set_widthOverTrailMultiplier));
		L.RegVar("colorOverTrail", new LuaCSFunction(get_colorOverTrail), new LuaCSFunction(set_colorOverTrail));
		L.RegVar("generateLightingData", new LuaCSFunction(get_generateLightingData), new LuaCSFunction(set_generateLightingData));
		L.RegVar("ribbonCount", new LuaCSFunction(get_ribbonCount), new LuaCSFunction(set_ribbonCount));
		L.RegVar("shadowBias", new LuaCSFunction(get_shadowBias), new LuaCSFunction(set_shadowBias));
		L.RegVar("splitSubEmitterRibbons", new LuaCSFunction(get_splitSubEmitterRibbons), new LuaCSFunction(set_splitSubEmitterRibbons));
		L.RegVar("attachRibbonsToTransform", new LuaCSFunction(get_attachRibbonsToTransform), new LuaCSFunction(set_attachRibbonsToTransform));
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateUnityEngine_ParticleSystem_TrailModule(IntPtr L)
	{
		UnityEngine.ParticleSystem.TrailModule obj = new UnityEngine.ParticleSystem.TrailModule();
		ToLua.PushValue(L, obj);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_enabled(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TrailModule obj = (UnityEngine.ParticleSystem.TrailModule)o;
			bool ret = obj.enabled;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index enabled on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TrailModule obj = (UnityEngine.ParticleSystem.TrailModule)o;
			UnityEngine.ParticleSystemTrailMode ret = obj.mode;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index mode on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ratio(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TrailModule obj = (UnityEngine.ParticleSystem.TrailModule)o;
			float ret = obj.ratio;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ratio on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_lifetime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TrailModule obj = (UnityEngine.ParticleSystem.TrailModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve ret = obj.lifetime;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index lifetime on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_lifetimeMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TrailModule obj = (UnityEngine.ParticleSystem.TrailModule)o;
			float ret = obj.lifetimeMultiplier;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index lifetimeMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_minVertexDistance(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TrailModule obj = (UnityEngine.ParticleSystem.TrailModule)o;
			float ret = obj.minVertexDistance;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index minVertexDistance on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_textureMode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TrailModule obj = (UnityEngine.ParticleSystem.TrailModule)o;
			UnityEngine.ParticleSystemTrailTextureMode ret = obj.textureMode;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index textureMode on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_worldSpace(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TrailModule obj = (UnityEngine.ParticleSystem.TrailModule)o;
			bool ret = obj.worldSpace;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index worldSpace on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_dieWithParticles(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TrailModule obj = (UnityEngine.ParticleSystem.TrailModule)o;
			bool ret = obj.dieWithParticles;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index dieWithParticles on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_sizeAffectsWidth(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TrailModule obj = (UnityEngine.ParticleSystem.TrailModule)o;
			bool ret = obj.sizeAffectsWidth;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index sizeAffectsWidth on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_sizeAffectsLifetime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TrailModule obj = (UnityEngine.ParticleSystem.TrailModule)o;
			bool ret = obj.sizeAffectsLifetime;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index sizeAffectsLifetime on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_inheritParticleColor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TrailModule obj = (UnityEngine.ParticleSystem.TrailModule)o;
			bool ret = obj.inheritParticleColor;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index inheritParticleColor on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_colorOverLifetime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TrailModule obj = (UnityEngine.ParticleSystem.TrailModule)o;
			UnityEngine.ParticleSystem.MinMaxGradient ret = obj.colorOverLifetime;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index colorOverLifetime on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_widthOverTrail(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TrailModule obj = (UnityEngine.ParticleSystem.TrailModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve ret = obj.widthOverTrail;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index widthOverTrail on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_widthOverTrailMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TrailModule obj = (UnityEngine.ParticleSystem.TrailModule)o;
			float ret = obj.widthOverTrailMultiplier;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index widthOverTrailMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_colorOverTrail(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TrailModule obj = (UnityEngine.ParticleSystem.TrailModule)o;
			UnityEngine.ParticleSystem.MinMaxGradient ret = obj.colorOverTrail;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index colorOverTrail on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_generateLightingData(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TrailModule obj = (UnityEngine.ParticleSystem.TrailModule)o;
			bool ret = obj.generateLightingData;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index generateLightingData on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ribbonCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TrailModule obj = (UnityEngine.ParticleSystem.TrailModule)o;
			int ret = obj.ribbonCount;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ribbonCount on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_shadowBias(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TrailModule obj = (UnityEngine.ParticleSystem.TrailModule)o;
			float ret = obj.shadowBias;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index shadowBias on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_splitSubEmitterRibbons(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TrailModule obj = (UnityEngine.ParticleSystem.TrailModule)o;
			bool ret = obj.splitSubEmitterRibbons;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index splitSubEmitterRibbons on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_attachRibbonsToTransform(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TrailModule obj = (UnityEngine.ParticleSystem.TrailModule)o;
			bool ret = obj.attachRibbonsToTransform;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index attachRibbonsToTransform on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_enabled(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TrailModule obj = (UnityEngine.ParticleSystem.TrailModule)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.enabled = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index enabled on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TrailModule obj = (UnityEngine.ParticleSystem.TrailModule)o;
			UnityEngine.ParticleSystemTrailMode arg0 = (UnityEngine.ParticleSystemTrailMode)ToLua.CheckObject(L, 2, TypeTraits<UnityEngine.ParticleSystemTrailMode>.type);
			obj.mode = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index mode on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ratio(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TrailModule obj = (UnityEngine.ParticleSystem.TrailModule)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.ratio = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ratio on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_lifetime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TrailModule obj = (UnityEngine.ParticleSystem.TrailModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve arg0 = StackTraits<UnityEngine.ParticleSystem.MinMaxCurve>.Check(L, 2);
			obj.lifetime = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index lifetime on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_lifetimeMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TrailModule obj = (UnityEngine.ParticleSystem.TrailModule)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.lifetimeMultiplier = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index lifetimeMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_minVertexDistance(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TrailModule obj = (UnityEngine.ParticleSystem.TrailModule)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.minVertexDistance = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index minVertexDistance on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_textureMode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TrailModule obj = (UnityEngine.ParticleSystem.TrailModule)o;
			UnityEngine.ParticleSystemTrailTextureMode arg0 = (UnityEngine.ParticleSystemTrailTextureMode)ToLua.CheckObject(L, 2, TypeTraits<UnityEngine.ParticleSystemTrailTextureMode>.type);
			obj.textureMode = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index textureMode on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_worldSpace(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TrailModule obj = (UnityEngine.ParticleSystem.TrailModule)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.worldSpace = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index worldSpace on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_dieWithParticles(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TrailModule obj = (UnityEngine.ParticleSystem.TrailModule)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.dieWithParticles = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index dieWithParticles on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_sizeAffectsWidth(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TrailModule obj = (UnityEngine.ParticleSystem.TrailModule)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.sizeAffectsWidth = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index sizeAffectsWidth on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_sizeAffectsLifetime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TrailModule obj = (UnityEngine.ParticleSystem.TrailModule)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.sizeAffectsLifetime = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index sizeAffectsLifetime on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_inheritParticleColor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TrailModule obj = (UnityEngine.ParticleSystem.TrailModule)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.inheritParticleColor = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index inheritParticleColor on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_colorOverLifetime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TrailModule obj = (UnityEngine.ParticleSystem.TrailModule)o;
			UnityEngine.ParticleSystem.MinMaxGradient arg0 = StackTraits<UnityEngine.ParticleSystem.MinMaxGradient>.Check(L, 2);
			obj.colorOverLifetime = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index colorOverLifetime on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_widthOverTrail(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TrailModule obj = (UnityEngine.ParticleSystem.TrailModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve arg0 = StackTraits<UnityEngine.ParticleSystem.MinMaxCurve>.Check(L, 2);
			obj.widthOverTrail = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index widthOverTrail on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_widthOverTrailMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TrailModule obj = (UnityEngine.ParticleSystem.TrailModule)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.widthOverTrailMultiplier = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index widthOverTrailMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_colorOverTrail(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TrailModule obj = (UnityEngine.ParticleSystem.TrailModule)o;
			UnityEngine.ParticleSystem.MinMaxGradient arg0 = StackTraits<UnityEngine.ParticleSystem.MinMaxGradient>.Check(L, 2);
			obj.colorOverTrail = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index colorOverTrail on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_generateLightingData(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TrailModule obj = (UnityEngine.ParticleSystem.TrailModule)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.generateLightingData = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index generateLightingData on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ribbonCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TrailModule obj = (UnityEngine.ParticleSystem.TrailModule)o;
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			obj.ribbonCount = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ribbonCount on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_shadowBias(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TrailModule obj = (UnityEngine.ParticleSystem.TrailModule)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.shadowBias = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index shadowBias on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_splitSubEmitterRibbons(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TrailModule obj = (UnityEngine.ParticleSystem.TrailModule)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.splitSubEmitterRibbons = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index splitSubEmitterRibbons on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_attachRibbonsToTransform(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TrailModule obj = (UnityEngine.ParticleSystem.TrailModule)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.attachRibbonsToTransform = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index attachRibbonsToTransform on a nil value");
		}
	}
}

