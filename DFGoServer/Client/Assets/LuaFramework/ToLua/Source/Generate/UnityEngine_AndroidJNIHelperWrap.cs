//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_AndroidJNIHelperWrap
{
	public static void Register(LuaState L)
	{
		L.BeginStaticLibs("AndroidJNIHelper");
		L.RegFunction("GetConstructorID", new LuaCSFunction(GetConstructorID));
		L.RegFunction("GetMethodID", new LuaCSFunction(GetMethodID));
		L.RegFunction("GetFieldID", new LuaCSFunction(GetFieldID));
		L.RegFunction("CreateJavaRunnable", new LuaCSFunction(CreateJavaRunnable));
		L.RegFunction("CreateJavaProxy", new LuaCSFunction(CreateJavaProxy));
		L.RegFunction("ConvertToJNIArray", new LuaCSFunction(ConvertToJNIArray));
		L.RegFunction("CreateJNIArgArray", new LuaCSFunction(CreateJNIArgArray));
		L.RegFunction("DeleteJNIArgArray", new LuaCSFunction(DeleteJNIArgArray));
		L.RegFunction("GetSignature", new LuaCSFunction(GetSignature));
		L.RegVar("debug", new LuaCSFunction(get_debug), new LuaCSFunction(set_debug));
		L.EndStaticLibs();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetConstructorID(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				System.IntPtr arg0 = ToLua.CheckIntPtr(L, 1);
				System.IntPtr o = UnityEngine.AndroidJNIHelper.GetConstructorID(arg0);
				LuaDLL.lua_pushlightuserdata(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes<string>(L, 2))
			{
				System.IntPtr arg0 = ToLua.CheckIntPtr(L, 1);
				string arg1 = ToLua.ToString(L, 2);
				System.IntPtr o = UnityEngine.AndroidJNIHelper.GetConstructorID(arg0, arg1);
				LuaDLL.lua_pushlightuserdata(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes<object[]>(L, 2))
			{
				System.IntPtr arg0 = ToLua.CheckIntPtr(L, 1);
				object[] arg1 = ToLua.ToObjectArray(L, 2);
				System.IntPtr o = UnityEngine.AndroidJNIHelper.GetConstructorID(arg0, arg1);
				LuaDLL.lua_pushlightuserdata(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.AndroidJNIHelper.GetConstructorID");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetMethodID(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				System.IntPtr arg0 = ToLua.CheckIntPtr(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				System.IntPtr o = UnityEngine.AndroidJNIHelper.GetMethodID(arg0, arg1);
				LuaDLL.lua_pushlightuserdata(L, o);
				return 1;
			}
			else if (count == 3)
			{
				System.IntPtr arg0 = ToLua.CheckIntPtr(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				string arg2 = ToLua.CheckString(L, 3);
				System.IntPtr o = UnityEngine.AndroidJNIHelper.GetMethodID(arg0, arg1, arg2);
				LuaDLL.lua_pushlightuserdata(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes<string, bool>(L, 3))
			{
				System.IntPtr arg0 = ToLua.CheckIntPtr(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				string arg2 = ToLua.ToString(L, 3);
				bool arg3 = LuaDLL.lua_toboolean(L, 4);
				System.IntPtr o = UnityEngine.AndroidJNIHelper.GetMethodID(arg0, arg1, arg2, arg3);
				LuaDLL.lua_pushlightuserdata(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes<object[], bool>(L, 3))
			{
				System.IntPtr arg0 = ToLua.CheckIntPtr(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				object[] arg2 = ToLua.ToObjectArray(L, 3);
				bool arg3 = LuaDLL.lua_toboolean(L, 4);
				System.IntPtr o = UnityEngine.AndroidJNIHelper.GetMethodID(arg0, arg1, arg2, arg3);
				LuaDLL.lua_pushlightuserdata(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.AndroidJNIHelper.GetMethodID");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetFieldID(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				System.IntPtr arg0 = ToLua.CheckIntPtr(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				System.IntPtr o = UnityEngine.AndroidJNIHelper.GetFieldID(arg0, arg1);
				LuaDLL.lua_pushlightuserdata(L, o);
				return 1;
			}
			else if (count == 3)
			{
				System.IntPtr arg0 = ToLua.CheckIntPtr(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				string arg2 = ToLua.CheckString(L, 3);
				System.IntPtr o = UnityEngine.AndroidJNIHelper.GetFieldID(arg0, arg1, arg2);
				LuaDLL.lua_pushlightuserdata(L, o);
				return 1;
			}
			else if (count == 4)
			{
				System.IntPtr arg0 = ToLua.CheckIntPtr(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				string arg2 = ToLua.CheckString(L, 3);
				bool arg3 = LuaDLL.luaL_checkboolean(L, 4);
				System.IntPtr o = UnityEngine.AndroidJNIHelper.GetFieldID(arg0, arg1, arg2, arg3);
				LuaDLL.lua_pushlightuserdata(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.AndroidJNIHelper.GetFieldID");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateJavaRunnable(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.AndroidJavaRunnable arg0 = (UnityEngine.AndroidJavaRunnable)ToLua.CheckDelegate<UnityEngine.AndroidJavaRunnable>(L, 1);
			System.IntPtr o = UnityEngine.AndroidJNIHelper.CreateJavaRunnable(arg0);
			LuaDLL.lua_pushlightuserdata(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateJavaProxy(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.AndroidJavaProxy arg0 = (UnityEngine.AndroidJavaProxy)ToLua.CheckObject<UnityEngine.AndroidJavaProxy>(L, 1);
			System.IntPtr o = UnityEngine.AndroidJNIHelper.CreateJavaProxy(arg0);
			LuaDLL.lua_pushlightuserdata(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ConvertToJNIArray(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			System.Array arg0 = (System.Array)ToLua.CheckObject<System.Array>(L, 1);
			System.IntPtr o = UnityEngine.AndroidJNIHelper.ConvertToJNIArray(arg0);
			LuaDLL.lua_pushlightuserdata(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateJNIArgArray(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			object[] arg0 = ToLua.CheckObjectArray(L, 1);
			UnityEngine.jvalue[] o = UnityEngine.AndroidJNIHelper.CreateJNIArgArray(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DeleteJNIArgArray(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			object[] arg0 = ToLua.CheckObjectArray(L, 1);
			UnityEngine.jvalue[] arg1 = ToLua.CheckStructArray<UnityEngine.jvalue>(L, 2);
			UnityEngine.AndroidJNIHelper.DeleteJNIArgArray(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetSignature(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1 && TypeChecker.CheckTypes<object[]>(L, 1))
			{
				object[] arg0 = ToLua.ToObjectArray(L, 1);
				string o = UnityEngine.AndroidJNIHelper.GetSignature(arg0);
				LuaDLL.lua_pushstring(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes<object>(L, 1))
			{
				object arg0 = ToLua.ToVarObject(L, 1);
				string o = UnityEngine.AndroidJNIHelper.GetSignature(arg0);
				LuaDLL.lua_pushstring(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.AndroidJNIHelper.GetSignature");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_debug(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, UnityEngine.AndroidJNIHelper.debug);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_debug(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			UnityEngine.AndroidJNIHelper.debug = arg0;
			UnityEngine.AndroidJNIHelper.debug = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

