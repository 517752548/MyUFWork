//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class HUDSpriteContentWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(HUDSpriteContent), typeof(HUDBaseContent));
		L.RegFunction("SetSyncPosition", new LuaCSFunction(SetSyncPosition));
		L.RegFunction("SetSprite", new LuaCSFunction(SetSprite));
		L.RegFunction("Update", new LuaCSFunction(Update));
		L.RegFunction("New", new LuaCSFunction(_CreateHUDSpriteContent));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateHUDSpriteContent(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				HUDSpriteContent obj = new HUDSpriteContent();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: HUDSpriteContent.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetSyncPosition(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			HUDSpriteContent obj = (HUDSpriteContent)ToLua.CheckObject<HUDSpriteContent>(L, 1);
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.SetSyncPosition(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetSprite(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			HUDSpriteContent obj = (HUDSpriteContent)ToLua.CheckObject<HUDSpriteContent>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.SetSprite(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Update(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			HUDSpriteContent obj = (HUDSpriteContent)ToLua.CheckObject<HUDSpriteContent>(L, 1);
			obj.Update();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

