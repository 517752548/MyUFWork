//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class HUDBloodQuadWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(HUDBloodQuad), typeof(HUDQuad));
		L.RegFunction("GetVert", new LuaCSFunction(GetVert));
		L.RegFunction("GetUV", new LuaCSFunction(GetUV));
		L.RegFunction("Destroy", new LuaCSFunction(Destroy));
		L.RegFunction("New", new LuaCSFunction(_CreateHUDBloodQuad));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateHUDBloodQuad(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				HUDBloodQuad obj = new HUDBloodQuad();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: HUDBloodQuad.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetVert(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			HUDBloodQuad obj = (HUDBloodQuad)ToLua.CheckObject<HUDBloodQuad>(L, 1);
			UnityEngine.Vector2[] o = obj.GetVert();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetUV(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			HUDBloodQuad obj = (HUDBloodQuad)ToLua.CheckObject<HUDBloodQuad>(L, 1);
			UnityEngine.Vector2[] o = obj.GetUV();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Destroy(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			HUDBloodQuad obj = (HUDBloodQuad)ToLua.CheckObject<HUDBloodQuad>(L, 1);
			obj.Destroy();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

