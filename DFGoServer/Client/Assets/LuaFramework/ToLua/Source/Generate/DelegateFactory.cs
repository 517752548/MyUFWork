//this source code was auto-generated by tolua#, do not modify it
using System;
using System.Collections.Generic;
using LuaInterface;

public class DelegateFactory
{
	public delegate Delegate DelegateCreate(LuaFunction func, LuaTable self, bool flag);
	public static Dictionary<Type, DelegateCreate> dict = new Dictionary<Type, DelegateCreate>();
	static DelegateFactory factory = new DelegateFactory();

	public static void Init()
	{
		Register();
	}

	public static void Register()
	{
		dict.Clear();
		dict.Add(typeof(System.Action), factory.System_Action);
		dict.Add(typeof(UnityEngine.Events.UnityAction), factory.UnityEngine_Events_UnityAction);
		dict.Add(typeof(System.Predicate<int>), factory.System_Predicate_int);
		dict.Add(typeof(System.Action<int>), factory.System_Action_int);
		dict.Add(typeof(System.Comparison<int>), factory.System_Comparison_int);
		dict.Add(typeof(System.Func<int,int>), factory.System_Func_int_int);
		dict.Add(typeof(GNetManager.OnConnectedDelegate), factory.GNetManager_OnConnectedDelegate);
		dict.Add(typeof(GNetManager.OnDisconnectDelegate), factory.GNetManager_OnDisconnectDelegate);
		dict.Add(typeof(GNetManager.OnResponseDelegate), factory.GNetManager_OnResponseDelegate);
		dict.Add(typeof(UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode>), factory.UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode);
		dict.Add(typeof(UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene>), factory.UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene);
		dict.Add(typeof(UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene>), factory.UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene);
		dict.Add(typeof(GBaseLoader.OnLoadProgressDelegate), factory.GBaseLoader_OnLoadProgressDelegate);
		dict.Add(typeof(GBaseLoader.OnLoadCompleteDelegate), factory.GBaseLoader_OnLoadCompleteDelegate);
		dict.Add(typeof(GBaseLoader.OnLoadErrorDelegate), factory.GBaseLoader_OnLoadErrorDelegate);
		dict.Add(typeof(GResManager.OnCompleteDelegate), factory.GResManager_OnCompleteDelegate);
		dict.Add(typeof(GResManager.OnLoadItemCompleteDelegate), factory.GResManager_OnLoadItemCompleteDelegate);
		dict.Add(typeof(GResManager.OnLoadAssetCompleteDelegate), factory.GResManager_OnLoadAssetCompleteDelegate);
		dict.Add(typeof(GResManager.OnLoadAllAssetCompleteDelegate), factory.GResManager_OnLoadAllAssetCompleteDelegate);
		dict.Add(typeof(GResManager.OnLoadPrefabCompleteDelegate), factory.GResManager_OnLoadPrefabCompleteDelegate);
		dict.Add(typeof(GResManager.OnLoadSpriteCompleteDelegate), factory.GResManager_OnLoadSpriteCompleteDelegate);
		dict.Add(typeof(GResManager.OnLoadAllSpriteInAtlasCompleteDelegate), factory.GResManager_OnLoadAllSpriteInAtlasCompleteDelegate);
		dict.Add(typeof(GResManager.OnLoadTexture2DCompleteDelegate), factory.GResManager_OnLoadTexture2DCompleteDelegate);
		dict.Add(typeof(GResManager.OnLoadAnimationClipCompleteDelegate), factory.GResManager_OnLoadAnimationClipCompleteDelegate);
		dict.Add(typeof(GResManager.OnLoadScriptableObjectCompleteDelegate), factory.GResManager_OnLoadScriptableObjectCompleteDelegate);
		dict.Add(typeof(GResManager.OnLoadMeshCompleteDelegate), factory.GResManager_OnLoadMeshCompleteDelegate);
		dict.Add(typeof(GResManager.OnLoadMaterialCompleteDelegate), factory.GResManager_OnLoadMaterialCompleteDelegate);
		dict.Add(typeof(GResManager.OnLoadAudioClipCompleteDelegate), factory.GResManager_OnLoadAudioClipCompleteDelegate);
		dict.Add(typeof(GResManager.OnLoadFontCompleteDelegate), factory.GResManager_OnLoadFontCompleteDelegate);
		dict.Add(typeof(UnityEngine.AI.NavMesh.OnNavMeshPreUpdate), factory.UnityEngine_AI_NavMesh_OnNavMeshPreUpdate);
		dict.Add(typeof(TexturePackerManager.OnAssetPackCompleteDelegate), factory.TexturePackerManager_OnAssetPackCompleteDelegate);
		dict.Add(typeof(System.Action<UnityEngine.Playables.PlayableDirector>), factory.System_Action_UnityEngine_Playables_PlayableDirector);
		dict.Add(typeof(System.Func<UnityEngine.UI.ILayoutElement,float>), factory.System_Func_UnityEngine_UI_ILayoutElement_float);
		dict.Add(typeof(HUDManager.OnCreateMeshComplete), factory.HUDManager_OnCreateMeshComplete);
		dict.Add(typeof(UnityEngine.Font.FontTextureRebuildCallback), factory.UnityEngine_Font_FontTextureRebuildCallback);
		dict.Add(typeof(System.Action<UnityEngine.Font>), factory.System_Action_UnityEngine_Font);
		dict.Add(typeof(Gear.GFileManager.OnCompareCDNBuildVersionResult), factory.Gear_GFileManager_OnCompareCDNBuildVersionResult);
		dict.Add(typeof(Gear.GFileManager.OnErrorDelegate), factory.Gear_GFileManager_OnErrorDelegate);
		dict.Add(typeof(Gear.GFileManager.OnCompareCDNResult), factory.Gear_GFileManager_OnCompareCDNResult);
		dict.Add(typeof(Gear.GFileManager.OnLoadQueueProgressDelegate), factory.Gear_GFileManager_OnLoadQueueProgressDelegate);
		dict.Add(typeof(Gear.GFileManager.OnLoadQueueCompleteDelegate), factory.Gear_GFileManager_OnLoadQueueCompleteDelegate);
		dict.Add(typeof(Gear.GFileManager.OnCompleteDelegate), factory.Gear_GFileManager_OnCompleteDelegate);
		dict.Add(typeof(Gear.GFileManager.OnItemCompleteDelegate), factory.Gear_GFileManager_OnItemCompleteDelegate);
		dict.Add(typeof(GLoaderQueue.OnLoadCompleteDelegate), factory.GLoaderQueue_OnLoadCompleteDelegate);
		dict.Add(typeof(GLoaderQueue.OnLoadProgressDelegate), factory.GLoaderQueue_OnLoadProgressDelegate);
		dict.Add(typeof(GLoaderQueue.OnLoadErrorDelegate), factory.GLoaderQueue_OnLoadErrorDelegate);
		dict.Add(typeof(UnityEngine.AndroidJavaRunnable), factory.UnityEngine_AndroidJavaRunnable);
		dict.Add(typeof(UIRoot.OnChangeScreenSizeComplete), factory.UIRoot_OnChangeScreenSizeComplete);
		dict.Add(typeof(AtlasManager.OnGetAtlasComplete), factory.AtlasManager_OnGetAtlasComplete);
		dict.Add(typeof(Gear.GWebManager.OnRequestTextCompleteDelegate), factory.Gear_GWebManager_OnRequestTextCompleteDelegate);
		dict.Add(typeof(Gear.GWebManager.OnRequestTextErrorDelegate), factory.Gear_GWebManager_OnRequestTextErrorDelegate);
		dict.Add(typeof(UnityEngine.Video.VideoPlayer.EventHandler), factory.UnityEngine_Video_VideoPlayer_EventHandler);
		dict.Add(typeof(UnityEngine.Video.VideoPlayer.ErrorEventHandler), factory.UnityEngine_Video_VideoPlayer_ErrorEventHandler);
		dict.Add(typeof(UnityEngine.Video.VideoPlayer.TimeEventHandler), factory.UnityEngine_Video_VideoPlayer_TimeEventHandler);
		dict.Add(typeof(UnityEngine.Video.VideoPlayer.FrameReadyEventHandler), factory.UnityEngine_Video_VideoPlayer_FrameReadyEventHandler);
		dict.Add(typeof(System.Action<TMPro.TMP_TextInfo>), factory.System_Action_TMPro_TMP_TextInfo);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<float>), factory.DG_Tweening_Core_DOGetter_float);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<float>), factory.DG_Tweening_Core_DOSetter_float);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<double>), factory.DG_Tweening_Core_DOGetter_double);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<double>), factory.DG_Tweening_Core_DOSetter_double);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<int>), factory.DG_Tweening_Core_DOGetter_int);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<int>), factory.DG_Tweening_Core_DOSetter_int);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<uint>), factory.DG_Tweening_Core_DOGetter_uint);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<uint>), factory.DG_Tweening_Core_DOSetter_uint);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<long>), factory.DG_Tweening_Core_DOGetter_long);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<long>), factory.DG_Tweening_Core_DOSetter_long);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<ulong>), factory.DG_Tweening_Core_DOGetter_ulong);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<ulong>), factory.DG_Tweening_Core_DOSetter_ulong);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<string>), factory.DG_Tweening_Core_DOGetter_string);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<string>), factory.DG_Tweening_Core_DOSetter_string);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<UnityEngine.Vector2>), factory.DG_Tweening_Core_DOGetter_UnityEngine_Vector2);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<UnityEngine.Vector2>), factory.DG_Tweening_Core_DOSetter_UnityEngine_Vector2);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<UnityEngine.Vector3>), factory.DG_Tweening_Core_DOGetter_UnityEngine_Vector3);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<UnityEngine.Vector3>), factory.DG_Tweening_Core_DOSetter_UnityEngine_Vector3);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<UnityEngine.Vector4>), factory.DG_Tweening_Core_DOGetter_UnityEngine_Vector4);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<UnityEngine.Vector4>), factory.DG_Tweening_Core_DOSetter_UnityEngine_Vector4);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<UnityEngine.Quaternion>), factory.DG_Tweening_Core_DOGetter_UnityEngine_Quaternion);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<UnityEngine.Quaternion>), factory.DG_Tweening_Core_DOSetter_UnityEngine_Quaternion);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<UnityEngine.Color>), factory.DG_Tweening_Core_DOGetter_UnityEngine_Color);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<UnityEngine.Color>), factory.DG_Tweening_Core_DOSetter_UnityEngine_Color);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<UnityEngine.Rect>), factory.DG_Tweening_Core_DOGetter_UnityEngine_Rect);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<UnityEngine.Rect>), factory.DG_Tweening_Core_DOSetter_UnityEngine_Rect);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<UnityEngine.RectOffset>), factory.DG_Tweening_Core_DOGetter_UnityEngine_RectOffset);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<UnityEngine.RectOffset>), factory.DG_Tweening_Core_DOSetter_UnityEngine_RectOffset);
		dict.Add(typeof(DG.Tweening.TweenCallback), factory.DG_Tweening_TweenCallback);
		dict.Add(typeof(DG.Tweening.TweenCallback<int>), factory.DG_Tweening_TweenCallback_int);
		dict.Add(typeof(UnityEngine.RectTransform.ReapplyDrivenProperties), factory.UnityEngine_RectTransform_ReapplyDrivenProperties);
		dict.Add(typeof(UnityEngine.Camera.CameraCallback), factory.UnityEngine_Camera_CameraCallback);
		dict.Add(typeof(UnityEngine.Application.AdvertisingIdentifierCallback), factory.UnityEngine_Application_AdvertisingIdentifierCallback);
		dict.Add(typeof(UnityEngine.Application.LowMemoryCallback), factory.UnityEngine_Application_LowMemoryCallback);
		dict.Add(typeof(UnityEngine.Application.LogCallback), factory.UnityEngine_Application_LogCallback);
		dict.Add(typeof(System.Action<bool>), factory.System_Action_bool);
		dict.Add(typeof(System.Action<string>), factory.System_Action_string);
		dict.Add(typeof(System.Func<bool>), factory.System_Func_bool);
		dict.Add(typeof(System.Action<UnityEngine.AsyncOperation>), factory.System_Action_UnityEngine_AsyncOperation);
		dict.Add(typeof(UnityEngine.AudioClip.PCMReaderCallback), factory.UnityEngine_AudioClip_PCMReaderCallback);
		dict.Add(typeof(UnityEngine.AudioClip.PCMSetPositionCallback), factory.UnityEngine_AudioClip_PCMSetPositionCallback);
		dict.Add(typeof(UnityEngine.Canvas.WillRenderCanvases), factory.UnityEngine_Canvas_WillRenderCanvases);
		dict.Add(typeof(UnityEngine.UI.InputField.OnValidateInput), factory.UnityEngine_UI_InputField_OnValidateInput);
		dict.Add(typeof(UnityEngine.Events.UnityAction<string>), factory.UnityEngine_Events_UnityAction_string);
		dict.Add(typeof(UnityEngine.Events.UnityAction<float>), factory.UnityEngine_Events_UnityAction_float);
		dict.Add(typeof(UnityEngine.Events.UnityAction<bool>), factory.UnityEngine_Events_UnityAction_bool);
		dict.Add(typeof(UnityEngine.Events.UnityAction<int>), factory.UnityEngine_Events_UnityAction_int);
		dict.Add(typeof(UnityEngine.Events.UnityAction<UnityEngine.Vector2>), factory.UnityEngine_Events_UnityAction_UnityEngine_Vector2);

		DelegateTraits<System.Action>.Init(factory.System_Action);
		DelegateTraits<UnityEngine.Events.UnityAction>.Init(factory.UnityEngine_Events_UnityAction);
		DelegateTraits<System.Predicate<int>>.Init(factory.System_Predicate_int);
		DelegateTraits<System.Action<int>>.Init(factory.System_Action_int);
		DelegateTraits<System.Comparison<int>>.Init(factory.System_Comparison_int);
		DelegateTraits<System.Func<int,int>>.Init(factory.System_Func_int_int);
		DelegateTraits<GNetManager.OnConnectedDelegate>.Init(factory.GNetManager_OnConnectedDelegate);
		DelegateTraits<GNetManager.OnDisconnectDelegate>.Init(factory.GNetManager_OnDisconnectDelegate);
		DelegateTraits<GNetManager.OnResponseDelegate>.Init(factory.GNetManager_OnResponseDelegate);
		DelegateTraits<UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode>>.Init(factory.UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode);
		DelegateTraits<UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene>>.Init(factory.UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene);
		DelegateTraits<UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene>>.Init(factory.UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene);
		DelegateTraits<GBaseLoader.OnLoadProgressDelegate>.Init(factory.GBaseLoader_OnLoadProgressDelegate);
		DelegateTraits<GBaseLoader.OnLoadCompleteDelegate>.Init(factory.GBaseLoader_OnLoadCompleteDelegate);
		DelegateTraits<GBaseLoader.OnLoadErrorDelegate>.Init(factory.GBaseLoader_OnLoadErrorDelegate);
		DelegateTraits<GResManager.OnCompleteDelegate>.Init(factory.GResManager_OnCompleteDelegate);
		DelegateTraits<GResManager.OnLoadItemCompleteDelegate>.Init(factory.GResManager_OnLoadItemCompleteDelegate);
		DelegateTraits<GResManager.OnLoadAssetCompleteDelegate>.Init(factory.GResManager_OnLoadAssetCompleteDelegate);
		DelegateTraits<GResManager.OnLoadAllAssetCompleteDelegate>.Init(factory.GResManager_OnLoadAllAssetCompleteDelegate);
		DelegateTraits<GResManager.OnLoadPrefabCompleteDelegate>.Init(factory.GResManager_OnLoadPrefabCompleteDelegate);
		DelegateTraits<GResManager.OnLoadSpriteCompleteDelegate>.Init(factory.GResManager_OnLoadSpriteCompleteDelegate);
		DelegateTraits<GResManager.OnLoadAllSpriteInAtlasCompleteDelegate>.Init(factory.GResManager_OnLoadAllSpriteInAtlasCompleteDelegate);
		DelegateTraits<GResManager.OnLoadTexture2DCompleteDelegate>.Init(factory.GResManager_OnLoadTexture2DCompleteDelegate);
		DelegateTraits<GResManager.OnLoadAnimationClipCompleteDelegate>.Init(factory.GResManager_OnLoadAnimationClipCompleteDelegate);
		DelegateTraits<GResManager.OnLoadScriptableObjectCompleteDelegate>.Init(factory.GResManager_OnLoadScriptableObjectCompleteDelegate);
		DelegateTraits<GResManager.OnLoadMeshCompleteDelegate>.Init(factory.GResManager_OnLoadMeshCompleteDelegate);
		DelegateTraits<GResManager.OnLoadMaterialCompleteDelegate>.Init(factory.GResManager_OnLoadMaterialCompleteDelegate);
		DelegateTraits<GResManager.OnLoadAudioClipCompleteDelegate>.Init(factory.GResManager_OnLoadAudioClipCompleteDelegate);
		DelegateTraits<GResManager.OnLoadFontCompleteDelegate>.Init(factory.GResManager_OnLoadFontCompleteDelegate);
		DelegateTraits<UnityEngine.AI.NavMesh.OnNavMeshPreUpdate>.Init(factory.UnityEngine_AI_NavMesh_OnNavMeshPreUpdate);
		DelegateTraits<TexturePackerManager.OnAssetPackCompleteDelegate>.Init(factory.TexturePackerManager_OnAssetPackCompleteDelegate);
		DelegateTraits<System.Action<UnityEngine.Playables.PlayableDirector>>.Init(factory.System_Action_UnityEngine_Playables_PlayableDirector);
		DelegateTraits<System.Func<UnityEngine.UI.ILayoutElement,float>>.Init(factory.System_Func_UnityEngine_UI_ILayoutElement_float);
		DelegateTraits<HUDManager.OnCreateMeshComplete>.Init(factory.HUDManager_OnCreateMeshComplete);
		DelegateTraits<UnityEngine.Font.FontTextureRebuildCallback>.Init(factory.UnityEngine_Font_FontTextureRebuildCallback);
		DelegateTraits<System.Action<UnityEngine.Font>>.Init(factory.System_Action_UnityEngine_Font);
		DelegateTraits<Gear.GFileManager.OnCompareCDNBuildVersionResult>.Init(factory.Gear_GFileManager_OnCompareCDNBuildVersionResult);
		DelegateTraits<Gear.GFileManager.OnErrorDelegate>.Init(factory.Gear_GFileManager_OnErrorDelegate);
		DelegateTraits<Gear.GFileManager.OnCompareCDNResult>.Init(factory.Gear_GFileManager_OnCompareCDNResult);
		DelegateTraits<Gear.GFileManager.OnLoadQueueProgressDelegate>.Init(factory.Gear_GFileManager_OnLoadQueueProgressDelegate);
		DelegateTraits<Gear.GFileManager.OnLoadQueueCompleteDelegate>.Init(factory.Gear_GFileManager_OnLoadQueueCompleteDelegate);
		DelegateTraits<Gear.GFileManager.OnCompleteDelegate>.Init(factory.Gear_GFileManager_OnCompleteDelegate);
		DelegateTraits<Gear.GFileManager.OnItemCompleteDelegate>.Init(factory.Gear_GFileManager_OnItemCompleteDelegate);
		DelegateTraits<GLoaderQueue.OnLoadCompleteDelegate>.Init(factory.GLoaderQueue_OnLoadCompleteDelegate);
		DelegateTraits<GLoaderQueue.OnLoadProgressDelegate>.Init(factory.GLoaderQueue_OnLoadProgressDelegate);
		DelegateTraits<GLoaderQueue.OnLoadErrorDelegate>.Init(factory.GLoaderQueue_OnLoadErrorDelegate);
		DelegateTraits<UnityEngine.AndroidJavaRunnable>.Init(factory.UnityEngine_AndroidJavaRunnable);
		DelegateTraits<UIRoot.OnChangeScreenSizeComplete>.Init(factory.UIRoot_OnChangeScreenSizeComplete);
		DelegateTraits<AtlasManager.OnGetAtlasComplete>.Init(factory.AtlasManager_OnGetAtlasComplete);
		DelegateTraits<Gear.GWebManager.OnRequestTextCompleteDelegate>.Init(factory.Gear_GWebManager_OnRequestTextCompleteDelegate);
		DelegateTraits<Gear.GWebManager.OnRequestTextErrorDelegate>.Init(factory.Gear_GWebManager_OnRequestTextErrorDelegate);
		DelegateTraits<UnityEngine.Video.VideoPlayer.EventHandler>.Init(factory.UnityEngine_Video_VideoPlayer_EventHandler);
		DelegateTraits<UnityEngine.Video.VideoPlayer.ErrorEventHandler>.Init(factory.UnityEngine_Video_VideoPlayer_ErrorEventHandler);
		DelegateTraits<UnityEngine.Video.VideoPlayer.TimeEventHandler>.Init(factory.UnityEngine_Video_VideoPlayer_TimeEventHandler);
		DelegateTraits<UnityEngine.Video.VideoPlayer.FrameReadyEventHandler>.Init(factory.UnityEngine_Video_VideoPlayer_FrameReadyEventHandler);
		DelegateTraits<System.Action<TMPro.TMP_TextInfo>>.Init(factory.System_Action_TMPro_TMP_TextInfo);
		DelegateTraits<DG.Tweening.Core.DOGetter<float>>.Init(factory.DG_Tweening_Core_DOGetter_float);
		DelegateTraits<DG.Tweening.Core.DOSetter<float>>.Init(factory.DG_Tweening_Core_DOSetter_float);
		DelegateTraits<DG.Tweening.Core.DOGetter<double>>.Init(factory.DG_Tweening_Core_DOGetter_double);
		DelegateTraits<DG.Tweening.Core.DOSetter<double>>.Init(factory.DG_Tweening_Core_DOSetter_double);
		DelegateTraits<DG.Tweening.Core.DOGetter<int>>.Init(factory.DG_Tweening_Core_DOGetter_int);
		DelegateTraits<DG.Tweening.Core.DOSetter<int>>.Init(factory.DG_Tweening_Core_DOSetter_int);
		DelegateTraits<DG.Tweening.Core.DOGetter<uint>>.Init(factory.DG_Tweening_Core_DOGetter_uint);
		DelegateTraits<DG.Tweening.Core.DOSetter<uint>>.Init(factory.DG_Tweening_Core_DOSetter_uint);
		DelegateTraits<DG.Tweening.Core.DOGetter<long>>.Init(factory.DG_Tweening_Core_DOGetter_long);
		DelegateTraits<DG.Tweening.Core.DOSetter<long>>.Init(factory.DG_Tweening_Core_DOSetter_long);
		DelegateTraits<DG.Tweening.Core.DOGetter<ulong>>.Init(factory.DG_Tweening_Core_DOGetter_ulong);
		DelegateTraits<DG.Tweening.Core.DOSetter<ulong>>.Init(factory.DG_Tweening_Core_DOSetter_ulong);
		DelegateTraits<DG.Tweening.Core.DOGetter<string>>.Init(factory.DG_Tweening_Core_DOGetter_string);
		DelegateTraits<DG.Tweening.Core.DOSetter<string>>.Init(factory.DG_Tweening_Core_DOSetter_string);
		DelegateTraits<DG.Tweening.Core.DOGetter<UnityEngine.Vector2>>.Init(factory.DG_Tweening_Core_DOGetter_UnityEngine_Vector2);
		DelegateTraits<DG.Tweening.Core.DOSetter<UnityEngine.Vector2>>.Init(factory.DG_Tweening_Core_DOSetter_UnityEngine_Vector2);
		DelegateTraits<DG.Tweening.Core.DOGetter<UnityEngine.Vector3>>.Init(factory.DG_Tweening_Core_DOGetter_UnityEngine_Vector3);
		DelegateTraits<DG.Tweening.Core.DOSetter<UnityEngine.Vector3>>.Init(factory.DG_Tweening_Core_DOSetter_UnityEngine_Vector3);
		DelegateTraits<DG.Tweening.Core.DOGetter<UnityEngine.Vector4>>.Init(factory.DG_Tweening_Core_DOGetter_UnityEngine_Vector4);
		DelegateTraits<DG.Tweening.Core.DOSetter<UnityEngine.Vector4>>.Init(factory.DG_Tweening_Core_DOSetter_UnityEngine_Vector4);
		DelegateTraits<DG.Tweening.Core.DOGetter<UnityEngine.Quaternion>>.Init(factory.DG_Tweening_Core_DOGetter_UnityEngine_Quaternion);
		DelegateTraits<DG.Tweening.Core.DOSetter<UnityEngine.Quaternion>>.Init(factory.DG_Tweening_Core_DOSetter_UnityEngine_Quaternion);
		DelegateTraits<DG.Tweening.Core.DOGetter<UnityEngine.Color>>.Init(factory.DG_Tweening_Core_DOGetter_UnityEngine_Color);
		DelegateTraits<DG.Tweening.Core.DOSetter<UnityEngine.Color>>.Init(factory.DG_Tweening_Core_DOSetter_UnityEngine_Color);
		DelegateTraits<DG.Tweening.Core.DOGetter<UnityEngine.Rect>>.Init(factory.DG_Tweening_Core_DOGetter_UnityEngine_Rect);
		DelegateTraits<DG.Tweening.Core.DOSetter<UnityEngine.Rect>>.Init(factory.DG_Tweening_Core_DOSetter_UnityEngine_Rect);
		DelegateTraits<DG.Tweening.Core.DOGetter<UnityEngine.RectOffset>>.Init(factory.DG_Tweening_Core_DOGetter_UnityEngine_RectOffset);
		DelegateTraits<DG.Tweening.Core.DOSetter<UnityEngine.RectOffset>>.Init(factory.DG_Tweening_Core_DOSetter_UnityEngine_RectOffset);
		DelegateTraits<DG.Tweening.TweenCallback>.Init(factory.DG_Tweening_TweenCallback);
		DelegateTraits<DG.Tweening.TweenCallback<int>>.Init(factory.DG_Tweening_TweenCallback_int);
		DelegateTraits<UnityEngine.RectTransform.ReapplyDrivenProperties>.Init(factory.UnityEngine_RectTransform_ReapplyDrivenProperties);
		DelegateTraits<UnityEngine.Camera.CameraCallback>.Init(factory.UnityEngine_Camera_CameraCallback);
		DelegateTraits<UnityEngine.Application.AdvertisingIdentifierCallback>.Init(factory.UnityEngine_Application_AdvertisingIdentifierCallback);
		DelegateTraits<UnityEngine.Application.LowMemoryCallback>.Init(factory.UnityEngine_Application_LowMemoryCallback);
		DelegateTraits<UnityEngine.Application.LogCallback>.Init(factory.UnityEngine_Application_LogCallback);
		DelegateTraits<System.Action<bool>>.Init(factory.System_Action_bool);
		DelegateTraits<System.Action<string>>.Init(factory.System_Action_string);
		DelegateTraits<System.Func<bool>>.Init(factory.System_Func_bool);
		DelegateTraits<System.Action<UnityEngine.AsyncOperation>>.Init(factory.System_Action_UnityEngine_AsyncOperation);
		DelegateTraits<UnityEngine.AudioClip.PCMReaderCallback>.Init(factory.UnityEngine_AudioClip_PCMReaderCallback);
		DelegateTraits<UnityEngine.AudioClip.PCMSetPositionCallback>.Init(factory.UnityEngine_AudioClip_PCMSetPositionCallback);
		DelegateTraits<UnityEngine.Canvas.WillRenderCanvases>.Init(factory.UnityEngine_Canvas_WillRenderCanvases);
		DelegateTraits<UnityEngine.UI.InputField.OnValidateInput>.Init(factory.UnityEngine_UI_InputField_OnValidateInput);
		DelegateTraits<UnityEngine.Events.UnityAction<string>>.Init(factory.UnityEngine_Events_UnityAction_string);
		DelegateTraits<UnityEngine.Events.UnityAction<float>>.Init(factory.UnityEngine_Events_UnityAction_float);
		DelegateTraits<UnityEngine.Events.UnityAction<bool>>.Init(factory.UnityEngine_Events_UnityAction_bool);
		DelegateTraits<UnityEngine.Events.UnityAction<int>>.Init(factory.UnityEngine_Events_UnityAction_int);
		DelegateTraits<UnityEngine.Events.UnityAction<UnityEngine.Vector2>>.Init(factory.UnityEngine_Events_UnityAction_UnityEngine_Vector2);

		TypeTraits<System.Action>.Init(factory.Check_System_Action);
		TypeTraits<UnityEngine.Events.UnityAction>.Init(factory.Check_UnityEngine_Events_UnityAction);
		TypeTraits<System.Predicate<int>>.Init(factory.Check_System_Predicate_int);
		TypeTraits<System.Action<int>>.Init(factory.Check_System_Action_int);
		TypeTraits<System.Comparison<int>>.Init(factory.Check_System_Comparison_int);
		TypeTraits<System.Func<int,int>>.Init(factory.Check_System_Func_int_int);
		TypeTraits<GNetManager.OnConnectedDelegate>.Init(factory.Check_GNetManager_OnConnectedDelegate);
		TypeTraits<GNetManager.OnDisconnectDelegate>.Init(factory.Check_GNetManager_OnDisconnectDelegate);
		TypeTraits<GNetManager.OnResponseDelegate>.Init(factory.Check_GNetManager_OnResponseDelegate);
		TypeTraits<UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode>>.Init(factory.Check_UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode);
		TypeTraits<UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene>>.Init(factory.Check_UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene);
		TypeTraits<UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene>>.Init(factory.Check_UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene);
		TypeTraits<GBaseLoader.OnLoadProgressDelegate>.Init(factory.Check_GBaseLoader_OnLoadProgressDelegate);
		TypeTraits<GBaseLoader.OnLoadCompleteDelegate>.Init(factory.Check_GBaseLoader_OnLoadCompleteDelegate);
		TypeTraits<GBaseLoader.OnLoadErrorDelegate>.Init(factory.Check_GBaseLoader_OnLoadErrorDelegate);
		TypeTraits<GResManager.OnCompleteDelegate>.Init(factory.Check_GResManager_OnCompleteDelegate);
		TypeTraits<GResManager.OnLoadItemCompleteDelegate>.Init(factory.Check_GResManager_OnLoadItemCompleteDelegate);
		TypeTraits<GResManager.OnLoadAssetCompleteDelegate>.Init(factory.Check_GResManager_OnLoadAssetCompleteDelegate);
		TypeTraits<GResManager.OnLoadAllAssetCompleteDelegate>.Init(factory.Check_GResManager_OnLoadAllAssetCompleteDelegate);
		TypeTraits<GResManager.OnLoadPrefabCompleteDelegate>.Init(factory.Check_GResManager_OnLoadPrefabCompleteDelegate);
		TypeTraits<GResManager.OnLoadSpriteCompleteDelegate>.Init(factory.Check_GResManager_OnLoadSpriteCompleteDelegate);
		TypeTraits<GResManager.OnLoadAllSpriteInAtlasCompleteDelegate>.Init(factory.Check_GResManager_OnLoadAllSpriteInAtlasCompleteDelegate);
		TypeTraits<GResManager.OnLoadTexture2DCompleteDelegate>.Init(factory.Check_GResManager_OnLoadTexture2DCompleteDelegate);
		TypeTraits<GResManager.OnLoadAnimationClipCompleteDelegate>.Init(factory.Check_GResManager_OnLoadAnimationClipCompleteDelegate);
		TypeTraits<GResManager.OnLoadScriptableObjectCompleteDelegate>.Init(factory.Check_GResManager_OnLoadScriptableObjectCompleteDelegate);
		TypeTraits<GResManager.OnLoadMeshCompleteDelegate>.Init(factory.Check_GResManager_OnLoadMeshCompleteDelegate);
		TypeTraits<GResManager.OnLoadMaterialCompleteDelegate>.Init(factory.Check_GResManager_OnLoadMaterialCompleteDelegate);
		TypeTraits<GResManager.OnLoadAudioClipCompleteDelegate>.Init(factory.Check_GResManager_OnLoadAudioClipCompleteDelegate);
		TypeTraits<GResManager.OnLoadFontCompleteDelegate>.Init(factory.Check_GResManager_OnLoadFontCompleteDelegate);
		TypeTraits<UnityEngine.AI.NavMesh.OnNavMeshPreUpdate>.Init(factory.Check_UnityEngine_AI_NavMesh_OnNavMeshPreUpdate);
		TypeTraits<TexturePackerManager.OnAssetPackCompleteDelegate>.Init(factory.Check_TexturePackerManager_OnAssetPackCompleteDelegate);
		TypeTraits<System.Action<UnityEngine.Playables.PlayableDirector>>.Init(factory.Check_System_Action_UnityEngine_Playables_PlayableDirector);
		TypeTraits<System.Func<UnityEngine.UI.ILayoutElement,float>>.Init(factory.Check_System_Func_UnityEngine_UI_ILayoutElement_float);
		TypeTraits<HUDManager.OnCreateMeshComplete>.Init(factory.Check_HUDManager_OnCreateMeshComplete);
		TypeTraits<UnityEngine.Font.FontTextureRebuildCallback>.Init(factory.Check_UnityEngine_Font_FontTextureRebuildCallback);
		TypeTraits<System.Action<UnityEngine.Font>>.Init(factory.Check_System_Action_UnityEngine_Font);
		TypeTraits<Gear.GFileManager.OnCompareCDNBuildVersionResult>.Init(factory.Check_Gear_GFileManager_OnCompareCDNBuildVersionResult);
		TypeTraits<Gear.GFileManager.OnErrorDelegate>.Init(factory.Check_Gear_GFileManager_OnErrorDelegate);
		TypeTraits<Gear.GFileManager.OnCompareCDNResult>.Init(factory.Check_Gear_GFileManager_OnCompareCDNResult);
		TypeTraits<Gear.GFileManager.OnLoadQueueProgressDelegate>.Init(factory.Check_Gear_GFileManager_OnLoadQueueProgressDelegate);
		TypeTraits<Gear.GFileManager.OnLoadQueueCompleteDelegate>.Init(factory.Check_Gear_GFileManager_OnLoadQueueCompleteDelegate);
		TypeTraits<Gear.GFileManager.OnCompleteDelegate>.Init(factory.Check_Gear_GFileManager_OnCompleteDelegate);
		TypeTraits<Gear.GFileManager.OnItemCompleteDelegate>.Init(factory.Check_Gear_GFileManager_OnItemCompleteDelegate);
		TypeTraits<GLoaderQueue.OnLoadCompleteDelegate>.Init(factory.Check_GLoaderQueue_OnLoadCompleteDelegate);
		TypeTraits<GLoaderQueue.OnLoadProgressDelegate>.Init(factory.Check_GLoaderQueue_OnLoadProgressDelegate);
		TypeTraits<GLoaderQueue.OnLoadErrorDelegate>.Init(factory.Check_GLoaderQueue_OnLoadErrorDelegate);
		TypeTraits<UnityEngine.AndroidJavaRunnable>.Init(factory.Check_UnityEngine_AndroidJavaRunnable);
		TypeTraits<UIRoot.OnChangeScreenSizeComplete>.Init(factory.Check_UIRoot_OnChangeScreenSizeComplete);
		TypeTraits<AtlasManager.OnGetAtlasComplete>.Init(factory.Check_AtlasManager_OnGetAtlasComplete);
		TypeTraits<Gear.GWebManager.OnRequestTextCompleteDelegate>.Init(factory.Check_Gear_GWebManager_OnRequestTextCompleteDelegate);
		TypeTraits<Gear.GWebManager.OnRequestTextErrorDelegate>.Init(factory.Check_Gear_GWebManager_OnRequestTextErrorDelegate);
		TypeTraits<UnityEngine.Video.VideoPlayer.EventHandler>.Init(factory.Check_UnityEngine_Video_VideoPlayer_EventHandler);
		TypeTraits<UnityEngine.Video.VideoPlayer.ErrorEventHandler>.Init(factory.Check_UnityEngine_Video_VideoPlayer_ErrorEventHandler);
		TypeTraits<UnityEngine.Video.VideoPlayer.TimeEventHandler>.Init(factory.Check_UnityEngine_Video_VideoPlayer_TimeEventHandler);
		TypeTraits<UnityEngine.Video.VideoPlayer.FrameReadyEventHandler>.Init(factory.Check_UnityEngine_Video_VideoPlayer_FrameReadyEventHandler);
		TypeTraits<System.Action<TMPro.TMP_TextInfo>>.Init(factory.Check_System_Action_TMPro_TMP_TextInfo);
		TypeTraits<DG.Tweening.Core.DOGetter<float>>.Init(factory.Check_DG_Tweening_Core_DOGetter_float);
		TypeTraits<DG.Tweening.Core.DOSetter<float>>.Init(factory.Check_DG_Tweening_Core_DOSetter_float);
		TypeTraits<DG.Tweening.Core.DOGetter<double>>.Init(factory.Check_DG_Tweening_Core_DOGetter_double);
		TypeTraits<DG.Tweening.Core.DOSetter<double>>.Init(factory.Check_DG_Tweening_Core_DOSetter_double);
		TypeTraits<DG.Tweening.Core.DOGetter<int>>.Init(factory.Check_DG_Tweening_Core_DOGetter_int);
		TypeTraits<DG.Tweening.Core.DOSetter<int>>.Init(factory.Check_DG_Tweening_Core_DOSetter_int);
		TypeTraits<DG.Tweening.Core.DOGetter<uint>>.Init(factory.Check_DG_Tweening_Core_DOGetter_uint);
		TypeTraits<DG.Tweening.Core.DOSetter<uint>>.Init(factory.Check_DG_Tweening_Core_DOSetter_uint);
		TypeTraits<DG.Tweening.Core.DOGetter<long>>.Init(factory.Check_DG_Tweening_Core_DOGetter_long);
		TypeTraits<DG.Tweening.Core.DOSetter<long>>.Init(factory.Check_DG_Tweening_Core_DOSetter_long);
		TypeTraits<DG.Tweening.Core.DOGetter<ulong>>.Init(factory.Check_DG_Tweening_Core_DOGetter_ulong);
		TypeTraits<DG.Tweening.Core.DOSetter<ulong>>.Init(factory.Check_DG_Tweening_Core_DOSetter_ulong);
		TypeTraits<DG.Tweening.Core.DOGetter<string>>.Init(factory.Check_DG_Tweening_Core_DOGetter_string);
		TypeTraits<DG.Tweening.Core.DOSetter<string>>.Init(factory.Check_DG_Tweening_Core_DOSetter_string);
		TypeTraits<DG.Tweening.Core.DOGetter<UnityEngine.Vector2>>.Init(factory.Check_DG_Tweening_Core_DOGetter_UnityEngine_Vector2);
		TypeTraits<DG.Tweening.Core.DOSetter<UnityEngine.Vector2>>.Init(factory.Check_DG_Tweening_Core_DOSetter_UnityEngine_Vector2);
		TypeTraits<DG.Tweening.Core.DOGetter<UnityEngine.Vector3>>.Init(factory.Check_DG_Tweening_Core_DOGetter_UnityEngine_Vector3);
		TypeTraits<DG.Tweening.Core.DOSetter<UnityEngine.Vector3>>.Init(factory.Check_DG_Tweening_Core_DOSetter_UnityEngine_Vector3);
		TypeTraits<DG.Tweening.Core.DOGetter<UnityEngine.Vector4>>.Init(factory.Check_DG_Tweening_Core_DOGetter_UnityEngine_Vector4);
		TypeTraits<DG.Tweening.Core.DOSetter<UnityEngine.Vector4>>.Init(factory.Check_DG_Tweening_Core_DOSetter_UnityEngine_Vector4);
		TypeTraits<DG.Tweening.Core.DOGetter<UnityEngine.Quaternion>>.Init(factory.Check_DG_Tweening_Core_DOGetter_UnityEngine_Quaternion);
		TypeTraits<DG.Tweening.Core.DOSetter<UnityEngine.Quaternion>>.Init(factory.Check_DG_Tweening_Core_DOSetter_UnityEngine_Quaternion);
		TypeTraits<DG.Tweening.Core.DOGetter<UnityEngine.Color>>.Init(factory.Check_DG_Tweening_Core_DOGetter_UnityEngine_Color);
		TypeTraits<DG.Tweening.Core.DOSetter<UnityEngine.Color>>.Init(factory.Check_DG_Tweening_Core_DOSetter_UnityEngine_Color);
		TypeTraits<DG.Tweening.Core.DOGetter<UnityEngine.Rect>>.Init(factory.Check_DG_Tweening_Core_DOGetter_UnityEngine_Rect);
		TypeTraits<DG.Tweening.Core.DOSetter<UnityEngine.Rect>>.Init(factory.Check_DG_Tweening_Core_DOSetter_UnityEngine_Rect);
		TypeTraits<DG.Tweening.Core.DOGetter<UnityEngine.RectOffset>>.Init(factory.Check_DG_Tweening_Core_DOGetter_UnityEngine_RectOffset);
		TypeTraits<DG.Tweening.Core.DOSetter<UnityEngine.RectOffset>>.Init(factory.Check_DG_Tweening_Core_DOSetter_UnityEngine_RectOffset);
		TypeTraits<DG.Tweening.TweenCallback>.Init(factory.Check_DG_Tweening_TweenCallback);
		TypeTraits<DG.Tweening.TweenCallback<int>>.Init(factory.Check_DG_Tweening_TweenCallback_int);
		TypeTraits<UnityEngine.RectTransform.ReapplyDrivenProperties>.Init(factory.Check_UnityEngine_RectTransform_ReapplyDrivenProperties);
		TypeTraits<UnityEngine.Camera.CameraCallback>.Init(factory.Check_UnityEngine_Camera_CameraCallback);
		TypeTraits<UnityEngine.Application.AdvertisingIdentifierCallback>.Init(factory.Check_UnityEngine_Application_AdvertisingIdentifierCallback);
		TypeTraits<UnityEngine.Application.LowMemoryCallback>.Init(factory.Check_UnityEngine_Application_LowMemoryCallback);
		TypeTraits<UnityEngine.Application.LogCallback>.Init(factory.Check_UnityEngine_Application_LogCallback);
		TypeTraits<System.Action<bool>>.Init(factory.Check_System_Action_bool);
		TypeTraits<System.Action<string>>.Init(factory.Check_System_Action_string);
		TypeTraits<System.Func<bool>>.Init(factory.Check_System_Func_bool);
		TypeTraits<System.Action<UnityEngine.AsyncOperation>>.Init(factory.Check_System_Action_UnityEngine_AsyncOperation);
		TypeTraits<UnityEngine.AudioClip.PCMReaderCallback>.Init(factory.Check_UnityEngine_AudioClip_PCMReaderCallback);
		TypeTraits<UnityEngine.AudioClip.PCMSetPositionCallback>.Init(factory.Check_UnityEngine_AudioClip_PCMSetPositionCallback);
		TypeTraits<UnityEngine.Canvas.WillRenderCanvases>.Init(factory.Check_UnityEngine_Canvas_WillRenderCanvases);
		TypeTraits<UnityEngine.UI.InputField.OnValidateInput>.Init(factory.Check_UnityEngine_UI_InputField_OnValidateInput);
		TypeTraits<UnityEngine.Events.UnityAction<string>>.Init(factory.Check_UnityEngine_Events_UnityAction_string);
		TypeTraits<UnityEngine.Events.UnityAction<float>>.Init(factory.Check_UnityEngine_Events_UnityAction_float);
		TypeTraits<UnityEngine.Events.UnityAction<bool>>.Init(factory.Check_UnityEngine_Events_UnityAction_bool);
		TypeTraits<UnityEngine.Events.UnityAction<int>>.Init(factory.Check_UnityEngine_Events_UnityAction_int);
		TypeTraits<UnityEngine.Events.UnityAction<UnityEngine.Vector2>>.Init(factory.Check_UnityEngine_Events_UnityAction_UnityEngine_Vector2);

		StackTraits<System.Action>.Push = factory.Push_System_Action;
		StackTraits<UnityEngine.Events.UnityAction>.Push = factory.Push_UnityEngine_Events_UnityAction;
		StackTraits<System.Predicate<int>>.Push = factory.Push_System_Predicate_int;
		StackTraits<System.Action<int>>.Push = factory.Push_System_Action_int;
		StackTraits<System.Comparison<int>>.Push = factory.Push_System_Comparison_int;
		StackTraits<System.Func<int,int>>.Push = factory.Push_System_Func_int_int;
		StackTraits<GNetManager.OnConnectedDelegate>.Push = factory.Push_GNetManager_OnConnectedDelegate;
		StackTraits<GNetManager.OnDisconnectDelegate>.Push = factory.Push_GNetManager_OnDisconnectDelegate;
		StackTraits<GNetManager.OnResponseDelegate>.Push = factory.Push_GNetManager_OnResponseDelegate;
		StackTraits<UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode>>.Push = factory.Push_UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode;
		StackTraits<UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene>>.Push = factory.Push_UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene;
		StackTraits<UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene>>.Push = factory.Push_UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene;
		StackTraits<GBaseLoader.OnLoadProgressDelegate>.Push = factory.Push_GBaseLoader_OnLoadProgressDelegate;
		StackTraits<GBaseLoader.OnLoadCompleteDelegate>.Push = factory.Push_GBaseLoader_OnLoadCompleteDelegate;
		StackTraits<GBaseLoader.OnLoadErrorDelegate>.Push = factory.Push_GBaseLoader_OnLoadErrorDelegate;
		StackTraits<GResManager.OnCompleteDelegate>.Push = factory.Push_GResManager_OnCompleteDelegate;
		StackTraits<GResManager.OnLoadItemCompleteDelegate>.Push = factory.Push_GResManager_OnLoadItemCompleteDelegate;
		StackTraits<GResManager.OnLoadAssetCompleteDelegate>.Push = factory.Push_GResManager_OnLoadAssetCompleteDelegate;
		StackTraits<GResManager.OnLoadAllAssetCompleteDelegate>.Push = factory.Push_GResManager_OnLoadAllAssetCompleteDelegate;
		StackTraits<GResManager.OnLoadPrefabCompleteDelegate>.Push = factory.Push_GResManager_OnLoadPrefabCompleteDelegate;
		StackTraits<GResManager.OnLoadSpriteCompleteDelegate>.Push = factory.Push_GResManager_OnLoadSpriteCompleteDelegate;
		StackTraits<GResManager.OnLoadAllSpriteInAtlasCompleteDelegate>.Push = factory.Push_GResManager_OnLoadAllSpriteInAtlasCompleteDelegate;
		StackTraits<GResManager.OnLoadTexture2DCompleteDelegate>.Push = factory.Push_GResManager_OnLoadTexture2DCompleteDelegate;
		StackTraits<GResManager.OnLoadAnimationClipCompleteDelegate>.Push = factory.Push_GResManager_OnLoadAnimationClipCompleteDelegate;
		StackTraits<GResManager.OnLoadScriptableObjectCompleteDelegate>.Push = factory.Push_GResManager_OnLoadScriptableObjectCompleteDelegate;
		StackTraits<GResManager.OnLoadMeshCompleteDelegate>.Push = factory.Push_GResManager_OnLoadMeshCompleteDelegate;
		StackTraits<GResManager.OnLoadMaterialCompleteDelegate>.Push = factory.Push_GResManager_OnLoadMaterialCompleteDelegate;
		StackTraits<GResManager.OnLoadAudioClipCompleteDelegate>.Push = factory.Push_GResManager_OnLoadAudioClipCompleteDelegate;
		StackTraits<GResManager.OnLoadFontCompleteDelegate>.Push = factory.Push_GResManager_OnLoadFontCompleteDelegate;
		StackTraits<UnityEngine.AI.NavMesh.OnNavMeshPreUpdate>.Push = factory.Push_UnityEngine_AI_NavMesh_OnNavMeshPreUpdate;
		StackTraits<TexturePackerManager.OnAssetPackCompleteDelegate>.Push = factory.Push_TexturePackerManager_OnAssetPackCompleteDelegate;
		StackTraits<System.Action<UnityEngine.Playables.PlayableDirector>>.Push = factory.Push_System_Action_UnityEngine_Playables_PlayableDirector;
		StackTraits<System.Func<UnityEngine.UI.ILayoutElement,float>>.Push = factory.Push_System_Func_UnityEngine_UI_ILayoutElement_float;
		StackTraits<HUDManager.OnCreateMeshComplete>.Push = factory.Push_HUDManager_OnCreateMeshComplete;
		StackTraits<UnityEngine.Font.FontTextureRebuildCallback>.Push = factory.Push_UnityEngine_Font_FontTextureRebuildCallback;
		StackTraits<System.Action<UnityEngine.Font>>.Push = factory.Push_System_Action_UnityEngine_Font;
		StackTraits<Gear.GFileManager.OnCompareCDNBuildVersionResult>.Push = factory.Push_Gear_GFileManager_OnCompareCDNBuildVersionResult;
		StackTraits<Gear.GFileManager.OnErrorDelegate>.Push = factory.Push_Gear_GFileManager_OnErrorDelegate;
		StackTraits<Gear.GFileManager.OnCompareCDNResult>.Push = factory.Push_Gear_GFileManager_OnCompareCDNResult;
		StackTraits<Gear.GFileManager.OnLoadQueueProgressDelegate>.Push = factory.Push_Gear_GFileManager_OnLoadQueueProgressDelegate;
		StackTraits<Gear.GFileManager.OnLoadQueueCompleteDelegate>.Push = factory.Push_Gear_GFileManager_OnLoadQueueCompleteDelegate;
		StackTraits<Gear.GFileManager.OnCompleteDelegate>.Push = factory.Push_Gear_GFileManager_OnCompleteDelegate;
		StackTraits<Gear.GFileManager.OnItemCompleteDelegate>.Push = factory.Push_Gear_GFileManager_OnItemCompleteDelegate;
		StackTraits<GLoaderQueue.OnLoadCompleteDelegate>.Push = factory.Push_GLoaderQueue_OnLoadCompleteDelegate;
		StackTraits<GLoaderQueue.OnLoadProgressDelegate>.Push = factory.Push_GLoaderQueue_OnLoadProgressDelegate;
		StackTraits<GLoaderQueue.OnLoadErrorDelegate>.Push = factory.Push_GLoaderQueue_OnLoadErrorDelegate;
		StackTraits<UnityEngine.AndroidJavaRunnable>.Push = factory.Push_UnityEngine_AndroidJavaRunnable;
		StackTraits<UIRoot.OnChangeScreenSizeComplete>.Push = factory.Push_UIRoot_OnChangeScreenSizeComplete;
		StackTraits<AtlasManager.OnGetAtlasComplete>.Push = factory.Push_AtlasManager_OnGetAtlasComplete;
		StackTraits<Gear.GWebManager.OnRequestTextCompleteDelegate>.Push = factory.Push_Gear_GWebManager_OnRequestTextCompleteDelegate;
		StackTraits<Gear.GWebManager.OnRequestTextErrorDelegate>.Push = factory.Push_Gear_GWebManager_OnRequestTextErrorDelegate;
		StackTraits<UnityEngine.Video.VideoPlayer.EventHandler>.Push = factory.Push_UnityEngine_Video_VideoPlayer_EventHandler;
		StackTraits<UnityEngine.Video.VideoPlayer.ErrorEventHandler>.Push = factory.Push_UnityEngine_Video_VideoPlayer_ErrorEventHandler;
		StackTraits<UnityEngine.Video.VideoPlayer.TimeEventHandler>.Push = factory.Push_UnityEngine_Video_VideoPlayer_TimeEventHandler;
		StackTraits<UnityEngine.Video.VideoPlayer.FrameReadyEventHandler>.Push = factory.Push_UnityEngine_Video_VideoPlayer_FrameReadyEventHandler;
		StackTraits<System.Action<TMPro.TMP_TextInfo>>.Push = factory.Push_System_Action_TMPro_TMP_TextInfo;
		StackTraits<DG.Tweening.Core.DOGetter<float>>.Push = factory.Push_DG_Tweening_Core_DOGetter_float;
		StackTraits<DG.Tweening.Core.DOSetter<float>>.Push = factory.Push_DG_Tweening_Core_DOSetter_float;
		StackTraits<DG.Tweening.Core.DOGetter<double>>.Push = factory.Push_DG_Tweening_Core_DOGetter_double;
		StackTraits<DG.Tweening.Core.DOSetter<double>>.Push = factory.Push_DG_Tweening_Core_DOSetter_double;
		StackTraits<DG.Tweening.Core.DOGetter<int>>.Push = factory.Push_DG_Tweening_Core_DOGetter_int;
		StackTraits<DG.Tweening.Core.DOSetter<int>>.Push = factory.Push_DG_Tweening_Core_DOSetter_int;
		StackTraits<DG.Tweening.Core.DOGetter<uint>>.Push = factory.Push_DG_Tweening_Core_DOGetter_uint;
		StackTraits<DG.Tweening.Core.DOSetter<uint>>.Push = factory.Push_DG_Tweening_Core_DOSetter_uint;
		StackTraits<DG.Tweening.Core.DOGetter<long>>.Push = factory.Push_DG_Tweening_Core_DOGetter_long;
		StackTraits<DG.Tweening.Core.DOSetter<long>>.Push = factory.Push_DG_Tweening_Core_DOSetter_long;
		StackTraits<DG.Tweening.Core.DOGetter<ulong>>.Push = factory.Push_DG_Tweening_Core_DOGetter_ulong;
		StackTraits<DG.Tweening.Core.DOSetter<ulong>>.Push = factory.Push_DG_Tweening_Core_DOSetter_ulong;
		StackTraits<DG.Tweening.Core.DOGetter<string>>.Push = factory.Push_DG_Tweening_Core_DOGetter_string;
		StackTraits<DG.Tweening.Core.DOSetter<string>>.Push = factory.Push_DG_Tweening_Core_DOSetter_string;
		StackTraits<DG.Tweening.Core.DOGetter<UnityEngine.Vector2>>.Push = factory.Push_DG_Tweening_Core_DOGetter_UnityEngine_Vector2;
		StackTraits<DG.Tweening.Core.DOSetter<UnityEngine.Vector2>>.Push = factory.Push_DG_Tweening_Core_DOSetter_UnityEngine_Vector2;
		StackTraits<DG.Tweening.Core.DOGetter<UnityEngine.Vector3>>.Push = factory.Push_DG_Tweening_Core_DOGetter_UnityEngine_Vector3;
		StackTraits<DG.Tweening.Core.DOSetter<UnityEngine.Vector3>>.Push = factory.Push_DG_Tweening_Core_DOSetter_UnityEngine_Vector3;
		StackTraits<DG.Tweening.Core.DOGetter<UnityEngine.Vector4>>.Push = factory.Push_DG_Tweening_Core_DOGetter_UnityEngine_Vector4;
		StackTraits<DG.Tweening.Core.DOSetter<UnityEngine.Vector4>>.Push = factory.Push_DG_Tweening_Core_DOSetter_UnityEngine_Vector4;
		StackTraits<DG.Tweening.Core.DOGetter<UnityEngine.Quaternion>>.Push = factory.Push_DG_Tweening_Core_DOGetter_UnityEngine_Quaternion;
		StackTraits<DG.Tweening.Core.DOSetter<UnityEngine.Quaternion>>.Push = factory.Push_DG_Tweening_Core_DOSetter_UnityEngine_Quaternion;
		StackTraits<DG.Tweening.Core.DOGetter<UnityEngine.Color>>.Push = factory.Push_DG_Tweening_Core_DOGetter_UnityEngine_Color;
		StackTraits<DG.Tweening.Core.DOSetter<UnityEngine.Color>>.Push = factory.Push_DG_Tweening_Core_DOSetter_UnityEngine_Color;
		StackTraits<DG.Tweening.Core.DOGetter<UnityEngine.Rect>>.Push = factory.Push_DG_Tweening_Core_DOGetter_UnityEngine_Rect;
		StackTraits<DG.Tweening.Core.DOSetter<UnityEngine.Rect>>.Push = factory.Push_DG_Tweening_Core_DOSetter_UnityEngine_Rect;
		StackTraits<DG.Tweening.Core.DOGetter<UnityEngine.RectOffset>>.Push = factory.Push_DG_Tweening_Core_DOGetter_UnityEngine_RectOffset;
		StackTraits<DG.Tweening.Core.DOSetter<UnityEngine.RectOffset>>.Push = factory.Push_DG_Tweening_Core_DOSetter_UnityEngine_RectOffset;
		StackTraits<DG.Tweening.TweenCallback>.Push = factory.Push_DG_Tweening_TweenCallback;
		StackTraits<DG.Tweening.TweenCallback<int>>.Push = factory.Push_DG_Tweening_TweenCallback_int;
		StackTraits<UnityEngine.RectTransform.ReapplyDrivenProperties>.Push = factory.Push_UnityEngine_RectTransform_ReapplyDrivenProperties;
		StackTraits<UnityEngine.Camera.CameraCallback>.Push = factory.Push_UnityEngine_Camera_CameraCallback;
		StackTraits<UnityEngine.Application.AdvertisingIdentifierCallback>.Push = factory.Push_UnityEngine_Application_AdvertisingIdentifierCallback;
		StackTraits<UnityEngine.Application.LowMemoryCallback>.Push = factory.Push_UnityEngine_Application_LowMemoryCallback;
		StackTraits<UnityEngine.Application.LogCallback>.Push = factory.Push_UnityEngine_Application_LogCallback;
		StackTraits<System.Action<bool>>.Push = factory.Push_System_Action_bool;
		StackTraits<System.Action<string>>.Push = factory.Push_System_Action_string;
		StackTraits<System.Func<bool>>.Push = factory.Push_System_Func_bool;
		StackTraits<System.Action<UnityEngine.AsyncOperation>>.Push = factory.Push_System_Action_UnityEngine_AsyncOperation;
		StackTraits<UnityEngine.AudioClip.PCMReaderCallback>.Push = factory.Push_UnityEngine_AudioClip_PCMReaderCallback;
		StackTraits<UnityEngine.AudioClip.PCMSetPositionCallback>.Push = factory.Push_UnityEngine_AudioClip_PCMSetPositionCallback;
		StackTraits<UnityEngine.Canvas.WillRenderCanvases>.Push = factory.Push_UnityEngine_Canvas_WillRenderCanvases;
		StackTraits<UnityEngine.UI.InputField.OnValidateInput>.Push = factory.Push_UnityEngine_UI_InputField_OnValidateInput;
		StackTraits<UnityEngine.Events.UnityAction<string>>.Push = factory.Push_UnityEngine_Events_UnityAction_string;
		StackTraits<UnityEngine.Events.UnityAction<float>>.Push = factory.Push_UnityEngine_Events_UnityAction_float;
		StackTraits<UnityEngine.Events.UnityAction<bool>>.Push = factory.Push_UnityEngine_Events_UnityAction_bool;
		StackTraits<UnityEngine.Events.UnityAction<int>>.Push = factory.Push_UnityEngine_Events_UnityAction_int;
		StackTraits<UnityEngine.Events.UnityAction<UnityEngine.Vector2>>.Push = factory.Push_UnityEngine_Events_UnityAction_UnityEngine_Vector2;
	}
    
    public static Delegate CreateDelegate(Type t, LuaFunction func = null)
    {
        DelegateCreate Create = null;

        if (!dict.TryGetValue(t, out Create))
        {
            throw new LuaException(string.Format("Delegate {0} not register", LuaMisc.GetTypeName(t)));            
        }

        if (func != null)
        {
            LuaState state = func.GetLuaState();
            LuaDelegate target = state.GetLuaDelegate(func);
            
            if (target != null)
            {
                return Delegate.CreateDelegate(t, target, target.method);
            }  
            else
            {
                Delegate d = Create(func, null, false);
                target = d.Target as LuaDelegate;
                state.AddLuaDelegate(target, func);
                return d;
            }       
        }

        return Create(null, null, false);        
    }
    
    public static Delegate CreateDelegate(Type t, LuaFunction func, LuaTable self)
    {
        DelegateCreate Create = null;

        if (!dict.TryGetValue(t, out Create))
        {
            throw new LuaException(string.Format("Delegate {0} not register", LuaMisc.GetTypeName(t)));
        }

        if (func != null)
        {
            LuaState state = func.GetLuaState();
            LuaDelegate target = state.GetLuaDelegate(func, self);

            if (target != null)
            {
                return Delegate.CreateDelegate(t, target, target.method);
            }
            else
            {
                Delegate d = Create(func, self, true);
                target = d.Target as LuaDelegate;
                state.AddLuaDelegate(target, func, self);
                return d;
            }
        }

        return Create(null, null, true);
    }
    
    public static Delegate RemoveDelegate(Delegate obj, LuaFunction func)
    {        
        Delegate[] ds = obj.GetInvocationList();

        for (int i = 0; i < ds.Length; i++)
        {
            LuaDelegate ld = ds[i].Target as LuaDelegate;

            if (ld != null && ld.func == func)
            {
                obj = Delegate.Remove(obj, ds[i]);
                if (obj != null) obj.AddRef();
                break;
            }
        }

        return obj;
    }
    
    public static Delegate RemoveDelegate(Delegate obj, Delegate dg)
    {
        LuaDelegate remove = dg.Target as LuaDelegate;

        if (remove == null)
        {
            obj = Delegate.Remove(obj, dg);
            return obj;
        }
        
        Delegate[] ds = obj.GetInvocationList();        

        for (int i = 0; i < ds.Length; i++)
        {
            LuaDelegate ld = ds[i].Target as LuaDelegate;

            if (ld != null && ld == remove)
            {
                obj = Delegate.Remove(obj, ds[i]);
                if (obj != null) obj.AddRef();                
                break;
            }
        }

        return obj;
    }

	class System_Action_Event : LuaDelegate
	{
		public System_Action_Event(LuaFunction func) : base(func) { }
		public System_Action_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action System_Action(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			System_Action_Event target = new System_Action_Event(func);
			System.Action d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_Event target = new System_Action_Event(func, self);
			System.Action d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<System.Action>(L, pos);
	}

	void Push_System_Action(IntPtr L, System.Action o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Events_UnityAction_Event : LuaDelegate
	{
		public UnityEngine_Events_UnityAction_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Events_UnityAction_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Events.UnityAction UnityEngine_Events_UnityAction(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Events.UnityAction fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Events_UnityAction_Event target = new UnityEngine_Events_UnityAction_Event(func);
			UnityEngine.Events.UnityAction d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Events_UnityAction_Event target = new UnityEngine_Events_UnityAction_Event(func, self);
			UnityEngine.Events.UnityAction d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Events_UnityAction(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<UnityEngine.Events.UnityAction>(L, pos);
	}

	void Push_UnityEngine_Events_UnityAction(IntPtr L, UnityEngine.Events.UnityAction o)
	{
		ToLua.Push(L, o);
	}

	class System_Predicate_int_Event : LuaDelegate
	{
		public System_Predicate_int_Event(LuaFunction func) : base(func) { }
		public System_Predicate_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public bool Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}

		public bool CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}
	}

	public System.Predicate<int> System_Predicate_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Predicate<int> fn = delegate(int param0) { return false; };
			return fn;
		}

		if(!flag)
		{
			System_Predicate_int_Event target = new System_Predicate_int_Event(func);
			System.Predicate<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Predicate_int_Event target = new System_Predicate_int_Event(func, self);
			System.Predicate<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Predicate_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<System.Predicate<int>>(L, pos);
	}

	void Push_System_Predicate_int(IntPtr L, System.Predicate<int> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_int_Event : LuaDelegate
	{
		public System_Action_int_Event(LuaFunction func) : base(func) { }
		public System_Action_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<int> System_Action_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<int> fn = delegate(int param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_int_Event target = new System_Action_int_Event(func);
			System.Action<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_int_Event target = new System_Action_int_Event(func, self);
			System.Action<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<System.Action<int>>(L, pos);
	}

	void Push_System_Action_int(IntPtr L, System.Action<int> o)
	{
		ToLua.Push(L, o);
	}

	class System_Comparison_int_Event : LuaDelegate
	{
		public System_Comparison_int_Event(LuaFunction func) : base(func) { }
		public System_Comparison_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public int Call(int param0, int param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			int ret = (int)func.CheckInteger();
			func.EndPCall();
			return ret;
		}

		public int CallWithSelf(int param0, int param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			int ret = (int)func.CheckInteger();
			func.EndPCall();
			return ret;
		}
	}

	public System.Comparison<int> System_Comparison_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Comparison<int> fn = delegate(int param0, int param1) { return 0; };
			return fn;
		}

		if(!flag)
		{
			System_Comparison_int_Event target = new System_Comparison_int_Event(func);
			System.Comparison<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Comparison_int_Event target = new System_Comparison_int_Event(func, self);
			System.Comparison<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Comparison_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<System.Comparison<int>>(L, pos);
	}

	void Push_System_Comparison_int(IntPtr L, System.Comparison<int> o)
	{
		ToLua.Push(L, o);
	}

	class System_Func_int_int_Event : LuaDelegate
	{
		public System_Func_int_int_Event(LuaFunction func) : base(func) { }
		public System_Func_int_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public int Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			int ret = (int)func.CheckInteger();
			func.EndPCall();
			return ret;
		}

		public int CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			int ret = (int)func.CheckInteger();
			func.EndPCall();
			return ret;
		}
	}

	public System.Func<int,int> System_Func_int_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Func<int,int> fn = delegate(int param0) { return 0; };
			return fn;
		}

		if(!flag)
		{
			System_Func_int_int_Event target = new System_Func_int_int_Event(func);
			System.Func<int,int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Func_int_int_Event target = new System_Func_int_int_Event(func, self);
			System.Func<int,int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Func_int_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<System.Func<int,int>>(L, pos);
	}

	void Push_System_Func_int_int(IntPtr L, System.Func<int,int> o)
	{
		ToLua.Push(L, o);
	}

	class GNetManager_OnConnectedDelegate_Event : LuaDelegate
	{
		public GNetManager_OnConnectedDelegate_Event(LuaFunction func) : base(func) { }
		public GNetManager_OnConnectedDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public GNetManager.OnConnectedDelegate GNetManager_OnConnectedDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			GNetManager.OnConnectedDelegate fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			GNetManager_OnConnectedDelegate_Event target = new GNetManager_OnConnectedDelegate_Event(func);
			GNetManager.OnConnectedDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			GNetManager_OnConnectedDelegate_Event target = new GNetManager_OnConnectedDelegate_Event(func, self);
			GNetManager.OnConnectedDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_GNetManager_OnConnectedDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<GNetManager.OnConnectedDelegate>(L, pos);
	}

	void Push_GNetManager_OnConnectedDelegate(IntPtr L, GNetManager.OnConnectedDelegate o)
	{
		ToLua.Push(L, o);
	}

	class GNetManager_OnDisconnectDelegate_Event : LuaDelegate
	{
		public GNetManager_OnDisconnectDelegate_Event(LuaFunction func) : base(func) { }
		public GNetManager_OnDisconnectDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public GNetManager.OnDisconnectDelegate GNetManager_OnDisconnectDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			GNetManager.OnDisconnectDelegate fn = delegate(int param0) { };
			return fn;
		}

		if(!flag)
		{
			GNetManager_OnDisconnectDelegate_Event target = new GNetManager_OnDisconnectDelegate_Event(func);
			GNetManager.OnDisconnectDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			GNetManager_OnDisconnectDelegate_Event target = new GNetManager_OnDisconnectDelegate_Event(func, self);
			GNetManager.OnDisconnectDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_GNetManager_OnDisconnectDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<GNetManager.OnDisconnectDelegate>(L, pos);
	}

	void Push_GNetManager_OnDisconnectDelegate(IntPtr L, GNetManager.OnDisconnectDelegate o)
	{
		ToLua.Push(L, o);
	}

	class GNetManager_OnResponseDelegate_Event : LuaDelegate
	{
		public GNetManager_OnResponseDelegate_Event(LuaFunction func) : base(func) { }
		public GNetManager_OnResponseDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(GByteArray param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(GByteArray param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public GNetManager.OnResponseDelegate GNetManager_OnResponseDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			GNetManager.OnResponseDelegate fn = delegate(GByteArray param0) { };
			return fn;
		}

		if(!flag)
		{
			GNetManager_OnResponseDelegate_Event target = new GNetManager_OnResponseDelegate_Event(func);
			GNetManager.OnResponseDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			GNetManager_OnResponseDelegate_Event target = new GNetManager_OnResponseDelegate_Event(func, self);
			GNetManager.OnResponseDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_GNetManager_OnResponseDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<GNetManager.OnResponseDelegate>(L, pos);
	}

	void Push_GNetManager_OnResponseDelegate(IntPtr L, GNetManager.OnResponseDelegate o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode_Event : LuaDelegate
	{
		public UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.SceneManagement.Scene param0, UnityEngine.SceneManagement.LoadSceneMode param1)
		{
			func.BeginPCall();
			func.PushValue(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.SceneManagement.Scene param0, UnityEngine.SceneManagement.LoadSceneMode param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushValue(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode> UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode> fn = delegate(UnityEngine.SceneManagement.Scene param0, UnityEngine.SceneManagement.LoadSceneMode param1) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode_Event target = new UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode_Event(func);
			UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode_Event target = new UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode_Event(func, self);
			UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode>>(L, pos);
	}

	void Push_UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode(IntPtr L, UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode> o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_Event : LuaDelegate
	{
		public UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.SceneManagement.Scene param0)
		{
			func.BeginPCall();
			func.PushValue(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.SceneManagement.Scene param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushValue(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene> UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene> fn = delegate(UnityEngine.SceneManagement.Scene param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_Event target = new UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_Event(func);
			UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_Event target = new UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_Event(func, self);
			UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene>>(L, pos);
	}

	void Push_UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene(IntPtr L, UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene> o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene_Event : LuaDelegate
	{
		public UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.SceneManagement.Scene param0, UnityEngine.SceneManagement.Scene param1)
		{
			func.BeginPCall();
			func.PushValue(param0);
			func.PushValue(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.SceneManagement.Scene param0, UnityEngine.SceneManagement.Scene param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushValue(param0);
			func.PushValue(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene> UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene> fn = delegate(UnityEngine.SceneManagement.Scene param0, UnityEngine.SceneManagement.Scene param1) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene_Event target = new UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene_Event(func);
			UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene_Event target = new UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene_Event(func, self);
			UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene>>(L, pos);
	}

	void Push_UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene(IntPtr L, UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene> o)
	{
		ToLua.Push(L, o);
	}

	class GBaseLoader_OnLoadProgressDelegate_Event : LuaDelegate
	{
		public GBaseLoader_OnLoadProgressDelegate_Event(LuaFunction func) : base(func) { }
		public GBaseLoader_OnLoadProgressDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(GBaseLoader param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(GBaseLoader param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public GBaseLoader.OnLoadProgressDelegate GBaseLoader_OnLoadProgressDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			GBaseLoader.OnLoadProgressDelegate fn = delegate(GBaseLoader param0) { };
			return fn;
		}

		if(!flag)
		{
			GBaseLoader_OnLoadProgressDelegate_Event target = new GBaseLoader_OnLoadProgressDelegate_Event(func);
			GBaseLoader.OnLoadProgressDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			GBaseLoader_OnLoadProgressDelegate_Event target = new GBaseLoader_OnLoadProgressDelegate_Event(func, self);
			GBaseLoader.OnLoadProgressDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_GBaseLoader_OnLoadProgressDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<GBaseLoader.OnLoadProgressDelegate>(L, pos);
	}

	void Push_GBaseLoader_OnLoadProgressDelegate(IntPtr L, GBaseLoader.OnLoadProgressDelegate o)
	{
		ToLua.Push(L, o);
	}

	class GBaseLoader_OnLoadCompleteDelegate_Event : LuaDelegate
	{
		public GBaseLoader_OnLoadCompleteDelegate_Event(LuaFunction func) : base(func) { }
		public GBaseLoader_OnLoadCompleteDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(GBaseLoader param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(GBaseLoader param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public GBaseLoader.OnLoadCompleteDelegate GBaseLoader_OnLoadCompleteDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			GBaseLoader.OnLoadCompleteDelegate fn = delegate(GBaseLoader param0) { };
			return fn;
		}

		if(!flag)
		{
			GBaseLoader_OnLoadCompleteDelegate_Event target = new GBaseLoader_OnLoadCompleteDelegate_Event(func);
			GBaseLoader.OnLoadCompleteDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			GBaseLoader_OnLoadCompleteDelegate_Event target = new GBaseLoader_OnLoadCompleteDelegate_Event(func, self);
			GBaseLoader.OnLoadCompleteDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_GBaseLoader_OnLoadCompleteDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<GBaseLoader.OnLoadCompleteDelegate>(L, pos);
	}

	void Push_GBaseLoader_OnLoadCompleteDelegate(IntPtr L, GBaseLoader.OnLoadCompleteDelegate o)
	{
		ToLua.Push(L, o);
	}

	class GBaseLoader_OnLoadErrorDelegate_Event : LuaDelegate
	{
		public GBaseLoader_OnLoadErrorDelegate_Event(LuaFunction func) : base(func) { }
		public GBaseLoader_OnLoadErrorDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(GBaseLoader param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(GBaseLoader param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public GBaseLoader.OnLoadErrorDelegate GBaseLoader_OnLoadErrorDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			GBaseLoader.OnLoadErrorDelegate fn = delegate(GBaseLoader param0) { };
			return fn;
		}

		if(!flag)
		{
			GBaseLoader_OnLoadErrorDelegate_Event target = new GBaseLoader_OnLoadErrorDelegate_Event(func);
			GBaseLoader.OnLoadErrorDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			GBaseLoader_OnLoadErrorDelegate_Event target = new GBaseLoader_OnLoadErrorDelegate_Event(func, self);
			GBaseLoader.OnLoadErrorDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_GBaseLoader_OnLoadErrorDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<GBaseLoader.OnLoadErrorDelegate>(L, pos);
	}

	void Push_GBaseLoader_OnLoadErrorDelegate(IntPtr L, GBaseLoader.OnLoadErrorDelegate o)
	{
		ToLua.Push(L, o);
	}

	class GResManager_OnCompleteDelegate_Event : LuaDelegate
	{
		public GResManager_OnCompleteDelegate_Event(LuaFunction func) : base(func) { }
		public GResManager_OnCompleteDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public GResManager.OnCompleteDelegate GResManager_OnCompleteDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			GResManager.OnCompleteDelegate fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			GResManager_OnCompleteDelegate_Event target = new GResManager_OnCompleteDelegate_Event(func);
			GResManager.OnCompleteDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			GResManager_OnCompleteDelegate_Event target = new GResManager_OnCompleteDelegate_Event(func, self);
			GResManager.OnCompleteDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_GResManager_OnCompleteDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<GResManager.OnCompleteDelegate>(L, pos);
	}

	void Push_GResManager_OnCompleteDelegate(IntPtr L, GResManager.OnCompleteDelegate o)
	{
		ToLua.Push(L, o);
	}

	class GResManager_OnLoadItemCompleteDelegate_Event : LuaDelegate
	{
		public GResManager_OnLoadItemCompleteDelegate_Event(LuaFunction func) : base(func) { }
		public GResManager_OnLoadItemCompleteDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public GResManager.OnLoadItemCompleteDelegate GResManager_OnLoadItemCompleteDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			GResManager.OnLoadItemCompleteDelegate fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			GResManager_OnLoadItemCompleteDelegate_Event target = new GResManager_OnLoadItemCompleteDelegate_Event(func);
			GResManager.OnLoadItemCompleteDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			GResManager_OnLoadItemCompleteDelegate_Event target = new GResManager_OnLoadItemCompleteDelegate_Event(func, self);
			GResManager.OnLoadItemCompleteDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_GResManager_OnLoadItemCompleteDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<GResManager.OnLoadItemCompleteDelegate>(L, pos);
	}

	void Push_GResManager_OnLoadItemCompleteDelegate(IntPtr L, GResManager.OnLoadItemCompleteDelegate o)
	{
		ToLua.Push(L, o);
	}

	class GResManager_OnLoadAssetCompleteDelegate_Event : LuaDelegate
	{
		public GResManager_OnLoadAssetCompleteDelegate_Event(LuaFunction func) : base(func) { }
		public GResManager_OnLoadAssetCompleteDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Object param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Object param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public GResManager.OnLoadAssetCompleteDelegate GResManager_OnLoadAssetCompleteDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			GResManager.OnLoadAssetCompleteDelegate fn = delegate(UnityEngine.Object param0) { };
			return fn;
		}

		if(!flag)
		{
			GResManager_OnLoadAssetCompleteDelegate_Event target = new GResManager_OnLoadAssetCompleteDelegate_Event(func);
			GResManager.OnLoadAssetCompleteDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			GResManager_OnLoadAssetCompleteDelegate_Event target = new GResManager_OnLoadAssetCompleteDelegate_Event(func, self);
			GResManager.OnLoadAssetCompleteDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_GResManager_OnLoadAssetCompleteDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<GResManager.OnLoadAssetCompleteDelegate>(L, pos);
	}

	void Push_GResManager_OnLoadAssetCompleteDelegate(IntPtr L, GResManager.OnLoadAssetCompleteDelegate o)
	{
		ToLua.Push(L, o);
	}

	class GResManager_OnLoadAllAssetCompleteDelegate_Event : LuaDelegate
	{
		public GResManager_OnLoadAllAssetCompleteDelegate_Event(LuaFunction func) : base(func) { }
		public GResManager_OnLoadAllAssetCompleteDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Object[] param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Object[] param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public GResManager.OnLoadAllAssetCompleteDelegate GResManager_OnLoadAllAssetCompleteDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			GResManager.OnLoadAllAssetCompleteDelegate fn = delegate(UnityEngine.Object[] param0) { };
			return fn;
		}

		if(!flag)
		{
			GResManager_OnLoadAllAssetCompleteDelegate_Event target = new GResManager_OnLoadAllAssetCompleteDelegate_Event(func);
			GResManager.OnLoadAllAssetCompleteDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			GResManager_OnLoadAllAssetCompleteDelegate_Event target = new GResManager_OnLoadAllAssetCompleteDelegate_Event(func, self);
			GResManager.OnLoadAllAssetCompleteDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_GResManager_OnLoadAllAssetCompleteDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<GResManager.OnLoadAllAssetCompleteDelegate>(L, pos);
	}

	void Push_GResManager_OnLoadAllAssetCompleteDelegate(IntPtr L, GResManager.OnLoadAllAssetCompleteDelegate o)
	{
		ToLua.Push(L, o);
	}

	class GResManager_OnLoadPrefabCompleteDelegate_Event : LuaDelegate
	{
		public GResManager_OnLoadPrefabCompleteDelegate_Event(LuaFunction func) : base(func) { }
		public GResManager_OnLoadPrefabCompleteDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.GameObject param0)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.GameObject param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public GResManager.OnLoadPrefabCompleteDelegate GResManager_OnLoadPrefabCompleteDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			GResManager.OnLoadPrefabCompleteDelegate fn = delegate(UnityEngine.GameObject param0) { };
			return fn;
		}

		if(!flag)
		{
			GResManager_OnLoadPrefabCompleteDelegate_Event target = new GResManager_OnLoadPrefabCompleteDelegate_Event(func);
			GResManager.OnLoadPrefabCompleteDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			GResManager_OnLoadPrefabCompleteDelegate_Event target = new GResManager_OnLoadPrefabCompleteDelegate_Event(func, self);
			GResManager.OnLoadPrefabCompleteDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_GResManager_OnLoadPrefabCompleteDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<GResManager.OnLoadPrefabCompleteDelegate>(L, pos);
	}

	void Push_GResManager_OnLoadPrefabCompleteDelegate(IntPtr L, GResManager.OnLoadPrefabCompleteDelegate o)
	{
		ToLua.Push(L, o);
	}

	class GResManager_OnLoadSpriteCompleteDelegate_Event : LuaDelegate
	{
		public GResManager_OnLoadSpriteCompleteDelegate_Event(LuaFunction func) : base(func) { }
		public GResManager_OnLoadSpriteCompleteDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Sprite param0)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Sprite param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public GResManager.OnLoadSpriteCompleteDelegate GResManager_OnLoadSpriteCompleteDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			GResManager.OnLoadSpriteCompleteDelegate fn = delegate(UnityEngine.Sprite param0) { };
			return fn;
		}

		if(!flag)
		{
			GResManager_OnLoadSpriteCompleteDelegate_Event target = new GResManager_OnLoadSpriteCompleteDelegate_Event(func);
			GResManager.OnLoadSpriteCompleteDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			GResManager_OnLoadSpriteCompleteDelegate_Event target = new GResManager_OnLoadSpriteCompleteDelegate_Event(func, self);
			GResManager.OnLoadSpriteCompleteDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_GResManager_OnLoadSpriteCompleteDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<GResManager.OnLoadSpriteCompleteDelegate>(L, pos);
	}

	void Push_GResManager_OnLoadSpriteCompleteDelegate(IntPtr L, GResManager.OnLoadSpriteCompleteDelegate o)
	{
		ToLua.Push(L, o);
	}

	class GResManager_OnLoadAllSpriteInAtlasCompleteDelegate_Event : LuaDelegate
	{
		public GResManager_OnLoadAllSpriteInAtlasCompleteDelegate_Event(LuaFunction func) : base(func) { }
		public GResManager_OnLoadAllSpriteInAtlasCompleteDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(AtlasInfo param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(AtlasInfo param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public GResManager.OnLoadAllSpriteInAtlasCompleteDelegate GResManager_OnLoadAllSpriteInAtlasCompleteDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			GResManager.OnLoadAllSpriteInAtlasCompleteDelegate fn = delegate(AtlasInfo param0) { };
			return fn;
		}

		if(!flag)
		{
			GResManager_OnLoadAllSpriteInAtlasCompleteDelegate_Event target = new GResManager_OnLoadAllSpriteInAtlasCompleteDelegate_Event(func);
			GResManager.OnLoadAllSpriteInAtlasCompleteDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			GResManager_OnLoadAllSpriteInAtlasCompleteDelegate_Event target = new GResManager_OnLoadAllSpriteInAtlasCompleteDelegate_Event(func, self);
			GResManager.OnLoadAllSpriteInAtlasCompleteDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_GResManager_OnLoadAllSpriteInAtlasCompleteDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<GResManager.OnLoadAllSpriteInAtlasCompleteDelegate>(L, pos);
	}

	void Push_GResManager_OnLoadAllSpriteInAtlasCompleteDelegate(IntPtr L, GResManager.OnLoadAllSpriteInAtlasCompleteDelegate o)
	{
		ToLua.Push(L, o);
	}

	class GResManager_OnLoadTexture2DCompleteDelegate_Event : LuaDelegate
	{
		public GResManager_OnLoadTexture2DCompleteDelegate_Event(LuaFunction func) : base(func) { }
		public GResManager_OnLoadTexture2DCompleteDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Texture2D param0)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Texture2D param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public GResManager.OnLoadTexture2DCompleteDelegate GResManager_OnLoadTexture2DCompleteDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			GResManager.OnLoadTexture2DCompleteDelegate fn = delegate(UnityEngine.Texture2D param0) { };
			return fn;
		}

		if(!flag)
		{
			GResManager_OnLoadTexture2DCompleteDelegate_Event target = new GResManager_OnLoadTexture2DCompleteDelegate_Event(func);
			GResManager.OnLoadTexture2DCompleteDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			GResManager_OnLoadTexture2DCompleteDelegate_Event target = new GResManager_OnLoadTexture2DCompleteDelegate_Event(func, self);
			GResManager.OnLoadTexture2DCompleteDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_GResManager_OnLoadTexture2DCompleteDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<GResManager.OnLoadTexture2DCompleteDelegate>(L, pos);
	}

	void Push_GResManager_OnLoadTexture2DCompleteDelegate(IntPtr L, GResManager.OnLoadTexture2DCompleteDelegate o)
	{
		ToLua.Push(L, o);
	}

	class GResManager_OnLoadAnimationClipCompleteDelegate_Event : LuaDelegate
	{
		public GResManager_OnLoadAnimationClipCompleteDelegate_Event(LuaFunction func) : base(func) { }
		public GResManager_OnLoadAnimationClipCompleteDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.AnimationClip param0)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.AnimationClip param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public GResManager.OnLoadAnimationClipCompleteDelegate GResManager_OnLoadAnimationClipCompleteDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			GResManager.OnLoadAnimationClipCompleteDelegate fn = delegate(UnityEngine.AnimationClip param0) { };
			return fn;
		}

		if(!flag)
		{
			GResManager_OnLoadAnimationClipCompleteDelegate_Event target = new GResManager_OnLoadAnimationClipCompleteDelegate_Event(func);
			GResManager.OnLoadAnimationClipCompleteDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			GResManager_OnLoadAnimationClipCompleteDelegate_Event target = new GResManager_OnLoadAnimationClipCompleteDelegate_Event(func, self);
			GResManager.OnLoadAnimationClipCompleteDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_GResManager_OnLoadAnimationClipCompleteDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<GResManager.OnLoadAnimationClipCompleteDelegate>(L, pos);
	}

	void Push_GResManager_OnLoadAnimationClipCompleteDelegate(IntPtr L, GResManager.OnLoadAnimationClipCompleteDelegate o)
	{
		ToLua.Push(L, o);
	}

	class GResManager_OnLoadScriptableObjectCompleteDelegate_Event : LuaDelegate
	{
		public GResManager_OnLoadScriptableObjectCompleteDelegate_Event(LuaFunction func) : base(func) { }
		public GResManager_OnLoadScriptableObjectCompleteDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.ScriptableObject param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.ScriptableObject param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public GResManager.OnLoadScriptableObjectCompleteDelegate GResManager_OnLoadScriptableObjectCompleteDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			GResManager.OnLoadScriptableObjectCompleteDelegate fn = delegate(UnityEngine.ScriptableObject param0) { };
			return fn;
		}

		if(!flag)
		{
			GResManager_OnLoadScriptableObjectCompleteDelegate_Event target = new GResManager_OnLoadScriptableObjectCompleteDelegate_Event(func);
			GResManager.OnLoadScriptableObjectCompleteDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			GResManager_OnLoadScriptableObjectCompleteDelegate_Event target = new GResManager_OnLoadScriptableObjectCompleteDelegate_Event(func, self);
			GResManager.OnLoadScriptableObjectCompleteDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_GResManager_OnLoadScriptableObjectCompleteDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<GResManager.OnLoadScriptableObjectCompleteDelegate>(L, pos);
	}

	void Push_GResManager_OnLoadScriptableObjectCompleteDelegate(IntPtr L, GResManager.OnLoadScriptableObjectCompleteDelegate o)
	{
		ToLua.Push(L, o);
	}

	class GResManager_OnLoadMeshCompleteDelegate_Event : LuaDelegate
	{
		public GResManager_OnLoadMeshCompleteDelegate_Event(LuaFunction func) : base(func) { }
		public GResManager_OnLoadMeshCompleteDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Mesh param0)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Mesh param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public GResManager.OnLoadMeshCompleteDelegate GResManager_OnLoadMeshCompleteDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			GResManager.OnLoadMeshCompleteDelegate fn = delegate(UnityEngine.Mesh param0) { };
			return fn;
		}

		if(!flag)
		{
			GResManager_OnLoadMeshCompleteDelegate_Event target = new GResManager_OnLoadMeshCompleteDelegate_Event(func);
			GResManager.OnLoadMeshCompleteDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			GResManager_OnLoadMeshCompleteDelegate_Event target = new GResManager_OnLoadMeshCompleteDelegate_Event(func, self);
			GResManager.OnLoadMeshCompleteDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_GResManager_OnLoadMeshCompleteDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<GResManager.OnLoadMeshCompleteDelegate>(L, pos);
	}

	void Push_GResManager_OnLoadMeshCompleteDelegate(IntPtr L, GResManager.OnLoadMeshCompleteDelegate o)
	{
		ToLua.Push(L, o);
	}

	class GResManager_OnLoadMaterialCompleteDelegate_Event : LuaDelegate
	{
		public GResManager_OnLoadMaterialCompleteDelegate_Event(LuaFunction func) : base(func) { }
		public GResManager_OnLoadMaterialCompleteDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Material param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Material param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public GResManager.OnLoadMaterialCompleteDelegate GResManager_OnLoadMaterialCompleteDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			GResManager.OnLoadMaterialCompleteDelegate fn = delegate(UnityEngine.Material param0) { };
			return fn;
		}

		if(!flag)
		{
			GResManager_OnLoadMaterialCompleteDelegate_Event target = new GResManager_OnLoadMaterialCompleteDelegate_Event(func);
			GResManager.OnLoadMaterialCompleteDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			GResManager_OnLoadMaterialCompleteDelegate_Event target = new GResManager_OnLoadMaterialCompleteDelegate_Event(func, self);
			GResManager.OnLoadMaterialCompleteDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_GResManager_OnLoadMaterialCompleteDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<GResManager.OnLoadMaterialCompleteDelegate>(L, pos);
	}

	void Push_GResManager_OnLoadMaterialCompleteDelegate(IntPtr L, GResManager.OnLoadMaterialCompleteDelegate o)
	{
		ToLua.Push(L, o);
	}

	class GResManager_OnLoadAudioClipCompleteDelegate_Event : LuaDelegate
	{
		public GResManager_OnLoadAudioClipCompleteDelegate_Event(LuaFunction func) : base(func) { }
		public GResManager_OnLoadAudioClipCompleteDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.AudioClip param0)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.AudioClip param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public GResManager.OnLoadAudioClipCompleteDelegate GResManager_OnLoadAudioClipCompleteDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			GResManager.OnLoadAudioClipCompleteDelegate fn = delegate(UnityEngine.AudioClip param0) { };
			return fn;
		}

		if(!flag)
		{
			GResManager_OnLoadAudioClipCompleteDelegate_Event target = new GResManager_OnLoadAudioClipCompleteDelegate_Event(func);
			GResManager.OnLoadAudioClipCompleteDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			GResManager_OnLoadAudioClipCompleteDelegate_Event target = new GResManager_OnLoadAudioClipCompleteDelegate_Event(func, self);
			GResManager.OnLoadAudioClipCompleteDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_GResManager_OnLoadAudioClipCompleteDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<GResManager.OnLoadAudioClipCompleteDelegate>(L, pos);
	}

	void Push_GResManager_OnLoadAudioClipCompleteDelegate(IntPtr L, GResManager.OnLoadAudioClipCompleteDelegate o)
	{
		ToLua.Push(L, o);
	}

	class GResManager_OnLoadFontCompleteDelegate_Event : LuaDelegate
	{
		public GResManager_OnLoadFontCompleteDelegate_Event(LuaFunction func) : base(func) { }
		public GResManager_OnLoadFontCompleteDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Font param0)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Font param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public GResManager.OnLoadFontCompleteDelegate GResManager_OnLoadFontCompleteDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			GResManager.OnLoadFontCompleteDelegate fn = delegate(UnityEngine.Font param0) { };
			return fn;
		}

		if(!flag)
		{
			GResManager_OnLoadFontCompleteDelegate_Event target = new GResManager_OnLoadFontCompleteDelegate_Event(func);
			GResManager.OnLoadFontCompleteDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			GResManager_OnLoadFontCompleteDelegate_Event target = new GResManager_OnLoadFontCompleteDelegate_Event(func, self);
			GResManager.OnLoadFontCompleteDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_GResManager_OnLoadFontCompleteDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<GResManager.OnLoadFontCompleteDelegate>(L, pos);
	}

	void Push_GResManager_OnLoadFontCompleteDelegate(IntPtr L, GResManager.OnLoadFontCompleteDelegate o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_AI_NavMesh_OnNavMeshPreUpdate_Event : LuaDelegate
	{
		public UnityEngine_AI_NavMesh_OnNavMeshPreUpdate_Event(LuaFunction func) : base(func) { }
		public UnityEngine_AI_NavMesh_OnNavMeshPreUpdate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.AI.NavMesh.OnNavMeshPreUpdate UnityEngine_AI_NavMesh_OnNavMeshPreUpdate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.AI.NavMesh.OnNavMeshPreUpdate fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_AI_NavMesh_OnNavMeshPreUpdate_Event target = new UnityEngine_AI_NavMesh_OnNavMeshPreUpdate_Event(func);
			UnityEngine.AI.NavMesh.OnNavMeshPreUpdate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_AI_NavMesh_OnNavMeshPreUpdate_Event target = new UnityEngine_AI_NavMesh_OnNavMeshPreUpdate_Event(func, self);
			UnityEngine.AI.NavMesh.OnNavMeshPreUpdate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_AI_NavMesh_OnNavMeshPreUpdate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<UnityEngine.AI.NavMesh.OnNavMeshPreUpdate>(L, pos);
	}

	void Push_UnityEngine_AI_NavMesh_OnNavMeshPreUpdate(IntPtr L, UnityEngine.AI.NavMesh.OnNavMeshPreUpdate o)
	{
		ToLua.Push(L, o);
	}

	class TexturePackerManager_OnAssetPackCompleteDelegate_Event : LuaDelegate
	{
		public TexturePackerManager_OnAssetPackCompleteDelegate_Event(LuaFunction func) : base(func) { }
		public TexturePackerManager_OnAssetPackCompleteDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public TexturePackerManager.OnAssetPackCompleteDelegate TexturePackerManager_OnAssetPackCompleteDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			TexturePackerManager.OnAssetPackCompleteDelegate fn = delegate(string param0) { };
			return fn;
		}

		if(!flag)
		{
			TexturePackerManager_OnAssetPackCompleteDelegate_Event target = new TexturePackerManager_OnAssetPackCompleteDelegate_Event(func);
			TexturePackerManager.OnAssetPackCompleteDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			TexturePackerManager_OnAssetPackCompleteDelegate_Event target = new TexturePackerManager_OnAssetPackCompleteDelegate_Event(func, self);
			TexturePackerManager.OnAssetPackCompleteDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_TexturePackerManager_OnAssetPackCompleteDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<TexturePackerManager.OnAssetPackCompleteDelegate>(L, pos);
	}

	void Push_TexturePackerManager_OnAssetPackCompleteDelegate(IntPtr L, TexturePackerManager.OnAssetPackCompleteDelegate o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_UnityEngine_Playables_PlayableDirector_Event : LuaDelegate
	{
		public System_Action_UnityEngine_Playables_PlayableDirector_Event(LuaFunction func) : base(func) { }
		public System_Action_UnityEngine_Playables_PlayableDirector_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Playables.PlayableDirector param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Playables.PlayableDirector param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<UnityEngine.Playables.PlayableDirector> System_Action_UnityEngine_Playables_PlayableDirector(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<UnityEngine.Playables.PlayableDirector> fn = delegate(UnityEngine.Playables.PlayableDirector param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_UnityEngine_Playables_PlayableDirector_Event target = new System_Action_UnityEngine_Playables_PlayableDirector_Event(func);
			System.Action<UnityEngine.Playables.PlayableDirector> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_UnityEngine_Playables_PlayableDirector_Event target = new System_Action_UnityEngine_Playables_PlayableDirector_Event(func, self);
			System.Action<UnityEngine.Playables.PlayableDirector> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_UnityEngine_Playables_PlayableDirector(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<System.Action<UnityEngine.Playables.PlayableDirector>>(L, pos);
	}

	void Push_System_Action_UnityEngine_Playables_PlayableDirector(IntPtr L, System.Action<UnityEngine.Playables.PlayableDirector> o)
	{
		ToLua.Push(L, o);
	}

	class System_Func_UnityEngine_UI_ILayoutElement_float_Event : LuaDelegate
	{
		public System_Func_UnityEngine_UI_ILayoutElement_float_Event(LuaFunction func) : base(func) { }
		public System_Func_UnityEngine_UI_ILayoutElement_float_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public float Call(UnityEngine.UI.ILayoutElement param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			float ret = (float)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public float CallWithSelf(UnityEngine.UI.ILayoutElement param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			float ret = (float)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public System.Func<UnityEngine.UI.ILayoutElement,float> System_Func_UnityEngine_UI_ILayoutElement_float(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Func<UnityEngine.UI.ILayoutElement,float> fn = delegate(UnityEngine.UI.ILayoutElement param0) { return 0; };
			return fn;
		}

		if(!flag)
		{
			System_Func_UnityEngine_UI_ILayoutElement_float_Event target = new System_Func_UnityEngine_UI_ILayoutElement_float_Event(func);
			System.Func<UnityEngine.UI.ILayoutElement,float> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Func_UnityEngine_UI_ILayoutElement_float_Event target = new System_Func_UnityEngine_UI_ILayoutElement_float_Event(func, self);
			System.Func<UnityEngine.UI.ILayoutElement,float> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Func_UnityEngine_UI_ILayoutElement_float(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<System.Func<UnityEngine.UI.ILayoutElement,float>>(L, pos);
	}

	void Push_System_Func_UnityEngine_UI_ILayoutElement_float(IntPtr L, System.Func<UnityEngine.UI.ILayoutElement,float> o)
	{
		ToLua.Push(L, o);
	}

	class HUDManager_OnCreateMeshComplete_Event : LuaDelegate
	{
		public HUDManager_OnCreateMeshComplete_Event(LuaFunction func) : base(func) { }
		public HUDManager_OnCreateMeshComplete_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public HUDManager.OnCreateMeshComplete HUDManager_OnCreateMeshComplete(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			HUDManager.OnCreateMeshComplete fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			HUDManager_OnCreateMeshComplete_Event target = new HUDManager_OnCreateMeshComplete_Event(func);
			HUDManager.OnCreateMeshComplete d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			HUDManager_OnCreateMeshComplete_Event target = new HUDManager_OnCreateMeshComplete_Event(func, self);
			HUDManager.OnCreateMeshComplete d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_HUDManager_OnCreateMeshComplete(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<HUDManager.OnCreateMeshComplete>(L, pos);
	}

	void Push_HUDManager_OnCreateMeshComplete(IntPtr L, HUDManager.OnCreateMeshComplete o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Font_FontTextureRebuildCallback_Event : LuaDelegate
	{
		public UnityEngine_Font_FontTextureRebuildCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Font_FontTextureRebuildCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Font.FontTextureRebuildCallback UnityEngine_Font_FontTextureRebuildCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Font.FontTextureRebuildCallback fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Font_FontTextureRebuildCallback_Event target = new UnityEngine_Font_FontTextureRebuildCallback_Event(func);
			UnityEngine.Font.FontTextureRebuildCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Font_FontTextureRebuildCallback_Event target = new UnityEngine_Font_FontTextureRebuildCallback_Event(func, self);
			UnityEngine.Font.FontTextureRebuildCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Font_FontTextureRebuildCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<UnityEngine.Font.FontTextureRebuildCallback>(L, pos);
	}

	void Push_UnityEngine_Font_FontTextureRebuildCallback(IntPtr L, UnityEngine.Font.FontTextureRebuildCallback o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_UnityEngine_Font_Event : LuaDelegate
	{
		public System_Action_UnityEngine_Font_Event(LuaFunction func) : base(func) { }
		public System_Action_UnityEngine_Font_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Font param0)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Font param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<UnityEngine.Font> System_Action_UnityEngine_Font(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<UnityEngine.Font> fn = delegate(UnityEngine.Font param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_UnityEngine_Font_Event target = new System_Action_UnityEngine_Font_Event(func);
			System.Action<UnityEngine.Font> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_UnityEngine_Font_Event target = new System_Action_UnityEngine_Font_Event(func, self);
			System.Action<UnityEngine.Font> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_UnityEngine_Font(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<System.Action<UnityEngine.Font>>(L, pos);
	}

	void Push_System_Action_UnityEngine_Font(IntPtr L, System.Action<UnityEngine.Font> o)
	{
		ToLua.Push(L, o);
	}

	class Gear_GFileManager_OnCompareCDNBuildVersionResult_Event : LuaDelegate
	{
		public Gear_GFileManager_OnCompareCDNBuildVersionResult_Event(LuaFunction func) : base(func) { }
		public Gear_GFileManager_OnCompareCDNBuildVersionResult_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(bool param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(bool param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public Gear.GFileManager.OnCompareCDNBuildVersionResult Gear_GFileManager_OnCompareCDNBuildVersionResult(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Gear.GFileManager.OnCompareCDNBuildVersionResult fn = delegate(bool param0) { };
			return fn;
		}

		if(!flag)
		{
			Gear_GFileManager_OnCompareCDNBuildVersionResult_Event target = new Gear_GFileManager_OnCompareCDNBuildVersionResult_Event(func);
			Gear.GFileManager.OnCompareCDNBuildVersionResult d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Gear_GFileManager_OnCompareCDNBuildVersionResult_Event target = new Gear_GFileManager_OnCompareCDNBuildVersionResult_Event(func, self);
			Gear.GFileManager.OnCompareCDNBuildVersionResult d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Gear_GFileManager_OnCompareCDNBuildVersionResult(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<Gear.GFileManager.OnCompareCDNBuildVersionResult>(L, pos);
	}

	void Push_Gear_GFileManager_OnCompareCDNBuildVersionResult(IntPtr L, Gear.GFileManager.OnCompareCDNBuildVersionResult o)
	{
		ToLua.Push(L, o);
	}

	class Gear_GFileManager_OnErrorDelegate_Event : LuaDelegate
	{
		public Gear_GFileManager_OnErrorDelegate_Event(LuaFunction func) : base(func) { }
		public Gear_GFileManager_OnErrorDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public Gear.GFileManager.OnErrorDelegate Gear_GFileManager_OnErrorDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Gear.GFileManager.OnErrorDelegate fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			Gear_GFileManager_OnErrorDelegate_Event target = new Gear_GFileManager_OnErrorDelegate_Event(func);
			Gear.GFileManager.OnErrorDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Gear_GFileManager_OnErrorDelegate_Event target = new Gear_GFileManager_OnErrorDelegate_Event(func, self);
			Gear.GFileManager.OnErrorDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Gear_GFileManager_OnErrorDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<Gear.GFileManager.OnErrorDelegate>(L, pos);
	}

	void Push_Gear_GFileManager_OnErrorDelegate(IntPtr L, Gear.GFileManager.OnErrorDelegate o)
	{
		ToLua.Push(L, o);
	}

	class Gear_GFileManager_OnCompareCDNResult_Event : LuaDelegate
	{
		public Gear_GFileManager_OnCompareCDNResult_Event(LuaFunction func) : base(func) { }
		public Gear_GFileManager_OnCompareCDNResult_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Gear.GFileBundleInfo[] param0, float param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Gear.GFileBundleInfo[] param0, float param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public Gear.GFileManager.OnCompareCDNResult Gear_GFileManager_OnCompareCDNResult(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Gear.GFileManager.OnCompareCDNResult fn = delegate(Gear.GFileBundleInfo[] param0, float param1) { };
			return fn;
		}

		if(!flag)
		{
			Gear_GFileManager_OnCompareCDNResult_Event target = new Gear_GFileManager_OnCompareCDNResult_Event(func);
			Gear.GFileManager.OnCompareCDNResult d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Gear_GFileManager_OnCompareCDNResult_Event target = new Gear_GFileManager_OnCompareCDNResult_Event(func, self);
			Gear.GFileManager.OnCompareCDNResult d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Gear_GFileManager_OnCompareCDNResult(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<Gear.GFileManager.OnCompareCDNResult>(L, pos);
	}

	void Push_Gear_GFileManager_OnCompareCDNResult(IntPtr L, Gear.GFileManager.OnCompareCDNResult o)
	{
		ToLua.Push(L, o);
	}

	class Gear_GFileManager_OnLoadQueueProgressDelegate_Event : LuaDelegate
	{
		public Gear_GFileManager_OnLoadQueueProgressDelegate_Event(LuaFunction func) : base(func) { }
		public Gear_GFileManager_OnLoadQueueProgressDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(GLoaderQueue param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(GLoaderQueue param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public Gear.GFileManager.OnLoadQueueProgressDelegate Gear_GFileManager_OnLoadQueueProgressDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Gear.GFileManager.OnLoadQueueProgressDelegate fn = delegate(GLoaderQueue param0) { };
			return fn;
		}

		if(!flag)
		{
			Gear_GFileManager_OnLoadQueueProgressDelegate_Event target = new Gear_GFileManager_OnLoadQueueProgressDelegate_Event(func);
			Gear.GFileManager.OnLoadQueueProgressDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Gear_GFileManager_OnLoadQueueProgressDelegate_Event target = new Gear_GFileManager_OnLoadQueueProgressDelegate_Event(func, self);
			Gear.GFileManager.OnLoadQueueProgressDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Gear_GFileManager_OnLoadQueueProgressDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<Gear.GFileManager.OnLoadQueueProgressDelegate>(L, pos);
	}

	void Push_Gear_GFileManager_OnLoadQueueProgressDelegate(IntPtr L, Gear.GFileManager.OnLoadQueueProgressDelegate o)
	{
		ToLua.Push(L, o);
	}

	class Gear_GFileManager_OnLoadQueueCompleteDelegate_Event : LuaDelegate
	{
		public Gear_GFileManager_OnLoadQueueCompleteDelegate_Event(LuaFunction func) : base(func) { }
		public Gear_GFileManager_OnLoadQueueCompleteDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(GLoaderQueue param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(GLoaderQueue param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public Gear.GFileManager.OnLoadQueueCompleteDelegate Gear_GFileManager_OnLoadQueueCompleteDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Gear.GFileManager.OnLoadQueueCompleteDelegate fn = delegate(GLoaderQueue param0) { };
			return fn;
		}

		if(!flag)
		{
			Gear_GFileManager_OnLoadQueueCompleteDelegate_Event target = new Gear_GFileManager_OnLoadQueueCompleteDelegate_Event(func);
			Gear.GFileManager.OnLoadQueueCompleteDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Gear_GFileManager_OnLoadQueueCompleteDelegate_Event target = new Gear_GFileManager_OnLoadQueueCompleteDelegate_Event(func, self);
			Gear.GFileManager.OnLoadQueueCompleteDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Gear_GFileManager_OnLoadQueueCompleteDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<Gear.GFileManager.OnLoadQueueCompleteDelegate>(L, pos);
	}

	void Push_Gear_GFileManager_OnLoadQueueCompleteDelegate(IntPtr L, Gear.GFileManager.OnLoadQueueCompleteDelegate o)
	{
		ToLua.Push(L, o);
	}

	class Gear_GFileManager_OnCompleteDelegate_Event : LuaDelegate
	{
		public Gear_GFileManager_OnCompleteDelegate_Event(LuaFunction func) : base(func) { }
		public Gear_GFileManager_OnCompleteDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public Gear.GFileManager.OnCompleteDelegate Gear_GFileManager_OnCompleteDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Gear.GFileManager.OnCompleteDelegate fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			Gear_GFileManager_OnCompleteDelegate_Event target = new Gear_GFileManager_OnCompleteDelegate_Event(func);
			Gear.GFileManager.OnCompleteDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Gear_GFileManager_OnCompleteDelegate_Event target = new Gear_GFileManager_OnCompleteDelegate_Event(func, self);
			Gear.GFileManager.OnCompleteDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Gear_GFileManager_OnCompleteDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<Gear.GFileManager.OnCompleteDelegate>(L, pos);
	}

	void Push_Gear_GFileManager_OnCompleteDelegate(IntPtr L, Gear.GFileManager.OnCompleteDelegate o)
	{
		ToLua.Push(L, o);
	}

	class Gear_GFileManager_OnItemCompleteDelegate_Event : LuaDelegate
	{
		public Gear_GFileManager_OnItemCompleteDelegate_Event(LuaFunction func) : base(func) { }
		public Gear_GFileManager_OnItemCompleteDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public Gear.GFileManager.OnItemCompleteDelegate Gear_GFileManager_OnItemCompleteDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Gear.GFileManager.OnItemCompleteDelegate fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			Gear_GFileManager_OnItemCompleteDelegate_Event target = new Gear_GFileManager_OnItemCompleteDelegate_Event(func);
			Gear.GFileManager.OnItemCompleteDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Gear_GFileManager_OnItemCompleteDelegate_Event target = new Gear_GFileManager_OnItemCompleteDelegate_Event(func, self);
			Gear.GFileManager.OnItemCompleteDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Gear_GFileManager_OnItemCompleteDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<Gear.GFileManager.OnItemCompleteDelegate>(L, pos);
	}

	void Push_Gear_GFileManager_OnItemCompleteDelegate(IntPtr L, Gear.GFileManager.OnItemCompleteDelegate o)
	{
		ToLua.Push(L, o);
	}

	class GLoaderQueue_OnLoadCompleteDelegate_Event : LuaDelegate
	{
		public GLoaderQueue_OnLoadCompleteDelegate_Event(LuaFunction func) : base(func) { }
		public GLoaderQueue_OnLoadCompleteDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(GLoaderQueue param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(GLoaderQueue param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public GLoaderQueue.OnLoadCompleteDelegate GLoaderQueue_OnLoadCompleteDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			GLoaderQueue.OnLoadCompleteDelegate fn = delegate(GLoaderQueue param0) { };
			return fn;
		}

		if(!flag)
		{
			GLoaderQueue_OnLoadCompleteDelegate_Event target = new GLoaderQueue_OnLoadCompleteDelegate_Event(func);
			GLoaderQueue.OnLoadCompleteDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			GLoaderQueue_OnLoadCompleteDelegate_Event target = new GLoaderQueue_OnLoadCompleteDelegate_Event(func, self);
			GLoaderQueue.OnLoadCompleteDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_GLoaderQueue_OnLoadCompleteDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<GLoaderQueue.OnLoadCompleteDelegate>(L, pos);
	}

	void Push_GLoaderQueue_OnLoadCompleteDelegate(IntPtr L, GLoaderQueue.OnLoadCompleteDelegate o)
	{
		ToLua.Push(L, o);
	}

	class GLoaderQueue_OnLoadProgressDelegate_Event : LuaDelegate
	{
		public GLoaderQueue_OnLoadProgressDelegate_Event(LuaFunction func) : base(func) { }
		public GLoaderQueue_OnLoadProgressDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(GLoaderQueue param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(GLoaderQueue param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public GLoaderQueue.OnLoadProgressDelegate GLoaderQueue_OnLoadProgressDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			GLoaderQueue.OnLoadProgressDelegate fn = delegate(GLoaderQueue param0) { };
			return fn;
		}

		if(!flag)
		{
			GLoaderQueue_OnLoadProgressDelegate_Event target = new GLoaderQueue_OnLoadProgressDelegate_Event(func);
			GLoaderQueue.OnLoadProgressDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			GLoaderQueue_OnLoadProgressDelegate_Event target = new GLoaderQueue_OnLoadProgressDelegate_Event(func, self);
			GLoaderQueue.OnLoadProgressDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_GLoaderQueue_OnLoadProgressDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<GLoaderQueue.OnLoadProgressDelegate>(L, pos);
	}

	void Push_GLoaderQueue_OnLoadProgressDelegate(IntPtr L, GLoaderQueue.OnLoadProgressDelegate o)
	{
		ToLua.Push(L, o);
	}

	class GLoaderQueue_OnLoadErrorDelegate_Event : LuaDelegate
	{
		public GLoaderQueue_OnLoadErrorDelegate_Event(LuaFunction func) : base(func) { }
		public GLoaderQueue_OnLoadErrorDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(GLoaderQueue param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(GLoaderQueue param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public GLoaderQueue.OnLoadErrorDelegate GLoaderQueue_OnLoadErrorDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			GLoaderQueue.OnLoadErrorDelegate fn = delegate(GLoaderQueue param0) { };
			return fn;
		}

		if(!flag)
		{
			GLoaderQueue_OnLoadErrorDelegate_Event target = new GLoaderQueue_OnLoadErrorDelegate_Event(func);
			GLoaderQueue.OnLoadErrorDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			GLoaderQueue_OnLoadErrorDelegate_Event target = new GLoaderQueue_OnLoadErrorDelegate_Event(func, self);
			GLoaderQueue.OnLoadErrorDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_GLoaderQueue_OnLoadErrorDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<GLoaderQueue.OnLoadErrorDelegate>(L, pos);
	}

	void Push_GLoaderQueue_OnLoadErrorDelegate(IntPtr L, GLoaderQueue.OnLoadErrorDelegate o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_AndroidJavaRunnable_Event : LuaDelegate
	{
		public UnityEngine_AndroidJavaRunnable_Event(LuaFunction func) : base(func) { }
		public UnityEngine_AndroidJavaRunnable_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.AndroidJavaRunnable UnityEngine_AndroidJavaRunnable(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.AndroidJavaRunnable fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_AndroidJavaRunnable_Event target = new UnityEngine_AndroidJavaRunnable_Event(func);
			UnityEngine.AndroidJavaRunnable d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_AndroidJavaRunnable_Event target = new UnityEngine_AndroidJavaRunnable_Event(func, self);
			UnityEngine.AndroidJavaRunnable d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_AndroidJavaRunnable(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<UnityEngine.AndroidJavaRunnable>(L, pos);
	}

	void Push_UnityEngine_AndroidJavaRunnable(IntPtr L, UnityEngine.AndroidJavaRunnable o)
	{
		ToLua.Push(L, o);
	}

	class UIRoot_OnChangeScreenSizeComplete_Event : LuaDelegate
	{
		public UIRoot_OnChangeScreenSizeComplete_Event(LuaFunction func) : base(func) { }
		public UIRoot_OnChangeScreenSizeComplete_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public UIRoot.OnChangeScreenSizeComplete UIRoot_OnChangeScreenSizeComplete(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UIRoot.OnChangeScreenSizeComplete fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			UIRoot_OnChangeScreenSizeComplete_Event target = new UIRoot_OnChangeScreenSizeComplete_Event(func);
			UIRoot.OnChangeScreenSizeComplete d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UIRoot_OnChangeScreenSizeComplete_Event target = new UIRoot_OnChangeScreenSizeComplete_Event(func, self);
			UIRoot.OnChangeScreenSizeComplete d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UIRoot_OnChangeScreenSizeComplete(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<UIRoot.OnChangeScreenSizeComplete>(L, pos);
	}

	void Push_UIRoot_OnChangeScreenSizeComplete(IntPtr L, UIRoot.OnChangeScreenSizeComplete o)
	{
		ToLua.Push(L, o);
	}

	class AtlasManager_OnGetAtlasComplete_Event : LuaDelegate
	{
		public AtlasManager_OnGetAtlasComplete_Event(LuaFunction func) : base(func) { }
		public AtlasManager_OnGetAtlasComplete_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(AtlasInfo param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(AtlasInfo param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public AtlasManager.OnGetAtlasComplete AtlasManager_OnGetAtlasComplete(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			AtlasManager.OnGetAtlasComplete fn = delegate(AtlasInfo param0) { };
			return fn;
		}

		if(!flag)
		{
			AtlasManager_OnGetAtlasComplete_Event target = new AtlasManager_OnGetAtlasComplete_Event(func);
			AtlasManager.OnGetAtlasComplete d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			AtlasManager_OnGetAtlasComplete_Event target = new AtlasManager_OnGetAtlasComplete_Event(func, self);
			AtlasManager.OnGetAtlasComplete d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_AtlasManager_OnGetAtlasComplete(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<AtlasManager.OnGetAtlasComplete>(L, pos);
	}

	void Push_AtlasManager_OnGetAtlasComplete(IntPtr L, AtlasManager.OnGetAtlasComplete o)
	{
		ToLua.Push(L, o);
	}

	class Gear_GWebManager_OnRequestTextCompleteDelegate_Event : LuaDelegate
	{
		public Gear_GWebManager_OnRequestTextCompleteDelegate_Event(LuaFunction func) : base(func) { }
		public Gear_GWebManager_OnRequestTextCompleteDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public Gear.GWebManager.OnRequestTextCompleteDelegate Gear_GWebManager_OnRequestTextCompleteDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Gear.GWebManager.OnRequestTextCompleteDelegate fn = delegate(string param0) { };
			return fn;
		}

		if(!flag)
		{
			Gear_GWebManager_OnRequestTextCompleteDelegate_Event target = new Gear_GWebManager_OnRequestTextCompleteDelegate_Event(func);
			Gear.GWebManager.OnRequestTextCompleteDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Gear_GWebManager_OnRequestTextCompleteDelegate_Event target = new Gear_GWebManager_OnRequestTextCompleteDelegate_Event(func, self);
			Gear.GWebManager.OnRequestTextCompleteDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Gear_GWebManager_OnRequestTextCompleteDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<Gear.GWebManager.OnRequestTextCompleteDelegate>(L, pos);
	}

	void Push_Gear_GWebManager_OnRequestTextCompleteDelegate(IntPtr L, Gear.GWebManager.OnRequestTextCompleteDelegate o)
	{
		ToLua.Push(L, o);
	}

	class Gear_GWebManager_OnRequestTextErrorDelegate_Event : LuaDelegate
	{
		public Gear_GWebManager_OnRequestTextErrorDelegate_Event(LuaFunction func) : base(func) { }
		public Gear_GWebManager_OnRequestTextErrorDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(GBaseLoader param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(GBaseLoader param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public Gear.GWebManager.OnRequestTextErrorDelegate Gear_GWebManager_OnRequestTextErrorDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Gear.GWebManager.OnRequestTextErrorDelegate fn = delegate(GBaseLoader param0) { };
			return fn;
		}

		if(!flag)
		{
			Gear_GWebManager_OnRequestTextErrorDelegate_Event target = new Gear_GWebManager_OnRequestTextErrorDelegate_Event(func);
			Gear.GWebManager.OnRequestTextErrorDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Gear_GWebManager_OnRequestTextErrorDelegate_Event target = new Gear_GWebManager_OnRequestTextErrorDelegate_Event(func, self);
			Gear.GWebManager.OnRequestTextErrorDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Gear_GWebManager_OnRequestTextErrorDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<Gear.GWebManager.OnRequestTextErrorDelegate>(L, pos);
	}

	void Push_Gear_GWebManager_OnRequestTextErrorDelegate(IntPtr L, Gear.GWebManager.OnRequestTextErrorDelegate o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Video_VideoPlayer_EventHandler_Event : LuaDelegate
	{
		public UnityEngine_Video_VideoPlayer_EventHandler_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Video_VideoPlayer_EventHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Video.VideoPlayer param0)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Video.VideoPlayer param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Video.VideoPlayer.EventHandler UnityEngine_Video_VideoPlayer_EventHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Video.VideoPlayer.EventHandler fn = delegate(UnityEngine.Video.VideoPlayer param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Video_VideoPlayer_EventHandler_Event target = new UnityEngine_Video_VideoPlayer_EventHandler_Event(func);
			UnityEngine.Video.VideoPlayer.EventHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Video_VideoPlayer_EventHandler_Event target = new UnityEngine_Video_VideoPlayer_EventHandler_Event(func, self);
			UnityEngine.Video.VideoPlayer.EventHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Video_VideoPlayer_EventHandler(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<UnityEngine.Video.VideoPlayer.EventHandler>(L, pos);
	}

	void Push_UnityEngine_Video_VideoPlayer_EventHandler(IntPtr L, UnityEngine.Video.VideoPlayer.EventHandler o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Video_VideoPlayer_ErrorEventHandler_Event : LuaDelegate
	{
		public UnityEngine_Video_VideoPlayer_ErrorEventHandler_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Video_VideoPlayer_ErrorEventHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Video.VideoPlayer param0, string param1)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Video.VideoPlayer param0, string param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Video.VideoPlayer.ErrorEventHandler UnityEngine_Video_VideoPlayer_ErrorEventHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Video.VideoPlayer.ErrorEventHandler fn = delegate(UnityEngine.Video.VideoPlayer param0, string param1) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Video_VideoPlayer_ErrorEventHandler_Event target = new UnityEngine_Video_VideoPlayer_ErrorEventHandler_Event(func);
			UnityEngine.Video.VideoPlayer.ErrorEventHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Video_VideoPlayer_ErrorEventHandler_Event target = new UnityEngine_Video_VideoPlayer_ErrorEventHandler_Event(func, self);
			UnityEngine.Video.VideoPlayer.ErrorEventHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Video_VideoPlayer_ErrorEventHandler(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<UnityEngine.Video.VideoPlayer.ErrorEventHandler>(L, pos);
	}

	void Push_UnityEngine_Video_VideoPlayer_ErrorEventHandler(IntPtr L, UnityEngine.Video.VideoPlayer.ErrorEventHandler o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Video_VideoPlayer_TimeEventHandler_Event : LuaDelegate
	{
		public UnityEngine_Video_VideoPlayer_TimeEventHandler_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Video_VideoPlayer_TimeEventHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Video.VideoPlayer param0, double param1)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Video.VideoPlayer param0, double param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Video.VideoPlayer.TimeEventHandler UnityEngine_Video_VideoPlayer_TimeEventHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Video.VideoPlayer.TimeEventHandler fn = delegate(UnityEngine.Video.VideoPlayer param0, double param1) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Video_VideoPlayer_TimeEventHandler_Event target = new UnityEngine_Video_VideoPlayer_TimeEventHandler_Event(func);
			UnityEngine.Video.VideoPlayer.TimeEventHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Video_VideoPlayer_TimeEventHandler_Event target = new UnityEngine_Video_VideoPlayer_TimeEventHandler_Event(func, self);
			UnityEngine.Video.VideoPlayer.TimeEventHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Video_VideoPlayer_TimeEventHandler(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<UnityEngine.Video.VideoPlayer.TimeEventHandler>(L, pos);
	}

	void Push_UnityEngine_Video_VideoPlayer_TimeEventHandler(IntPtr L, UnityEngine.Video.VideoPlayer.TimeEventHandler o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Video_VideoPlayer_FrameReadyEventHandler_Event : LuaDelegate
	{
		public UnityEngine_Video_VideoPlayer_FrameReadyEventHandler_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Video_VideoPlayer_FrameReadyEventHandler_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Video.VideoPlayer param0, long param1)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Video.VideoPlayer param0, long param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Video.VideoPlayer.FrameReadyEventHandler UnityEngine_Video_VideoPlayer_FrameReadyEventHandler(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Video.VideoPlayer.FrameReadyEventHandler fn = delegate(UnityEngine.Video.VideoPlayer param0, long param1) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Video_VideoPlayer_FrameReadyEventHandler_Event target = new UnityEngine_Video_VideoPlayer_FrameReadyEventHandler_Event(func);
			UnityEngine.Video.VideoPlayer.FrameReadyEventHandler d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Video_VideoPlayer_FrameReadyEventHandler_Event target = new UnityEngine_Video_VideoPlayer_FrameReadyEventHandler_Event(func, self);
			UnityEngine.Video.VideoPlayer.FrameReadyEventHandler d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Video_VideoPlayer_FrameReadyEventHandler(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<UnityEngine.Video.VideoPlayer.FrameReadyEventHandler>(L, pos);
	}

	void Push_UnityEngine_Video_VideoPlayer_FrameReadyEventHandler(IntPtr L, UnityEngine.Video.VideoPlayer.FrameReadyEventHandler o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_TMPro_TMP_TextInfo_Event : LuaDelegate
	{
		public System_Action_TMPro_TMP_TextInfo_Event(LuaFunction func) : base(func) { }
		public System_Action_TMPro_TMP_TextInfo_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(TMPro.TMP_TextInfo param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(TMPro.TMP_TextInfo param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<TMPro.TMP_TextInfo> System_Action_TMPro_TMP_TextInfo(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<TMPro.TMP_TextInfo> fn = delegate(TMPro.TMP_TextInfo param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_TMPro_TMP_TextInfo_Event target = new System_Action_TMPro_TMP_TextInfo_Event(func);
			System.Action<TMPro.TMP_TextInfo> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_TMPro_TMP_TextInfo_Event target = new System_Action_TMPro_TMP_TextInfo_Event(func, self);
			System.Action<TMPro.TMP_TextInfo> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_TMPro_TMP_TextInfo(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<System.Action<TMPro.TMP_TextInfo>>(L, pos);
	}

	void Push_System_Action_TMPro_TMP_TextInfo(IntPtr L, System.Action<TMPro.TMP_TextInfo> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_float_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_float_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_float_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public float Call()
		{
			func.BeginPCall();
			func.PCall();
			float ret = (float)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public float CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			float ret = (float)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<float> DG_Tweening_Core_DOGetter_float(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<float> fn = delegate() { return 0; };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_float_Event target = new DG_Tweening_Core_DOGetter_float_Event(func);
			DG.Tweening.Core.DOGetter<float> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_float_Event target = new DG_Tweening_Core_DOGetter_float_Event(func, self);
			DG.Tweening.Core.DOGetter<float> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_float(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOGetter<float>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_float(IntPtr L, DG.Tweening.Core.DOGetter<float> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_float_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_float_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_float_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(float param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(float param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<float> DG_Tweening_Core_DOSetter_float(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<float> fn = delegate(float param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_float_Event target = new DG_Tweening_Core_DOSetter_float_Event(func);
			DG.Tweening.Core.DOSetter<float> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_float_Event target = new DG_Tweening_Core_DOSetter_float_Event(func, self);
			DG.Tweening.Core.DOSetter<float> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_float(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOSetter<float>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_float(IntPtr L, DG.Tweening.Core.DOSetter<float> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_double_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_double_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_double_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public double Call()
		{
			func.BeginPCall();
			func.PCall();
			double ret = (double)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public double CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			double ret = (double)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<double> DG_Tweening_Core_DOGetter_double(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<double> fn = delegate() { return 0; };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_double_Event target = new DG_Tweening_Core_DOGetter_double_Event(func);
			DG.Tweening.Core.DOGetter<double> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_double_Event target = new DG_Tweening_Core_DOGetter_double_Event(func, self);
			DG.Tweening.Core.DOGetter<double> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_double(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOGetter<double>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_double(IntPtr L, DG.Tweening.Core.DOGetter<double> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_double_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_double_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_double_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(double param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(double param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<double> DG_Tweening_Core_DOSetter_double(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<double> fn = delegate(double param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_double_Event target = new DG_Tweening_Core_DOSetter_double_Event(func);
			DG.Tweening.Core.DOSetter<double> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_double_Event target = new DG_Tweening_Core_DOSetter_double_Event(func, self);
			DG.Tweening.Core.DOSetter<double> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_double(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOSetter<double>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_double(IntPtr L, DG.Tweening.Core.DOSetter<double> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_int_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_int_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public int Call()
		{
			func.BeginPCall();
			func.PCall();
			int ret = (int)func.CheckInteger();
			func.EndPCall();
			return ret;
		}

		public int CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			int ret = (int)func.CheckInteger();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<int> DG_Tweening_Core_DOGetter_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<int> fn = delegate() { return 0; };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_int_Event target = new DG_Tweening_Core_DOGetter_int_Event(func);
			DG.Tweening.Core.DOGetter<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_int_Event target = new DG_Tweening_Core_DOGetter_int_Event(func, self);
			DG.Tweening.Core.DOGetter<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOGetter<int>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_int(IntPtr L, DG.Tweening.Core.DOGetter<int> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_int_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_int_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<int> DG_Tweening_Core_DOSetter_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<int> fn = delegate(int param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_int_Event target = new DG_Tweening_Core_DOSetter_int_Event(func);
			DG.Tweening.Core.DOSetter<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_int_Event target = new DG_Tweening_Core_DOSetter_int_Event(func, self);
			DG.Tweening.Core.DOSetter<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOSetter<int>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_int(IntPtr L, DG.Tweening.Core.DOSetter<int> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_uint_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_uint_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_uint_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public uint Call()
		{
			func.BeginPCall();
			func.PCall();
			uint ret = (uint)func.CheckInteger();
			func.EndPCall();
			return ret;
		}

		public uint CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			uint ret = (uint)func.CheckInteger();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<uint> DG_Tweening_Core_DOGetter_uint(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<uint> fn = delegate() { return 0; };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_uint_Event target = new DG_Tweening_Core_DOGetter_uint_Event(func);
			DG.Tweening.Core.DOGetter<uint> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_uint_Event target = new DG_Tweening_Core_DOGetter_uint_Event(func, self);
			DG.Tweening.Core.DOGetter<uint> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_uint(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOGetter<uint>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_uint(IntPtr L, DG.Tweening.Core.DOGetter<uint> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_uint_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_uint_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_uint_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(uint param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(uint param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<uint> DG_Tweening_Core_DOSetter_uint(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<uint> fn = delegate(uint param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_uint_Event target = new DG_Tweening_Core_DOSetter_uint_Event(func);
			DG.Tweening.Core.DOSetter<uint> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_uint_Event target = new DG_Tweening_Core_DOSetter_uint_Event(func, self);
			DG.Tweening.Core.DOSetter<uint> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_uint(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOSetter<uint>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_uint(IntPtr L, DG.Tweening.Core.DOSetter<uint> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_long_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_long_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_long_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public long Call()
		{
			func.BeginPCall();
			func.PCall();
			long ret = func.CheckLong();
			func.EndPCall();
			return ret;
		}

		public long CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			long ret = func.CheckLong();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<long> DG_Tweening_Core_DOGetter_long(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<long> fn = delegate() { return 0; };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_long_Event target = new DG_Tweening_Core_DOGetter_long_Event(func);
			DG.Tweening.Core.DOGetter<long> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_long_Event target = new DG_Tweening_Core_DOGetter_long_Event(func, self);
			DG.Tweening.Core.DOGetter<long> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_long(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOGetter<long>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_long(IntPtr L, DG.Tweening.Core.DOGetter<long> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_long_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_long_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_long_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(long param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(long param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<long> DG_Tweening_Core_DOSetter_long(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<long> fn = delegate(long param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_long_Event target = new DG_Tweening_Core_DOSetter_long_Event(func);
			DG.Tweening.Core.DOSetter<long> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_long_Event target = new DG_Tweening_Core_DOSetter_long_Event(func, self);
			DG.Tweening.Core.DOSetter<long> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_long(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOSetter<long>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_long(IntPtr L, DG.Tweening.Core.DOSetter<long> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_ulong_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_ulong_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_ulong_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public ulong Call()
		{
			func.BeginPCall();
			func.PCall();
			ulong ret = func.CheckULong();
			func.EndPCall();
			return ret;
		}

		public ulong CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			ulong ret = func.CheckULong();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<ulong> DG_Tweening_Core_DOGetter_ulong(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<ulong> fn = delegate() { return 0; };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_ulong_Event target = new DG_Tweening_Core_DOGetter_ulong_Event(func);
			DG.Tweening.Core.DOGetter<ulong> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_ulong_Event target = new DG_Tweening_Core_DOGetter_ulong_Event(func, self);
			DG.Tweening.Core.DOGetter<ulong> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_ulong(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOGetter<ulong>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_ulong(IntPtr L, DG.Tweening.Core.DOGetter<ulong> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_ulong_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_ulong_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_ulong_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(ulong param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(ulong param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<ulong> DG_Tweening_Core_DOSetter_ulong(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<ulong> fn = delegate(ulong param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_ulong_Event target = new DG_Tweening_Core_DOSetter_ulong_Event(func);
			DG.Tweening.Core.DOSetter<ulong> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_ulong_Event target = new DG_Tweening_Core_DOSetter_ulong_Event(func, self);
			DG.Tweening.Core.DOSetter<ulong> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_ulong(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOSetter<ulong>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_ulong(IntPtr L, DG.Tweening.Core.DOSetter<ulong> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_string_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_string_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_string_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public string Call()
		{
			func.BeginPCall();
			func.PCall();
			string ret = func.CheckString();
			func.EndPCall();
			return ret;
		}

		public string CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			string ret = func.CheckString();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<string> DG_Tweening_Core_DOGetter_string(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<string> fn = delegate() { return null; };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_string_Event target = new DG_Tweening_Core_DOGetter_string_Event(func);
			DG.Tweening.Core.DOGetter<string> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_string_Event target = new DG_Tweening_Core_DOGetter_string_Event(func, self);
			DG.Tweening.Core.DOGetter<string> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_string(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOGetter<string>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_string(IntPtr L, DG.Tweening.Core.DOGetter<string> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_string_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_string_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_string_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<string> DG_Tweening_Core_DOSetter_string(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<string> fn = delegate(string param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_string_Event target = new DG_Tweening_Core_DOSetter_string_Event(func);
			DG.Tweening.Core.DOSetter<string> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_string_Event target = new DG_Tweening_Core_DOSetter_string_Event(func, self);
			DG.Tweening.Core.DOSetter<string> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_string(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOSetter<string>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_string(IntPtr L, DG.Tweening.Core.DOSetter<string> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_UnityEngine_Vector2_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_UnityEngine_Vector2_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_UnityEngine_Vector2_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public UnityEngine.Vector2 Call()
		{
			func.BeginPCall();
			func.PCall();
			UnityEngine.Vector2 ret = func.CheckVector2();
			func.EndPCall();
			return ret;
		}

		public UnityEngine.Vector2 CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			UnityEngine.Vector2 ret = func.CheckVector2();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<UnityEngine.Vector2> DG_Tweening_Core_DOGetter_UnityEngine_Vector2(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<UnityEngine.Vector2> fn = delegate() { return default(UnityEngine.Vector2); };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Vector2_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Vector2_Event(func);
			DG.Tweening.Core.DOGetter<UnityEngine.Vector2> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Vector2_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Vector2_Event(func, self);
			DG.Tweening.Core.DOGetter<UnityEngine.Vector2> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_UnityEngine_Vector2(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOGetter<UnityEngine.Vector2>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_UnityEngine_Vector2(IntPtr L, DG.Tweening.Core.DOGetter<UnityEngine.Vector2> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_UnityEngine_Vector2_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_UnityEngine_Vector2_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_UnityEngine_Vector2_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Vector2 param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Vector2 param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<UnityEngine.Vector2> DG_Tweening_Core_DOSetter_UnityEngine_Vector2(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<UnityEngine.Vector2> fn = delegate(UnityEngine.Vector2 param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Vector2_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Vector2_Event(func);
			DG.Tweening.Core.DOSetter<UnityEngine.Vector2> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Vector2_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Vector2_Event(func, self);
			DG.Tweening.Core.DOSetter<UnityEngine.Vector2> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_UnityEngine_Vector2(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOSetter<UnityEngine.Vector2>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_UnityEngine_Vector2(IntPtr L, DG.Tweening.Core.DOSetter<UnityEngine.Vector2> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_UnityEngine_Vector3_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_UnityEngine_Vector3_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_UnityEngine_Vector3_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public UnityEngine.Vector3 Call()
		{
			func.BeginPCall();
			func.PCall();
			UnityEngine.Vector3 ret = func.CheckVector3();
			func.EndPCall();
			return ret;
		}

		public UnityEngine.Vector3 CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			UnityEngine.Vector3 ret = func.CheckVector3();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<UnityEngine.Vector3> DG_Tweening_Core_DOGetter_UnityEngine_Vector3(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<UnityEngine.Vector3> fn = delegate() { return default(UnityEngine.Vector3); };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Vector3_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Vector3_Event(func);
			DG.Tweening.Core.DOGetter<UnityEngine.Vector3> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Vector3_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Vector3_Event(func, self);
			DG.Tweening.Core.DOGetter<UnityEngine.Vector3> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_UnityEngine_Vector3(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOGetter<UnityEngine.Vector3>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_UnityEngine_Vector3(IntPtr L, DG.Tweening.Core.DOGetter<UnityEngine.Vector3> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_UnityEngine_Vector3_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_UnityEngine_Vector3_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_UnityEngine_Vector3_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Vector3 param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Vector3 param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<UnityEngine.Vector3> DG_Tweening_Core_DOSetter_UnityEngine_Vector3(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<UnityEngine.Vector3> fn = delegate(UnityEngine.Vector3 param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Vector3_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Vector3_Event(func);
			DG.Tweening.Core.DOSetter<UnityEngine.Vector3> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Vector3_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Vector3_Event(func, self);
			DG.Tweening.Core.DOSetter<UnityEngine.Vector3> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_UnityEngine_Vector3(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOSetter<UnityEngine.Vector3>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_UnityEngine_Vector3(IntPtr L, DG.Tweening.Core.DOSetter<UnityEngine.Vector3> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_UnityEngine_Vector4_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_UnityEngine_Vector4_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_UnityEngine_Vector4_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public UnityEngine.Vector4 Call()
		{
			func.BeginPCall();
			func.PCall();
			UnityEngine.Vector4 ret = func.CheckVector4();
			func.EndPCall();
			return ret;
		}

		public UnityEngine.Vector4 CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			UnityEngine.Vector4 ret = func.CheckVector4();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<UnityEngine.Vector4> DG_Tweening_Core_DOGetter_UnityEngine_Vector4(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<UnityEngine.Vector4> fn = delegate() { return default(UnityEngine.Vector4); };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Vector4_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Vector4_Event(func);
			DG.Tweening.Core.DOGetter<UnityEngine.Vector4> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Vector4_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Vector4_Event(func, self);
			DG.Tweening.Core.DOGetter<UnityEngine.Vector4> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_UnityEngine_Vector4(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOGetter<UnityEngine.Vector4>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_UnityEngine_Vector4(IntPtr L, DG.Tweening.Core.DOGetter<UnityEngine.Vector4> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_UnityEngine_Vector4_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_UnityEngine_Vector4_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_UnityEngine_Vector4_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Vector4 param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Vector4 param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<UnityEngine.Vector4> DG_Tweening_Core_DOSetter_UnityEngine_Vector4(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<UnityEngine.Vector4> fn = delegate(UnityEngine.Vector4 param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Vector4_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Vector4_Event(func);
			DG.Tweening.Core.DOSetter<UnityEngine.Vector4> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Vector4_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Vector4_Event(func, self);
			DG.Tweening.Core.DOSetter<UnityEngine.Vector4> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_UnityEngine_Vector4(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOSetter<UnityEngine.Vector4>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_UnityEngine_Vector4(IntPtr L, DG.Tweening.Core.DOSetter<UnityEngine.Vector4> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_UnityEngine_Quaternion_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_UnityEngine_Quaternion_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_UnityEngine_Quaternion_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public UnityEngine.Quaternion Call()
		{
			func.BeginPCall();
			func.PCall();
			UnityEngine.Quaternion ret = func.CheckQuaternion();
			func.EndPCall();
			return ret;
		}

		public UnityEngine.Quaternion CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			UnityEngine.Quaternion ret = func.CheckQuaternion();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<UnityEngine.Quaternion> DG_Tweening_Core_DOGetter_UnityEngine_Quaternion(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<UnityEngine.Quaternion> fn = delegate() { return default(UnityEngine.Quaternion); };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Quaternion_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Quaternion_Event(func);
			DG.Tweening.Core.DOGetter<UnityEngine.Quaternion> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Quaternion_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Quaternion_Event(func, self);
			DG.Tweening.Core.DOGetter<UnityEngine.Quaternion> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_UnityEngine_Quaternion(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOGetter<UnityEngine.Quaternion>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_UnityEngine_Quaternion(IntPtr L, DG.Tweening.Core.DOGetter<UnityEngine.Quaternion> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_UnityEngine_Quaternion_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_UnityEngine_Quaternion_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_UnityEngine_Quaternion_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Quaternion param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Quaternion param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<UnityEngine.Quaternion> DG_Tweening_Core_DOSetter_UnityEngine_Quaternion(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<UnityEngine.Quaternion> fn = delegate(UnityEngine.Quaternion param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Quaternion_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Quaternion_Event(func);
			DG.Tweening.Core.DOSetter<UnityEngine.Quaternion> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Quaternion_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Quaternion_Event(func, self);
			DG.Tweening.Core.DOSetter<UnityEngine.Quaternion> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_UnityEngine_Quaternion(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOSetter<UnityEngine.Quaternion>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_UnityEngine_Quaternion(IntPtr L, DG.Tweening.Core.DOSetter<UnityEngine.Quaternion> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_UnityEngine_Color_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_UnityEngine_Color_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_UnityEngine_Color_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public UnityEngine.Color Call()
		{
			func.BeginPCall();
			func.PCall();
			UnityEngine.Color ret = func.CheckColor();
			func.EndPCall();
			return ret;
		}

		public UnityEngine.Color CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			UnityEngine.Color ret = func.CheckColor();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<UnityEngine.Color> DG_Tweening_Core_DOGetter_UnityEngine_Color(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<UnityEngine.Color> fn = delegate() { return default(UnityEngine.Color); };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Color_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Color_Event(func);
			DG.Tweening.Core.DOGetter<UnityEngine.Color> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Color_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Color_Event(func, self);
			DG.Tweening.Core.DOGetter<UnityEngine.Color> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_UnityEngine_Color(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOGetter<UnityEngine.Color>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_UnityEngine_Color(IntPtr L, DG.Tweening.Core.DOGetter<UnityEngine.Color> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_UnityEngine_Color_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_UnityEngine_Color_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_UnityEngine_Color_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Color param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Color param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<UnityEngine.Color> DG_Tweening_Core_DOSetter_UnityEngine_Color(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<UnityEngine.Color> fn = delegate(UnityEngine.Color param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Color_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Color_Event(func);
			DG.Tweening.Core.DOSetter<UnityEngine.Color> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Color_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Color_Event(func, self);
			DG.Tweening.Core.DOSetter<UnityEngine.Color> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_UnityEngine_Color(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOSetter<UnityEngine.Color>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_UnityEngine_Color(IntPtr L, DG.Tweening.Core.DOSetter<UnityEngine.Color> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_UnityEngine_Rect_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_UnityEngine_Rect_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_UnityEngine_Rect_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public UnityEngine.Rect Call()
		{
			func.BeginPCall();
			func.PCall();
			UnityEngine.Rect ret = (UnityEngine.Rect)func.CheckObject(TypeTraits<UnityEngine.Rect>.type);
			func.EndPCall();
			return ret;
		}

		public UnityEngine.Rect CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			UnityEngine.Rect ret = (UnityEngine.Rect)func.CheckObject(TypeTraits<UnityEngine.Rect>.type);
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<UnityEngine.Rect> DG_Tweening_Core_DOGetter_UnityEngine_Rect(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<UnityEngine.Rect> fn = delegate() { return default(UnityEngine.Rect); };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Rect_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Rect_Event(func);
			DG.Tweening.Core.DOGetter<UnityEngine.Rect> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Rect_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Rect_Event(func, self);
			DG.Tweening.Core.DOGetter<UnityEngine.Rect> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_UnityEngine_Rect(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOGetter<UnityEngine.Rect>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_UnityEngine_Rect(IntPtr L, DG.Tweening.Core.DOGetter<UnityEngine.Rect> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_UnityEngine_Rect_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_UnityEngine_Rect_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_UnityEngine_Rect_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Rect param0)
		{
			func.BeginPCall();
			func.PushValue(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Rect param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushValue(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<UnityEngine.Rect> DG_Tweening_Core_DOSetter_UnityEngine_Rect(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<UnityEngine.Rect> fn = delegate(UnityEngine.Rect param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Rect_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Rect_Event(func);
			DG.Tweening.Core.DOSetter<UnityEngine.Rect> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Rect_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Rect_Event(func, self);
			DG.Tweening.Core.DOSetter<UnityEngine.Rect> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_UnityEngine_Rect(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOSetter<UnityEngine.Rect>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_UnityEngine_Rect(IntPtr L, DG.Tweening.Core.DOSetter<UnityEngine.Rect> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_UnityEngine_RectOffset_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_UnityEngine_RectOffset_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_UnityEngine_RectOffset_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public UnityEngine.RectOffset Call()
		{
			func.BeginPCall();
			func.PCall();
			UnityEngine.RectOffset ret = (UnityEngine.RectOffset)func.CheckObject(TypeTraits<UnityEngine.RectOffset>.type);
			func.EndPCall();
			return ret;
		}

		public UnityEngine.RectOffset CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			UnityEngine.RectOffset ret = (UnityEngine.RectOffset)func.CheckObject(TypeTraits<UnityEngine.RectOffset>.type);
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<UnityEngine.RectOffset> DG_Tweening_Core_DOGetter_UnityEngine_RectOffset(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<UnityEngine.RectOffset> fn = delegate() { return null; };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_UnityEngine_RectOffset_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_RectOffset_Event(func);
			DG.Tweening.Core.DOGetter<UnityEngine.RectOffset> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_UnityEngine_RectOffset_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_RectOffset_Event(func, self);
			DG.Tweening.Core.DOGetter<UnityEngine.RectOffset> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_UnityEngine_RectOffset(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOGetter<UnityEngine.RectOffset>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_UnityEngine_RectOffset(IntPtr L, DG.Tweening.Core.DOGetter<UnityEngine.RectOffset> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_UnityEngine_RectOffset_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_UnityEngine_RectOffset_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_UnityEngine_RectOffset_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.RectOffset param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.RectOffset param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<UnityEngine.RectOffset> DG_Tweening_Core_DOSetter_UnityEngine_RectOffset(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<UnityEngine.RectOffset> fn = delegate(UnityEngine.RectOffset param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_UnityEngine_RectOffset_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_RectOffset_Event(func);
			DG.Tweening.Core.DOSetter<UnityEngine.RectOffset> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_UnityEngine_RectOffset_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_RectOffset_Event(func, self);
			DG.Tweening.Core.DOSetter<UnityEngine.RectOffset> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_UnityEngine_RectOffset(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOSetter<UnityEngine.RectOffset>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_UnityEngine_RectOffset(IntPtr L, DG.Tweening.Core.DOSetter<UnityEngine.RectOffset> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_TweenCallback_Event : LuaDelegate
	{
		public DG_Tweening_TweenCallback_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_TweenCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.TweenCallback DG_Tweening_TweenCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.TweenCallback fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_TweenCallback_Event target = new DG_Tweening_TweenCallback_Event(func);
			DG.Tweening.TweenCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_TweenCallback_Event target = new DG_Tweening_TweenCallback_Event(func, self);
			DG.Tweening.TweenCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_TweenCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.TweenCallback>(L, pos);
	}

	void Push_DG_Tweening_TweenCallback(IntPtr L, DG.Tweening.TweenCallback o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_TweenCallback_int_Event : LuaDelegate
	{
		public DG_Tweening_TweenCallback_int_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_TweenCallback_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.TweenCallback<int> DG_Tweening_TweenCallback_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.TweenCallback<int> fn = delegate(int param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_TweenCallback_int_Event target = new DG_Tweening_TweenCallback_int_Event(func);
			DG.Tweening.TweenCallback<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_TweenCallback_int_Event target = new DG_Tweening_TweenCallback_int_Event(func, self);
			DG.Tweening.TweenCallback<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_TweenCallback_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.TweenCallback<int>>(L, pos);
	}

	void Push_DG_Tweening_TweenCallback_int(IntPtr L, DG.Tweening.TweenCallback<int> o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_RectTransform_ReapplyDrivenProperties_Event : LuaDelegate
	{
		public UnityEngine_RectTransform_ReapplyDrivenProperties_Event(LuaFunction func) : base(func) { }
		public UnityEngine_RectTransform_ReapplyDrivenProperties_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.RectTransform param0)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.RectTransform param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.RectTransform.ReapplyDrivenProperties UnityEngine_RectTransform_ReapplyDrivenProperties(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.RectTransform.ReapplyDrivenProperties fn = delegate(UnityEngine.RectTransform param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_RectTransform_ReapplyDrivenProperties_Event target = new UnityEngine_RectTransform_ReapplyDrivenProperties_Event(func);
			UnityEngine.RectTransform.ReapplyDrivenProperties d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_RectTransform_ReapplyDrivenProperties_Event target = new UnityEngine_RectTransform_ReapplyDrivenProperties_Event(func, self);
			UnityEngine.RectTransform.ReapplyDrivenProperties d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_RectTransform_ReapplyDrivenProperties(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<UnityEngine.RectTransform.ReapplyDrivenProperties>(L, pos);
	}

	void Push_UnityEngine_RectTransform_ReapplyDrivenProperties(IntPtr L, UnityEngine.RectTransform.ReapplyDrivenProperties o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Camera_CameraCallback_Event : LuaDelegate
	{
		public UnityEngine_Camera_CameraCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Camera_CameraCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Camera param0)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Camera param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Camera.CameraCallback UnityEngine_Camera_CameraCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Camera.CameraCallback fn = delegate(UnityEngine.Camera param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Camera_CameraCallback_Event target = new UnityEngine_Camera_CameraCallback_Event(func);
			UnityEngine.Camera.CameraCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Camera_CameraCallback_Event target = new UnityEngine_Camera_CameraCallback_Event(func, self);
			UnityEngine.Camera.CameraCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Camera_CameraCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<UnityEngine.Camera.CameraCallback>(L, pos);
	}

	void Push_UnityEngine_Camera_CameraCallback(IntPtr L, UnityEngine.Camera.CameraCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Application_AdvertisingIdentifierCallback_Event : LuaDelegate
	{
		public UnityEngine_Application_AdvertisingIdentifierCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Application_AdvertisingIdentifierCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0, bool param1, string param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0, bool param1, string param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Application.AdvertisingIdentifierCallback UnityEngine_Application_AdvertisingIdentifierCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Application.AdvertisingIdentifierCallback fn = delegate(string param0, bool param1, string param2) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Application_AdvertisingIdentifierCallback_Event target = new UnityEngine_Application_AdvertisingIdentifierCallback_Event(func);
			UnityEngine.Application.AdvertisingIdentifierCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Application_AdvertisingIdentifierCallback_Event target = new UnityEngine_Application_AdvertisingIdentifierCallback_Event(func, self);
			UnityEngine.Application.AdvertisingIdentifierCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Application_AdvertisingIdentifierCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<UnityEngine.Application.AdvertisingIdentifierCallback>(L, pos);
	}

	void Push_UnityEngine_Application_AdvertisingIdentifierCallback(IntPtr L, UnityEngine.Application.AdvertisingIdentifierCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Application_LowMemoryCallback_Event : LuaDelegate
	{
		public UnityEngine_Application_LowMemoryCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Application_LowMemoryCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Application.LowMemoryCallback UnityEngine_Application_LowMemoryCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Application.LowMemoryCallback fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Application_LowMemoryCallback_Event target = new UnityEngine_Application_LowMemoryCallback_Event(func);
			UnityEngine.Application.LowMemoryCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Application_LowMemoryCallback_Event target = new UnityEngine_Application_LowMemoryCallback_Event(func, self);
			UnityEngine.Application.LowMemoryCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Application_LowMemoryCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<UnityEngine.Application.LowMemoryCallback>(L, pos);
	}

	void Push_UnityEngine_Application_LowMemoryCallback(IntPtr L, UnityEngine.Application.LowMemoryCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Application_LogCallback_Event : LuaDelegate
	{
		public UnityEngine_Application_LogCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Application_LogCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0, string param1, UnityEngine.LogType param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0, string param1, UnityEngine.LogType param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Application.LogCallback UnityEngine_Application_LogCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Application.LogCallback fn = delegate(string param0, string param1, UnityEngine.LogType param2) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Application_LogCallback_Event target = new UnityEngine_Application_LogCallback_Event(func);
			UnityEngine.Application.LogCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Application_LogCallback_Event target = new UnityEngine_Application_LogCallback_Event(func, self);
			UnityEngine.Application.LogCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Application_LogCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<UnityEngine.Application.LogCallback>(L, pos);
	}

	void Push_UnityEngine_Application_LogCallback(IntPtr L, UnityEngine.Application.LogCallback o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_bool_Event : LuaDelegate
	{
		public System_Action_bool_Event(LuaFunction func) : base(func) { }
		public System_Action_bool_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(bool param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(bool param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<bool> System_Action_bool(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<bool> fn = delegate(bool param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_bool_Event target = new System_Action_bool_Event(func);
			System.Action<bool> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_bool_Event target = new System_Action_bool_Event(func, self);
			System.Action<bool> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_bool(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<System.Action<bool>>(L, pos);
	}

	void Push_System_Action_bool(IntPtr L, System.Action<bool> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_string_Event : LuaDelegate
	{
		public System_Action_string_Event(LuaFunction func) : base(func) { }
		public System_Action_string_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<string> System_Action_string(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<string> fn = delegate(string param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_string_Event target = new System_Action_string_Event(func);
			System.Action<string> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_string_Event target = new System_Action_string_Event(func, self);
			System.Action<string> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_string(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<System.Action<string>>(L, pos);
	}

	void Push_System_Action_string(IntPtr L, System.Action<string> o)
	{
		ToLua.Push(L, o);
	}

	class System_Func_bool_Event : LuaDelegate
	{
		public System_Func_bool_Event(LuaFunction func) : base(func) { }
		public System_Func_bool_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public bool Call()
		{
			func.BeginPCall();
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}

		public bool CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}
	}

	public System.Func<bool> System_Func_bool(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Func<bool> fn = delegate() { return false; };
			return fn;
		}

		if(!flag)
		{
			System_Func_bool_Event target = new System_Func_bool_Event(func);
			System.Func<bool> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Func_bool_Event target = new System_Func_bool_Event(func, self);
			System.Func<bool> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Func_bool(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<System.Func<bool>>(L, pos);
	}

	void Push_System_Func_bool(IntPtr L, System.Func<bool> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_UnityEngine_AsyncOperation_Event : LuaDelegate
	{
		public System_Action_UnityEngine_AsyncOperation_Event(LuaFunction func) : base(func) { }
		public System_Action_UnityEngine_AsyncOperation_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.AsyncOperation param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.AsyncOperation param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<UnityEngine.AsyncOperation> System_Action_UnityEngine_AsyncOperation(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<UnityEngine.AsyncOperation> fn = delegate(UnityEngine.AsyncOperation param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_UnityEngine_AsyncOperation_Event target = new System_Action_UnityEngine_AsyncOperation_Event(func);
			System.Action<UnityEngine.AsyncOperation> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_UnityEngine_AsyncOperation_Event target = new System_Action_UnityEngine_AsyncOperation_Event(func, self);
			System.Action<UnityEngine.AsyncOperation> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_UnityEngine_AsyncOperation(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<System.Action<UnityEngine.AsyncOperation>>(L, pos);
	}

	void Push_System_Action_UnityEngine_AsyncOperation(IntPtr L, System.Action<UnityEngine.AsyncOperation> o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_AudioClip_PCMReaderCallback_Event : LuaDelegate
	{
		public UnityEngine_AudioClip_PCMReaderCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_AudioClip_PCMReaderCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(float[] param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(float[] param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.AudioClip.PCMReaderCallback UnityEngine_AudioClip_PCMReaderCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.AudioClip.PCMReaderCallback fn = delegate(float[] param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_AudioClip_PCMReaderCallback_Event target = new UnityEngine_AudioClip_PCMReaderCallback_Event(func);
			UnityEngine.AudioClip.PCMReaderCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_AudioClip_PCMReaderCallback_Event target = new UnityEngine_AudioClip_PCMReaderCallback_Event(func, self);
			UnityEngine.AudioClip.PCMReaderCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_AudioClip_PCMReaderCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<UnityEngine.AudioClip.PCMReaderCallback>(L, pos);
	}

	void Push_UnityEngine_AudioClip_PCMReaderCallback(IntPtr L, UnityEngine.AudioClip.PCMReaderCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_AudioClip_PCMSetPositionCallback_Event : LuaDelegate
	{
		public UnityEngine_AudioClip_PCMSetPositionCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_AudioClip_PCMSetPositionCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.AudioClip.PCMSetPositionCallback UnityEngine_AudioClip_PCMSetPositionCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.AudioClip.PCMSetPositionCallback fn = delegate(int param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_AudioClip_PCMSetPositionCallback_Event target = new UnityEngine_AudioClip_PCMSetPositionCallback_Event(func);
			UnityEngine.AudioClip.PCMSetPositionCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_AudioClip_PCMSetPositionCallback_Event target = new UnityEngine_AudioClip_PCMSetPositionCallback_Event(func, self);
			UnityEngine.AudioClip.PCMSetPositionCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_AudioClip_PCMSetPositionCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<UnityEngine.AudioClip.PCMSetPositionCallback>(L, pos);
	}

	void Push_UnityEngine_AudioClip_PCMSetPositionCallback(IntPtr L, UnityEngine.AudioClip.PCMSetPositionCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Canvas_WillRenderCanvases_Event : LuaDelegate
	{
		public UnityEngine_Canvas_WillRenderCanvases_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Canvas_WillRenderCanvases_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Canvas.WillRenderCanvases UnityEngine_Canvas_WillRenderCanvases(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Canvas.WillRenderCanvases fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Canvas_WillRenderCanvases_Event target = new UnityEngine_Canvas_WillRenderCanvases_Event(func);
			UnityEngine.Canvas.WillRenderCanvases d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Canvas_WillRenderCanvases_Event target = new UnityEngine_Canvas_WillRenderCanvases_Event(func, self);
			UnityEngine.Canvas.WillRenderCanvases d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Canvas_WillRenderCanvases(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<UnityEngine.Canvas.WillRenderCanvases>(L, pos);
	}

	void Push_UnityEngine_Canvas_WillRenderCanvases(IntPtr L, UnityEngine.Canvas.WillRenderCanvases o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_UI_InputField_OnValidateInput_Event : LuaDelegate
	{
		public UnityEngine_UI_InputField_OnValidateInput_Event(LuaFunction func) : base(func) { }
		public UnityEngine_UI_InputField_OnValidateInput_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public char Call(string param0, int param1, char param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			char ret = (char)func.CheckInteger();
			func.EndPCall();
			return ret;
		}

		public char CallWithSelf(string param0, int param1, char param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			char ret = (char)func.CheckInteger();
			func.EndPCall();
			return ret;
		}
	}

	public UnityEngine.UI.InputField.OnValidateInput UnityEngine_UI_InputField_OnValidateInput(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.UI.InputField.OnValidateInput fn = delegate(string param0, int param1, char param2) { return '\0'; };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_UI_InputField_OnValidateInput_Event target = new UnityEngine_UI_InputField_OnValidateInput_Event(func);
			UnityEngine.UI.InputField.OnValidateInput d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_UI_InputField_OnValidateInput_Event target = new UnityEngine_UI_InputField_OnValidateInput_Event(func, self);
			UnityEngine.UI.InputField.OnValidateInput d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_UI_InputField_OnValidateInput(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<UnityEngine.UI.InputField.OnValidateInput>(L, pos);
	}

	void Push_UnityEngine_UI_InputField_OnValidateInput(IntPtr L, UnityEngine.UI.InputField.OnValidateInput o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Events_UnityAction_string_Event : LuaDelegate
	{
		public UnityEngine_Events_UnityAction_string_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Events_UnityAction_string_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Events.UnityAction<string> UnityEngine_Events_UnityAction_string(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Events.UnityAction<string> fn = delegate(string param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Events_UnityAction_string_Event target = new UnityEngine_Events_UnityAction_string_Event(func);
			UnityEngine.Events.UnityAction<string> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Events_UnityAction_string_Event target = new UnityEngine_Events_UnityAction_string_Event(func, self);
			UnityEngine.Events.UnityAction<string> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Events_UnityAction_string(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<UnityEngine.Events.UnityAction<string>>(L, pos);
	}

	void Push_UnityEngine_Events_UnityAction_string(IntPtr L, UnityEngine.Events.UnityAction<string> o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Events_UnityAction_float_Event : LuaDelegate
	{
		public UnityEngine_Events_UnityAction_float_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Events_UnityAction_float_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(float param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(float param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Events.UnityAction<float> UnityEngine_Events_UnityAction_float(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Events.UnityAction<float> fn = delegate(float param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Events_UnityAction_float_Event target = new UnityEngine_Events_UnityAction_float_Event(func);
			UnityEngine.Events.UnityAction<float> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Events_UnityAction_float_Event target = new UnityEngine_Events_UnityAction_float_Event(func, self);
			UnityEngine.Events.UnityAction<float> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Events_UnityAction_float(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<UnityEngine.Events.UnityAction<float>>(L, pos);
	}

	void Push_UnityEngine_Events_UnityAction_float(IntPtr L, UnityEngine.Events.UnityAction<float> o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Events_UnityAction_bool_Event : LuaDelegate
	{
		public UnityEngine_Events_UnityAction_bool_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Events_UnityAction_bool_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(bool param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(bool param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Events.UnityAction<bool> UnityEngine_Events_UnityAction_bool(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Events.UnityAction<bool> fn = delegate(bool param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Events_UnityAction_bool_Event target = new UnityEngine_Events_UnityAction_bool_Event(func);
			UnityEngine.Events.UnityAction<bool> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Events_UnityAction_bool_Event target = new UnityEngine_Events_UnityAction_bool_Event(func, self);
			UnityEngine.Events.UnityAction<bool> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Events_UnityAction_bool(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<UnityEngine.Events.UnityAction<bool>>(L, pos);
	}

	void Push_UnityEngine_Events_UnityAction_bool(IntPtr L, UnityEngine.Events.UnityAction<bool> o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Events_UnityAction_int_Event : LuaDelegate
	{
		public UnityEngine_Events_UnityAction_int_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Events_UnityAction_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Events.UnityAction<int> UnityEngine_Events_UnityAction_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Events.UnityAction<int> fn = delegate(int param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Events_UnityAction_int_Event target = new UnityEngine_Events_UnityAction_int_Event(func);
			UnityEngine.Events.UnityAction<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Events_UnityAction_int_Event target = new UnityEngine_Events_UnityAction_int_Event(func, self);
			UnityEngine.Events.UnityAction<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Events_UnityAction_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<UnityEngine.Events.UnityAction<int>>(L, pos);
	}

	void Push_UnityEngine_Events_UnityAction_int(IntPtr L, UnityEngine.Events.UnityAction<int> o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Events_UnityAction_UnityEngine_Vector2_Event : LuaDelegate
	{
		public UnityEngine_Events_UnityAction_UnityEngine_Vector2_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Events_UnityAction_UnityEngine_Vector2_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Vector2 param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Vector2 param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Events.UnityAction<UnityEngine.Vector2> UnityEngine_Events_UnityAction_UnityEngine_Vector2(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Events.UnityAction<UnityEngine.Vector2> fn = delegate(UnityEngine.Vector2 param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Events_UnityAction_UnityEngine_Vector2_Event target = new UnityEngine_Events_UnityAction_UnityEngine_Vector2_Event(func);
			UnityEngine.Events.UnityAction<UnityEngine.Vector2> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Events_UnityAction_UnityEngine_Vector2_Event target = new UnityEngine_Events_UnityAction_UnityEngine_Vector2_Event(func, self);
			UnityEngine.Events.UnityAction<UnityEngine.Vector2> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Events_UnityAction_UnityEngine_Vector2(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<UnityEngine.Events.UnityAction<UnityEngine.Vector2>>(L, pos);
	}

	void Push_UnityEngine_Events_UnityAction_UnityEngine_Vector2(IntPtr L, UnityEngine.Events.UnityAction<UnityEngine.Vector2> o)
	{
		ToLua.Push(L, o);
	}

}

