//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityReceiveNativeMessageWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UnityReceiveNativeMessage), typeof(UnityEngine.AndroidJavaProxy));
		L.RegFunction("SetLuaListener", new LuaCSFunction(SetLuaListener));
		L.RegFunction("Send", new LuaCSFunction(Send));
		L.RegFunction("New", new LuaCSFunction(_CreateUnityReceiveNativeMessage));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.RegFunction("OnNativeBack", new LuaCSFunction(UnityReceiveNativeMessage_OnNativeBack));
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateUnityReceiveNativeMessage(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1 && TypeChecker.CheckTypes<string>(L, 1))
			{
				string arg0 = ToLua.ToString(L, 1);
				UnityReceiveNativeMessage obj = new UnityReceiveNativeMessage(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes<UnityEngine.AndroidJavaClass>(L, 1))
			{
				UnityEngine.AndroidJavaClass arg0 = (UnityEngine.AndroidJavaClass)ToLua.ToObject(L, 1);
				UnityReceiveNativeMessage obj = new UnityReceiveNativeMessage(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: UnityReceiveNativeMessage.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetLuaListener(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityReceiveNativeMessage obj = (UnityReceiveNativeMessage)ToLua.CheckObject<UnityReceiveNativeMessage>(L, 1);
			UnityReceiveNativeMessage.OnNativeBack arg0 = (UnityReceiveNativeMessage.OnNativeBack)ToLua.CheckDelegate<UnityReceiveNativeMessage.OnNativeBack>(L, 2);
			obj.SetLuaListener(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Send(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			UnityReceiveNativeMessage obj = (UnityReceiveNativeMessage)ToLua.CheckObject<UnityReceiveNativeMessage>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			int arg1 = (int)LuaDLL.luaL_checkinteger(L, 3);
			string arg2 = ToLua.CheckString(L, 4);
			obj.Send(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityReceiveNativeMessage_OnNativeBack(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<UnityReceiveNativeMessage.OnNativeBack>.Create(func);
				ToLua.Push(L, arg1);
				func.Dispose();
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<UnityReceiveNativeMessage.OnNativeBack>.Create(func, self);
				ToLua.Push(L, arg1);
				func.Dispose();
				self.Dispose();
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

