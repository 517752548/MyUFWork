//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class HUDQuadWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(HUDQuad), typeof(System.Object));
		L.RegFunction("SetSprite", new LuaCSFunction(SetSprite));
		L.RegFunction("GetRow", new LuaCSFunction(GetRow));
		L.RegFunction("SetColRow", new LuaCSFunction(SetColRow));
		L.RegFunction("SetStartVert", new LuaCSFunction(SetStartVert));
		L.RegFunction("SetCenterPosInContent", new LuaCSFunction(SetCenterPosInContent));
		L.RegFunction("SetScale", new LuaCSFunction(SetScale));
		L.RegFunction("SetProgress", new LuaCSFunction(SetProgress));
		L.RegFunction("GetProgress", new LuaCSFunction(GetProgress));
		L.RegFunction("GetVertWidth", new LuaCSFunction(GetVertWidth));
		L.RegFunction("GetVertHeight", new LuaCSFunction(GetVertHeight));
		L.RegFunction("GetVert", new LuaCSFunction(GetVert));
		L.RegFunction("GetUV", new LuaCSFunction(GetUV));
		L.RegFunction("GetTriangles", new LuaCSFunction(GetTriangles));
		L.RegFunction("Clear", new LuaCSFunction(Clear));
		L.RegFunction("Destroy", new LuaCSFunction(Destroy));
		L.RegFunction("New", new LuaCSFunction(_CreateHUDQuad));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateHUDQuad(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				HUDQuad obj = new HUDQuad();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: HUDQuad.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetSprite(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			HUDQuad obj = (HUDQuad)ToLua.CheckObject<HUDQuad>(L, 1);
			UnityEngine.Sprite arg0 = (UnityEngine.Sprite)ToLua.CheckObject<UnityEngine.Sprite>(L, 2);
			obj.SetSprite(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetRow(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			HUDQuad obj = (HUDQuad)ToLua.CheckObject<HUDQuad>(L, 1);
			int o = obj.GetRow();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetColRow(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			HUDQuad obj = (HUDQuad)ToLua.CheckObject<HUDQuad>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			int arg1 = (int)LuaDLL.luaL_checkinteger(L, 3);
			obj.SetColRow(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetStartVert(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			HUDQuad obj = (HUDQuad)ToLua.CheckObject<HUDQuad>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			obj.SetStartVert(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetCenterPosInContent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			HUDQuad obj = (HUDQuad)ToLua.CheckObject<HUDQuad>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			obj.SetCenterPosInContent(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetScale(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			HUDQuad obj = (HUDQuad)ToLua.CheckObject<HUDQuad>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.SetScale(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetProgress(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			HUDQuad obj = (HUDQuad)ToLua.CheckObject<HUDQuad>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.SetProgress(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetProgress(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			HUDQuad obj = (HUDQuad)ToLua.CheckObject<HUDQuad>(L, 1);
			float o = obj.GetProgress();
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetVertWidth(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			HUDQuad obj = (HUDQuad)ToLua.CheckObject<HUDQuad>(L, 1);
			float o = obj.GetVertWidth();
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetVertHeight(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			HUDQuad obj = (HUDQuad)ToLua.CheckObject<HUDQuad>(L, 1);
			float o = obj.GetVertHeight();
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetVert(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			HUDQuad obj = (HUDQuad)ToLua.CheckObject<HUDQuad>(L, 1);
			UnityEngine.Vector2[] o = obj.GetVert();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetUV(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			HUDQuad obj = (HUDQuad)ToLua.CheckObject<HUDQuad>(L, 1);
			UnityEngine.Vector2[] o = obj.GetUV();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetTriangles(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			HUDQuad obj = (HUDQuad)ToLua.CheckObject<HUDQuad>(L, 1);
			ushort[] o = obj.GetTriangles();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Clear(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			HUDQuad obj = (HUDQuad)ToLua.CheckObject<HUDQuad>(L, 1);
			obj.Clear();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Destroy(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			HUDQuad obj = (HUDQuad)ToLua.CheckObject<HUDQuad>(L, 1);
			obj.Destroy();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

