//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Gear_BundleStorageLocationWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(Gear.BundleStorageLocation));
		L.RegVar("NONE", new LuaCSFunction(get_NONE), null);
		L.RegVar("STREAMINGASSETS", new LuaCSFunction(get_STREAMINGASSETS), null);
		L.RegVar("STORAGE", new LuaCSFunction(get_STORAGE), null);
		L.RegVar("CDN", new LuaCSFunction(get_CDN), null);
		L.RegFunction("IntToEnum", new LuaCSFunction(IntToEnum));
		L.EndEnum();
		TypeTraits<Gear.BundleStorageLocation>.Check = CheckType;
		StackTraits<Gear.BundleStorageLocation>.Push = Push;
	}

	static void Push(IntPtr L, Gear.BundleStorageLocation arg)
	{
		ToLua.Push(L, arg);
	}

	static Type TypeOf_Gear_BundleStorageLocation = typeof(Gear.BundleStorageLocation);

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(TypeOf_Gear_BundleStorageLocation, L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_NONE(IntPtr L)
	{
		ToLua.Push(L, Gear.BundleStorageLocation.NONE);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_STREAMINGASSETS(IntPtr L)
	{
		ToLua.Push(L, Gear.BundleStorageLocation.STREAMINGASSETS);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_STORAGE(IntPtr L)
	{
		ToLua.Push(L, Gear.BundleStorageLocation.STORAGE);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CDN(IntPtr L)
	{
		ToLua.Push(L, Gear.BundleStorageLocation.CDN);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tointeger(L, 1);
		Gear.BundleStorageLocation o = (Gear.BundleStorageLocation)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

