//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UIDrawModelPanelVOWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UIDrawModelPanelVO), typeof(UnityEngine.ScriptableObject));
		L.RegFunction("ShowPanel", new LuaCSFunction(ShowPanel));
		L.RegFunction("GetModelData", new LuaCSFunction(GetModelData));
		L.RegFunction("ChangeTextureSize", new LuaCSFunction(ChangeTextureSize));
		L.RegFunction("GetPath", new LuaCSFunction(GetPath));
		L.RegFunction("New", new LuaCSFunction(_CreateUIDrawModelPanelVO));
		L.RegFunction("__eq", new LuaCSFunction(op_Equality));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.RegVar("prefabKey", new LuaCSFunction(get_prefabKey), new LuaCSFunction(set_prefabKey));
		L.RegVar("prefabName", new LuaCSFunction(get_prefabName), new LuaCSFunction(set_prefabName));
		L.RegVar("panelType", new LuaCSFunction(get_panelType), new LuaCSFunction(set_panelType));
		L.RegVar("textureNodePath", new LuaCSFunction(get_textureNodePath), new LuaCSFunction(set_textureNodePath));
		L.RegVar("modelDatas", new LuaCSFunction(get_modelDatas), new LuaCSFunction(set_modelDatas));
		L.RegVar("optionName", new LuaCSFunction(get_optionName), new LuaCSFunction(set_optionName));
		L.RegVar("textureNodeGameObject", new LuaCSFunction(get_textureNodeGameObject), new LuaCSFunction(set_textureNodeGameObject));
		L.RegVar("panelGameObject", new LuaCSFunction(get_panelGameObject), new LuaCSFunction(set_panelGameObject));
		L.RegVar("lightEulerAngles", new LuaCSFunction(get_lightEulerAngles), new LuaCSFunction(set_lightEulerAngles));
		L.RegVar("lightColor", new LuaCSFunction(get_lightColor), new LuaCSFunction(set_lightColor));
		L.RegVar("lightIntensity", new LuaCSFunction(get_lightIntensity), new LuaCSFunction(set_lightIntensity));
		L.RegVar("lightShadowStrength", new LuaCSFunction(get_lightShadowStrength), new LuaCSFunction(set_lightShadowStrength));
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateUIDrawModelPanelVO(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				UIDrawModelPanelVO obj = new UIDrawModelPanelVO();
				ToLua.Push(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: UIDrawModelPanelVO.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ShowPanel(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIDrawModelPanelVO obj = (UIDrawModelPanelVO)ToLua.CheckObject<UIDrawModelPanelVO>(L, 1);
			UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 2);
			obj.ShowPanel(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetModelData(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UIDrawModelPanelVO obj = (UIDrawModelPanelVO)ToLua.CheckObject<UIDrawModelPanelVO>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			int arg1 = (int)LuaDLL.luaL_checkinteger(L, 3);
			UIDrawModelData o = obj.GetModelData(arg0, arg1);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ChangeTextureSize(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIDrawModelPanelVO obj = (UIDrawModelPanelVO)ToLua.CheckObject<UIDrawModelPanelVO>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			obj.ChangeTextureSize(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetPath(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIDrawModelPanelVO obj = (UIDrawModelPanelVO)ToLua.CheckObject<UIDrawModelPanelVO>(L, 1);
			string o = obj.GetPath();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_prefabKey(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIDrawModelPanelVO obj = (UIDrawModelPanelVO)o;
			string ret = obj.prefabKey;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index prefabKey on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_prefabName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIDrawModelPanelVO obj = (UIDrawModelPanelVO)o;
			string ret = obj.prefabName;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index prefabName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_panelType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIDrawModelPanelVO obj = (UIDrawModelPanelVO)o;
			int ret = obj.panelType;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index panelType on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_textureNodePath(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIDrawModelPanelVO obj = (UIDrawModelPanelVO)o;
			string ret = obj.textureNodePath;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index textureNodePath on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_modelDatas(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIDrawModelPanelVO obj = (UIDrawModelPanelVO)o;
			System.Collections.Generic.List<UIDrawModelData> ret = obj.modelDatas;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index modelDatas on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_optionName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIDrawModelPanelVO obj = (UIDrawModelPanelVO)o;
			string ret = obj.optionName;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index optionName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_textureNodeGameObject(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIDrawModelPanelVO obj = (UIDrawModelPanelVO)o;
			UnityEngine.GameObject ret = obj.textureNodeGameObject;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index textureNodeGameObject on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_panelGameObject(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIDrawModelPanelVO obj = (UIDrawModelPanelVO)o;
			UnityEngine.GameObject ret = obj.panelGameObject;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index panelGameObject on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_lightEulerAngles(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIDrawModelPanelVO obj = (UIDrawModelPanelVO)o;
			UnityEngine.Vector3 ret = obj.lightEulerAngles;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index lightEulerAngles on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_lightColor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIDrawModelPanelVO obj = (UIDrawModelPanelVO)o;
			UnityEngine.Color ret = obj.lightColor;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index lightColor on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_lightIntensity(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIDrawModelPanelVO obj = (UIDrawModelPanelVO)o;
			float ret = obj.lightIntensity;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index lightIntensity on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_lightShadowStrength(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIDrawModelPanelVO obj = (UIDrawModelPanelVO)o;
			float ret = obj.lightShadowStrength;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index lightShadowStrength on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_prefabKey(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIDrawModelPanelVO obj = (UIDrawModelPanelVO)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.prefabKey = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index prefabKey on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_prefabName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIDrawModelPanelVO obj = (UIDrawModelPanelVO)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.prefabName = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index prefabName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_panelType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIDrawModelPanelVO obj = (UIDrawModelPanelVO)o;
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			obj.panelType = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index panelType on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_textureNodePath(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIDrawModelPanelVO obj = (UIDrawModelPanelVO)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.textureNodePath = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index textureNodePath on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_modelDatas(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIDrawModelPanelVO obj = (UIDrawModelPanelVO)o;
			System.Collections.Generic.List<UIDrawModelData> arg0 = (System.Collections.Generic.List<UIDrawModelData>)ToLua.CheckObject(L, 2, TypeTraits<System.Collections.Generic.List<UIDrawModelData>>.type);
			obj.modelDatas = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index modelDatas on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_optionName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIDrawModelPanelVO obj = (UIDrawModelPanelVO)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.optionName = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index optionName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_textureNodeGameObject(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIDrawModelPanelVO obj = (UIDrawModelPanelVO)o;
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject<UnityEngine.GameObject>(L, 2);
			obj.textureNodeGameObject = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index textureNodeGameObject on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_panelGameObject(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIDrawModelPanelVO obj = (UIDrawModelPanelVO)o;
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject<UnityEngine.GameObject>(L, 2);
			obj.panelGameObject = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index panelGameObject on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_lightEulerAngles(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIDrawModelPanelVO obj = (UIDrawModelPanelVO)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.lightEulerAngles = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index lightEulerAngles on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_lightColor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIDrawModelPanelVO obj = (UIDrawModelPanelVO)o;
			UnityEngine.Color arg0 = ToLua.ToColor(L, 2);
			obj.lightColor = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index lightColor on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_lightIntensity(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIDrawModelPanelVO obj = (UIDrawModelPanelVO)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.lightIntensity = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index lightIntensity on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_lightShadowStrength(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIDrawModelPanelVO obj = (UIDrawModelPanelVO)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.lightShadowStrength = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index lightShadowStrength on a nil value");
		}
	}
}

