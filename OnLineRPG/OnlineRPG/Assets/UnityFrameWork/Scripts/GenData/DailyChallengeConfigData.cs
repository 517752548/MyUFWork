// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by the Excel Editor.
//
//      Changes to this file will be lost if the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections.Generic;
using BetaFramework;
public class DailyChallengeConfigData : TableSOBaseData<int>
{
    //key
    public int ID;

    //评价系统是否开启
    public string levelStar;

    // 第一次弹出评价关卡
    public string rewardStar;

    //第二次弹出评价关卡
    public string rewardCoin;

    private List<float> m_levelStar = new List<float>();
    public float[] LevelStar
    {
        get
        {
            if (m_levelStar.Count == 0)
            {
                Debug.LogError("levelStar:" + levelStar);
                string[] stars = levelStar.Split('|');
                for (int i = 0; i < stars.Length; i++)
                {
                    float star = 0;
                    if (!string.IsNullOrEmpty(stars[i])&&float.TryParse(stars[i],out star))
                    {
                        m_levelStar.Add(star);
                    }
                }
            }
            return m_levelStar.ToArray();

        }
    }
    private List<int> m_RewardStar = new List<int>();
    public int[] RewardStar
    {
        get
        {
            if (m_RewardStar.Count == 0)
            {
                string[] stars = rewardStar.Split('|');
                for (int i = 0; i < stars.Length; i++)
                {
                    int star = 0;
                    if (!string.IsNullOrEmpty(stars[i])&&int.TryParse(stars[i],out star))
                    {
                        m_RewardStar.Add(star);
                    }
                }
            }
            return m_RewardStar.ToArray();

        }
    }

    private List<int> m_RewardCoin = new List<int>();
    public int[] RewardCoin
    {
        get
        {
            if (m_RewardCoin.Count == 0)
            {
                string[] stars = rewardCoin.Split('|');
                for (int i = 0; i < stars.Length; i++)
                {
                    int star = 0;
                    if (!string.IsNullOrEmpty(stars[i])&&int.TryParse(stars[i],out star))
                    {
                        m_RewardCoin.Add(star);
                    }
                }
            }
            return m_RewardCoin.ToArray();

        }
    }
}
