-- Generated by CSharp.lua Compiler
local System = System
local ET
System.import(function (out)
  ET = out.ET
end)
System.namespace("ET", function (namespace)
  namespace.class("ListComponent_1", function (namespace)
    return function (T)
      local Dispose, __ctor__
      local ListT = System.List(T)
      __ctor__ = function (this)
        this.List = ListT()
        ET.Entity.__ctor__(this)
      end
      Dispose = function (this)
        if this:getIsDisposed() then
          return
        end

        ET.Entity.Dispose(this)

        this.List:Clear()
      end
      return {
        base = function (out)
          return {
            out.ET.Entity
          }
        end,
        Dispose = Dispose,
        __ctor__ = __ctor__
      }
    end
  end)

  namespace.class("ListComponentDisposeChildren_1", function (namespace)
    return function (T)
      local Dispose, __ctor__
      local ListT = System.List(T)
      __ctor__ = function (this)
        this.List = ListT()
        ET.Entity.__ctor__(this)
      end
      Dispose = function (this)
        if this:getIsDisposed() then
          return
        end

        ET.Entity.Dispose(this)

        for _, entity in System.each(this.List) do
          entity:Dispose()
        end
        this.List:Clear()
      end
      return {
        base = function (out)
          return {
            out.ET.Entity
          }
        end,
        Dispose = Dispose,
        __ctor__ = __ctor__
      }
    end
  end)
end)
