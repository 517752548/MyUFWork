-- Generated by CSharp.lua Compiler
local System = System
local UnityEngine = UnityEngine
local ET
local ETTaskCompletionSource_1AssetBundle
System.import(function (out)
  ET = out.ET
  ETTaskCompletionSource_1AssetBundle = ET.ETTaskCompletionSource_1(UnityEngine.AssetBundle)
end)
System.namespace("ET", function (namespace)
  namespace.class("AssetsBundleLoaderAsyncSystem", function (namespace)
    local Update
    Update = function (this, self)
      self:Update()
    end
    return {
      base = function (out)
        return {
          out.ET.UpdateSystem_1(out.ET.AssetsBundleLoaderAsync)
        }
      end,
      Update = Update
    }
  end)

  namespace.class("AssetsBundleLoaderAsync", function (namespace)
    local Update, Dispose, LoadAsync, __ctor__
    __ctor__ = function (this)
      ET.Entity.__ctor__(this)
    end
    Update = function (this)
      if not this.request:getisDone() then
        return
      end

      local t = this.tcs
      t:SetResult(this.request:getassetBundle())
    end
    Dispose = function (this)
      if this:getIsDisposed() then
        return
      end
      ET.Entity.Dispose(this)
    end
    LoadAsync = function (this, path)
      this.tcs = ETTaskCompletionSource_1AssetBundle()
      this.request = UnityEngine.AssetBundle.LoadFromFileAsync(path)
      return this.tcs:getTask()
    end
    return {
      base = function (out)
        return {
          out.ET.Entity
        }
      end,
      Update = Update,
      Dispose = Dispose,
      LoadAsync = LoadAsync,
      __ctor__ = __ctor__
    }
  end)
end)
