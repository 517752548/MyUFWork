-- Generated by CSharp.lua Compiler
local System = System
local ET
local DictStringFileVersionInfo
System.import(function (out)
  ET = out.ET
  DictStringFileVersionInfo = System.Dictionary(System.String, ET.FileVersionInfo)
end)
System.namespace("ET", function (namespace)
  namespace.class("FileVersionInfo", function (namespace)
    return {
      Size = 0
    }
  end)

  namespace.class("VersionConfig", function (namespace)
    local EndInit, __ctor__
    __ctor__ = function (this)
      this.FileInfoDict = DictStringFileVersionInfo()
      ET.Object.__ctor__(this)
    end
    EndInit = function (this)
      ET.Object.EndInit(this)

      for _, fileVersionInfo in System.each(this.FileInfoDict:getValues()) do
        this.TotalSize = this.TotalSize + fileVersionInfo.Size
      end
    end
    return {
      base = function (out)
        return {
          out.ET.Object
        }
      end,
      Version = 0,
      TotalSize = 0,
      EndInit = EndInit,
      __ctor__ = __ctor__,
      __metadata__ = function (out)
        return {
          fields = {
            { "FileInfoDict", 0x6, System.Dictionary(System.String, out.ET.FileVersionInfo), out.MongoDB.Bson.Serialization.Attributes.BsonIgnoreAttribute() }
          }
        }
      end
    }
  end)
end)
