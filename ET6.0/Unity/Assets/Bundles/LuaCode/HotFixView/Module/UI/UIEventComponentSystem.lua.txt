-- Generated by CSharp.lua Compiler
local System = System
local ET = ET
local UnityEngine = UnityEngine
System.namespace("ET", function (namespace)
  namespace.class("UIEventComponentAwakeSystem", function (namespace)
    local Awake
    Awake = function (this, self)
      ET.UIEventComponent.Instance = self

      local uiRoot = UnityEngine.GameObject.Find("/Global/UI")
      local referenceCollector = uiRoot:GetComponent(ReferenceCollector)

      self.UILayers:AddKeyValue(0 --[[(int)UILayer.Hidden]], referenceCollector:Get(ET.UILayer.Hidden:EnumToString(ET.UILayer), UnityEngine.GameObject):gettransform())
      self.UILayers:AddKeyValue(10 --[[(int)UILayer.Low]], referenceCollector:Get(ET.UILayer.Low:EnumToString(ET.UILayer), UnityEngine.GameObject):gettransform())
      self.UILayers:AddKeyValue(20 --[[(int)UILayer.Mid]], referenceCollector:Get(ET.UILayer.Mid:EnumToString(ET.UILayer), UnityEngine.GameObject):gettransform())
      self.UILayers:AddKeyValue(30 --[[(int)UILayer.High]], referenceCollector:Get(ET.UILayer.High:EnumToString(ET.UILayer), UnityEngine.GameObject):gettransform())

      local uiEvents = ET.Game.getEventSystem():GetTypes(System.typeof(ET.UIEventAttribute))
      for _, type in System.each(uiEvents) do
        local continue
        repeat
          local attrs = type:GetCustomAttributes(System.typeof(ET.UIEventAttribute), false)
          if #attrs == 0 then
            continue = true
            break
          end

          local uiEventAttribute = System.as(attrs:get(0), ET.UIEventAttribute)
          local aUIEvent = System.as(System.Activator.CreateInstance(type), ET.AUIEvent)
          self.UIEvents:AddKeyValue(uiEventAttribute:getUIType(), aUIEvent)
          continue = true
        until 1
        if not continue then
          break
        end
      end
    end
    return {
      base = function (out)
        return {
          out.ET.AwakeSystem_1(out.ET.UIEventComponent)
        }
      end,
      Awake = Awake
    }
  end)

  -- <summary>
  -- 管理所有UI GameObject 以及UI事件
  -- </summary>
  namespace.class("UIEventComponentSystem", function (namespace)
    local OnCreate, OnRemove
    OnCreate = function (self, uiComponent, uiType)
      return System.async(function (async, self, uiComponent, uiType)
        local default, extern = System.try(function ()
          local ui = async:Await(self.UIEvents:get(uiType):OnCreate(uiComponent))
          local uiLayer = ui.GameObject:GetComponent(ET.UILayerScript).UILayer
          ui.GameObject:gettransform():SetParent(self.UILayers:get(System.Convert.ToInt32(uiLayer)))
          return true, ui
        end, function (default)
          local e = default
          System.throw(System.Exception("on create ui error: " .. uiType, e))
        end)
        if default then
          return extern
        end
      end, nil, self, uiComponent, uiType)
    end
    OnRemove = function (self, uiComponent, uiType)
      System.try(function ()
        self.UIEvents:get(uiType):OnRemove(uiComponent)
      end, function (default)
        local e = default
        System.throw(System.Exception("on remove ui error: " .. uiType, e))
      end)
    end
    return {
      OnCreate = OnCreate,
      OnRemove = OnRemove
    }
  end)
end)
