-- Generated by CSharp.lua Compiler
local System = System
local ET = ET
local UnityEngine = UnityEngine
local ET
System.import(function (out)
  ET = out.ET
end)
System.namespace("ET", function (namespace)
  namespace.class("OperaComponentAwakeSystem", function (namespace)
    local Awake
    Awake = function (this, self)
      self.mapMask = UnityEngine.LayerMask.GetMask("Map")
    end
    return {
      base = function (out)
        return {
          out.ET.AwakeSystem_1(out.ET.OperaComponent)
        }
      end,
      Awake = Awake
    }
  end)

  namespace.class("OperaComponentUpdateSystem", function (namespace)
    local Update
    Update = function (this, self)
      ET.OperaComponentSystem.Update(self)
    end
    return {
      base = function (out)
        return {
          out.ET.UpdateSystem_1(out.ET.OperaComponent)
        }
      end,
      Update = Update
    }
  end)

  namespace.class("OperaComponentSystem", function (namespace)
    local Update, TestActor
    Update = function (self)
      if UnityEngine.Input.GetMouseButtonDown(1) then
        local ray = UnityEngine.Camera.getmain():ScreenPointToRay(UnityEngine.Input.getmousePosition())
        local hit
        local default
        default, hit = UnityEngine.Physics.Raycast(ray, nil, 1000, self.mapMask)
        if default then
          self.ClickPoint = hit:getpoint()
          self.frameClickMap:setX(self.ClickPoint.x)
          self.frameClickMap:setY(self.ClickPoint.y)
          self.frameClickMap:setZ(self.ClickPoint.z)
          ET.SceneHelper.ZoneScene(self):GetComponent(ET.SessionComponent).Session:Send(self.frameClickMap)

          -- 测试actor rpc消息
          TestActor(self):Coroutine()
        end
      end
    end
    TestActor = function (self)
      return System.async(function (async, self)
        System.try(function ()
          local default = ET.C2M_TestActorRequest()
          default:setInfo("actor rpc request")
          local response = System.cast(ET.M2C_TestActorResponse, async:Await(ET.SceneHelper.ZoneScene(self):GetComponent(ET.SessionComponent).Session:Call(default)))
          ET.Log.Info(response:getInfo())
        end, function (default)
          local e = default
          ET.Log.Error(e)
        end)
      end, nil, self)
    end
    return {
      Update = Update,
      TestActor = TestActor
    }
  end)
end)
