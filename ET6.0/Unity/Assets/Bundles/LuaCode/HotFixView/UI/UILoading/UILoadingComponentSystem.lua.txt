-- Generated by CSharp.lua Compiler
local System = System
local ET = ET
local UnityEngine = UnityEngine
local UnityEngineUI = UnityEngine.UI
local ET
System.import(function (out)
  ET = out.ET
end)
System.namespace("ET", function (namespace)
  namespace.class("UiLoadingComponentAwakeSystem", function (namespace)
    local Awake
    Awake = function (this, self)
      self.text = ET.GameObjectHelper.Get(self:GetParent(ET.UI).GameObject, "Text", UnityEngine.GameObject):GetComponent(UnityEngineUI.Text)
    end
    return {
      base = function (out)
        return {
          out.ET.AwakeSystem_1(out.ET.UILoadingComponent)
        }
      end,
      Awake = Awake
    }
  end)

  namespace.class("UiLoadingComponentStartSystem", function (namespace)
    local Start, StartAsync
    Start = function (this, self)
      StartAsync(this, self):Coroutine()
    end
    StartAsync = function (this, self)
      return System.async(function (async, this, self)
        local timerComponent = ET.Game.getScene():GetComponent(ET.TimerComponent)
        local instanceId = self:getInstanceId()
        while true do
          local continue
          repeat
            async:Await(timerComponent:WaitAsync(1000))

            if self:getInstanceId() ~= instanceId then
              return
            end

            local bundleDownloaderComponent = ET.Game.getScene():GetComponent(ET.BundleDownloaderComponent)
            if bundleDownloaderComponent == nil then
              continue = true
              break
            end
            self.text:settext(bundleDownloaderComponent:getProgress() .. "%")
            continue = true
          until 1
          if not continue then
            break
          end
        end
      end, nil, this, self)
    end
    return {
      base = function (out)
        return {
          out.ET.StartSystem_1(out.ET.UILoadingComponent)
        }
      end,
      Start = Start,
      StartAsync = StartAsync
    }
  end)
end)
