#macro( smallType $type)
#if($type == "Byte")int#elseif( $type == "Boolean" )int#elseif( $type == "Short" )int#elseif( $type == "Integer" )int#elseif( $type == "Long" )Long#elseif( $type == "Float" )Number#elseif( $type == "Double" )Number#else$type#end
#end
#macro( bigType $type)
#if( $type == "Integer" )Int#elseif( $type == "Boolean" )Byte#elseif( $type == "String" )UTF#else$type#end
#end
#macro( upperFirstChar $type)$type.substring(0,1).toUpperCase()$type.substring(1)#end
#macro( toLowerCase $type)$type.toLowerCase()#end
package com.renren.framework.net.message.data {
	import com.renren.framework.utils.Long;
	
	public class ${msg.type}_DATA
	{
#foreach( $field in $msg.fields )
		/** $field.comment */
#if($field.list)
		public var ${field.smallName}:Vector.<#smallType($field.clientType)>;
#else
		public var ${field.smallName}:#smallType($field.clientType);
#end
#end	
	}

}