#macro( smallType $type)
#if($type == "Short")short#elseif( $type == "Integer" )int#elseif( $type == "String" )string#elseif( $type == "Byte" )byte#elseif( $type == "Long" )long#elseif( $type == "Float" )float#elseif( $type == "Double" )double#elseif( $type == "Boolean" || $type == "boolean" )bool#else$type#end
#end
using System;
using System.Collections.Generic;
using UnityEngine;

namespace app.db
{
	/**
	 * $comment
	 * 
	 * @author CodeGenerator, don't modify this file please.
	 */
	public abstract class $className : $father
	{
#foreach($field in $fieldsRaw)
#if(!$field.notClient)
	/// <summary>
    /// $field.comment
    /// </summary>
#foreach($anot in $field.anotations)
	//$anot
#end
#if(!$field.isUserDef() && $field.isList())
	public List<#smallType(${field.clientSubType})> $field.fieldName;
#else
	public #smallType($field.clientType) $field.fieldName;
#end

#end
#end

}
}