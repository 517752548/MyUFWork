package com.imop.lj.gameserver.team.msg;

import java.util.HashMap;
import java.util.Map;

import com.imop.lj.core.msg.MessageType;
import com.imop.lj.common.MessageMappingProvider;

/**
 *  Generated by MessageCodeGenerator,don't modify please.
 *  Need to register in<code>GameMessageRecognizer#init</code>
 */
public class TeamMsgMappingProvider implements MessageMappingProvider {

	@Override
	public Map<Short, Class<?>> getMessageMapping() {
		Map<Short, Class<?>> map = new HashMap<Short, Class<?>>();
		map.put(MessageType.CG_TEAM_CREATE, CGTeamCreate.class);
		map.put(MessageType.CG_TEAM_MY, CGTeamMy.class);
		map.put(MessageType.CG_TEAM_AUTO_MATCH, CGTeamAutoMatch.class);
		map.put(MessageType.CG_TEAM_APPLY_LIST, CGTeamApplyList.class);
		map.put(MessageType.CG_TEAM_APPLY_LIST_CLEAN, CGTeamApplyListClean.class);
		map.put(MessageType.CG_TEAM_APPLY_AGREE, CGTeamApplyAgree.class);
		map.put(MessageType.CG_TEAM_CHOOSE_TARGET, CGTeamChooseTarget.class);
		map.put(MessageType.CG_TEAM_SHOW_LIST, CGTeamShowList.class);
		map.put(MessageType.CG_TEAM_APPLY, CGTeamApply.class);
		map.put(MessageType.CG_TEAM_APPLY_AUTO, CGTeamApplyAuto.class);
		map.put(MessageType.CG_TEAM_INVITE_LIST, CGTeamInviteList.class);
		map.put(MessageType.CG_TEAM_INVITE_PLAYER, CGTeamInvitePlayer.class);
		map.put(MessageType.CG_TEAM_INVITE_PLAYER_ANSWER, CGTeamInvitePlayerAnswer.class);
		map.put(MessageType.CG_TEAM_AWAY, CGTeamAway.class);
		map.put(MessageType.CG_TEAM_QUIT, CGTeamQuit.class);
		map.put(MessageType.CG_TEAM_BACK, CGTeamBack.class);
		map.put(MessageType.CG_TEAM_CALL_BACK, CGTeamCallBack.class);
		map.put(MessageType.CG_TEAM_CHAT_SPEAK, CGTeamChatSpeak.class);
		map.put(MessageType.CG_TEAM_CHANGE_POSITION, CGTeamChangePosition.class);
		map.put(MessageType.CG_TEAM_CHANGE_LEADER, CGTeamChangeLeader.class);
		map.put(MessageType.CG_TEAM_KICK, CGTeamKick.class);
		return map;
	}

}
