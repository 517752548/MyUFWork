<?xml version="1.0" encoding="UTF-8" ?>
<project name="buildManageServer.ant" basedir="." default="root">
	<!-- import -->
	<import file="buildManageServer.def.xml" />

<!--
// 版本号信息开始
// 注意: 版本号信息由命令行参数给出!!
///////////////////////////////////////////////////////////////////
//-->
	<!-- 大版本号  -->
	<property name="largeVer" value="cmdArgs" />
	<!-- 代码版本号  -->
	<property name="codeRev" value="cmdArgs" />
	<!-- 语言版本 -->
	<property name="langName" value="cmdArgs" />
	<!-- 多语言资源版本号 -->
	<property name="langRev" value="cmdArgs" />

	<!-- 最终版本号及打包目录 -->
	<property name="pubVer" value="${largeVer}.${codeRev}.${langName}.${langRev}"  />
	<property name="tempDir" value="${tempdir}/${pubVer}/temp" />
	<property name="finalDir" value="${tempdir}/${pubVer}/final/gm_server" />

<!--
// 开始构建
///////////////////////////////////////////////////////////////////
//-->
	<target name="root">
		<echo message="::: 构建 GM 后台" />
		
		<antcall target="clearTempDir" />
		<antcall target="svnExport" />
		<antcall target="buildJava" />
		<antcall target="exportRes" />
		<antcall target="createZip" />
		<antcall target="onComplete" />
	</target>

	<!-- 清理临时目录 -->
	<target name="clearTempDir">
		<echo message="清理临时目录" />
		<deltree dir="${tempDir}" />
		<mkdir dir="${tempDir}" />
		<mkdir dir="${tempDir}/out" />
	</target>

	<!-- svn 代码导出 -->
	<target name="svnExport">
		<!--// 首先导出依赖代码,
			// gm_server 项目需要依赖 core 和 game_db 这两个项目的部分 JAVA 类 -->
		<!-- core/src/com.imop.lj.core -->
		<echo message="从 svn 中导出 core/src/com.imop.lj.core 项目代码" />
		<mkdir dir="${tempDir}/src/com/imop/tr/core" />
		<serverProjBranchesExport 
			projURL="core/src/com/imop/tr/core"
			branchesVer="${largeVer}" 
			codeRev="${codeRev}" 
			exportToDir="${tempDir}/src/com/imop/tr/core" />
		<!-- core/src/com.imop.lj.common -->
		<echo message="从 svn 中导出 core/src/com.imop.lj.common 项目代码" />
		<mkdir dir="${tempDir}/src/com/imop/tr/db/model" />
		<serverProjBranchesExport 
			projURL="core/src/com/imop/tr/common"
			branchesVer="${largeVer}" 
			codeRev="${codeRev}" 
			exportToDir="${tempDir}/src/com/imop/tr/common" />
		<!-- game_db/src/com.imop.lj.db.model -->
		<echo message="从 svn 中导出 core/src/com.imop.lj.common 项目代码" />
		<mkdir dir="${tempDir}/src/com/imop/tr/db/model" />
		<serverProjBranchesExport 
			projURL="game_db/src/com/imop/tr/db/model"
			branchesVer="${largeVer}" 
			codeRev="${codeRev}" 
			exportToDir="${tempDir}/src/com/imop/tr/db/model" />

		<!-- 导出 gm_server 项目代码 -->
		<!-- gm_server/src -->
		<echo message="从 svn 中导出 gm_server/src 项目代码" />
		<serverProjBranchesExport 
			projURL="gm_server/src"
			branchesVer="${largeVer}" 
			codeRev="${codeRev}" 
			exportToDir="${tempDir}/src" />
		<!-- gm_server/web -->
		<echo message="从 svn 中导出 gm_server/web 项目代码" />
		<serverProjBranchesExport 
			projURL="gm_server/web"
			branchesVer="${largeVer}" 
			codeRev="${codeRev}" 
			exportToDir="${tempDir}/out/web" />
		<!-- probe_collector/src -->
		<echo message="从 svn 中导出 probe_collector/src 项目代码" />
		<serverProjBranchesExport 
			projURL="probe_collector/src"
			branchesVer="${largeVer}" 
			codeRev="${codeRev}" 
			exportToDir="${tempDir}/src" />
	</target>

	<!-- 编译代码 -->
	<target name="buildJava">
		<echo message="编译 JAVA 源文件" />

		<path id="lib.manageServer">
	        <path refid="lib.resin" />
	        <path refid="lib.gameServer" />
	        <fileset dir="${tempDir}/out/web/WEB-INF/lib">
	            <include name="**/*.jar" />
	            <include name="**/*.zip" />
	        </fileset>
	    </path>

		<!-- 创建输出目录 -->
		<mkdir dir="${tempDir}/out/web/WEB-INF/classes" />
		<!--// 编译 JAVA 源码, 
			// 注意: lib.gameServer 是常量! 定义在 globals.def.xml 文件中 -->
		<buildJava cp="lib.manageServer"
			src="${tempDir}/src" 
		   	out="${tempDir}/out/web/WEB-INF/classes" />
	</target>

	<!-- svn 导出配置 -->
	<target name="exportRes">
		<!-- core/src/com.imop.lj.core -->
		<echo message="从 svn 中导出 gm_server/resource 项目代码" />
		<serverProjBranchesExport 
			projURL="gm_server/resource"
			branchesVer="${largeVer}" 
			codeRev="${codeRev}" 
			exportToDir="${tempDir}/out/web/WEB-INF/classes" />
	</target>
	
	<!-- 创建 ZIP 文件 -->
	<target name="createZip">
		<!-- 事先复制依赖包 -->
		<echo message="复制依赖包" />
		<copy todir="${tempDir}/jar">
			<fileset dir="${libdir.gameServer}">
				<include name="**/*.zip" />
				<include name="**/*.jar" />
			</fileset>
		</copy>

		<!-- 创建压缩包 -->
		<echo message="创建压缩包 gm_server.zip" />
		<zip destfile="${tempDir}/gm_server.zip">
			<fileset dir="${tempDir}/out/web">
				<include name="**/*.*" />
			</fileset>
		</zip>
	</target>

	<!-- 完成脚本 -->
	<target name="onComplete">
		<move file="${tempDir}/gm_server.zip" tofile="${finalDir}/gm_server.zip" />
	</target>
</project>
