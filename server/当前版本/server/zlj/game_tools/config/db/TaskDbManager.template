package com.imop.lj.gameserver.${lowModelName}.persistance;

import com.imop.lj.core.async.IIoOperation;
import com.imop.lj.db.dao.${daoName};
import com.imop.lj.db.model.${entityName};
import com.imop.lj.gameserver.common.Globals;
import com.imop.lj.gameserver.common.db.operation.DeleteEntityOperation;
import com.imop.lj.gameserver.common.db.operation.SaveObjectOperation;
import com.imop.lj.gameserver.${lowModelName}.${modelName};

public class ${dbManagerName} {
	public static ${dbManagerName} ${lowDbManagerName} = new ${dbManagerName}();
	private ${dbManagerName}(){}
	
	/***
	 * 获得实体
	 */
	public static ${dbManagerName} getInstance(){
		return ${lowDbManagerName};
	}
	
	/***
	 * 保存
	 * @param stepTask
	 * @param async 为true则异步保存，为false则同步保存
	 */
	public void saveTaskEntity(${modelName} stepTask, boolean async){
		IIoOperation _oper = new SaveObjectOperation<${entityName}, ${modelName}>(stepTask, get${modelName}Dao());
		if (async) {
			Globals.getAsyncService().createOperationAndExecuteAtOnce(_oper);
		} else {
			Globals.getAsyncService().createSyncOperationAndExecuteAtOnce(_oper);
		}
	}
	
	/***
	 * 删除
	 * @param stepTask
	 * @param async 为true则异步保存，为false则同步保存
	 */
	public void delTaskEntity(${modelName} stepTask, boolean async) {
		final long _charId = stepTask.getCharId();
		${entityName} landlordEntity = stepTask.toEntity();
		IIoOperation _oper = new DeleteEntityOperation<${entityName}>(landlordEntity, _charId, get${modelName}Dao());
		if (async) {
			Globals.getAsyncService().createOperationAndExecuteAtOnce(_oper);
		} else {
			Globals.getAsyncService().createSyncOperationAndExecuteAtOnce(_oper);
		}
	}
	
	/**
	 * 取得Dao实例
	 * @return
	 */
	private ${daoName} get${modelName}Dao() {
		return Globals.getDaoService().get${modelName}Dao();
	}
}
