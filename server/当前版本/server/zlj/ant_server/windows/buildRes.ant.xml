<?xml version="1.0" encoding="UTF-8" ?>
<project name="buildRes.ant" basedir="." default="root">
	<!-- import -->
	<import file="buildRes.def.xml" />

<!--
// 版本号信息开始
// 注意: 版本号信息由命令行参数给出!!
///////////////////////////////////////////////////////////////////
//-->
	<!-- 大版本号  -->
	<property name="largeVer" value="cmdArgs" />
	<!-- 代码版本号  -->
	<property name="codeRev" value="cmdArgs" />
	<!-- 语言版本 -->
	<property name="langName" value="cmdArgs" />
	<!-- 多语言资源版本号 -->
	<property name="langRev" value="cmdArgs" />
	<!-- 加密 Excel 文件 -->
	<property name="resencFlag" value="cmdArgs" />

	<!-- 最终版本号及打包目录 -->
	<property name="pubVer" 
		value="${largeVer}.${codeRev}.${langName}.${langRev}"  />
	<property name="tmpDir" 
		value="${tempdir}/${pubVer}/temp" />
	<property name="finalDir" 
		value="${tempdir}/${pubVer}/final/server" />

<!--
// 开始构建
///////////////////////////////////////////////////////////////////
//-->
	<target name="root">
		<echo message="::: 构建静态资源" />

		<antcall target="clearTempDir" />
		<antcall target="svnExport" />

		<if>
			<equals arg1="${resencFlag}" arg2="1" />
			<then>
				<!-- 加密资源 -->
				<antcall target="encryptRes" />
			</then>
		</if>

		<antcall target="createZip" />
		<antcall target="onComplete" />
	</target>

	<!-- 清理临时目录 -->
	<target name="clearTempDir">
		<echo message="清理临时目录" />
		<deltree dir="${tmpDir}" />
		<mkdir dir="${tmpDir}" />
		<mkdir dir="${tmpDir}/encrypt" />
	</target>

	<!-- svn 代码导出 -->
	<target name="svnExport">
		<!-- res -->
		<echo message="从 svn 中导出 resources 项目资源" />
		<serverResBrancheExport 
			branchesVer="${largeVer}" 
			codeRev="${codeRev}" 
			exportToDir="${tmpDir}" />
	</target>

	<!-- 加密资源文件 -->
	<target name="encryptRes">
		<echo message="加密 Excel 文件" />

		<!-- 加密 Excel 文件 -->
		<resenc 
			xlsdir="${tmpDir}/scripts" 
			outdir="${tmpDir}/encrypt" />

		<!-- 删除原有 Excel 文件 -->
		<delete>
			<fileset dir="${tmpDir}/scripts">
				<include name="**/*.xls" />
			</fileset>
		</delete>

		<!-- 替换成加密后的文件 -->
		<copy todir="${tmpDir}/scripts">
			<fileset dir="${tmpDir}/encrypt">
				<include name="**/*.xls" />
			</fileset>
		</copy>

		<!-- 删除 encrypt 目录 -->
		<deltree dir="${tmpDir}/encrypt" />
	</target>

	<!-- 创建 ZIP 文件 -->
	<target name="createZip">
		<!-- 创建 ZIP 文件之前, 事先清除 i18n 目录中的内容 -->
		<delete>
			<fileset dir="${tmpDir}/i18n">
				<include name="**/*.xls" />
			</fileset>
		</delete>

		<!-- 创建 ZIP 文件 -->
		<echo message="创建压缩包 resource.zip" />
		<zip destfile="${tmpDir}/resource.zip">
			<fileset dir="${tmpDir}">
				<include name="**/*.xls" />
				<include name="**/*.js" />
			</fileset>
		</zip>
	</target>

	<!-- 完成脚本 -->
	<target name="onComplete">
		<move file="${tmpDir}/resource.zip" tofile="${finalDir}/resource.zip" />
	</target>
</project>