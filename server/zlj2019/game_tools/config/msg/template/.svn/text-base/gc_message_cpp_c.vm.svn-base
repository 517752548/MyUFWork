#macro( smallType $type)
#if($type == "Byte")char#elseif( $type == "String" )const string&#elseif( $type == "Boolean" )bool#elseif( $type == "Short" )short#elseif( $type == "Integer" )int32#elseif( $type == "Long" )int64#else$type *#end
#end
#macro( bigType $type)
#if( $type == "Integer" )INT32#elseif( $type == "Short" )SHORT#elseif( $type == "Byte" )BYTE#elseif( $type == "Boolean" )BOOL#elseif( $type == "Long" )INT64#elseif( $type == "String" )STRING#else$type#end
#end
#macro( lowerCase $type)$type.toLowerCase()#end

\#include "${module}GCMessage.h"

#foreach( $msg in $msgs )
/**
 * $msg.comment
#foreach( $field in $msg.fields )
 * @param $field.smallName $field.comment
#end
 */
void #lowerCase($msg.type)_decode(Stream* data) {
#if($msg.compress)	
	UNCOMPRESS(data);
#end
${msg.fieldCppContent}
	#lowerCase($msg.type)(#foreach( $field in $msg.fields )${field.smallName}#if($velocityCount != $msg.fields.size()),#end#end);
}
#end

void #lowerCase($module)_message_register_decoders() {
#foreach( $msg in $msgs )
	REG_DECODER(${msg.type},#lowerCase($msg.type)_decode);
#end
}

